/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "?d36c":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?2fb5":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?59cb":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?232a":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/_assert.js":
/*!***********************************************!*\
  !*** ./node_modules/@noble/hashes/_assert.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports[\"default\"] = assert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL19hc3NlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxHQUFHLGNBQWMsR0FBRyxZQUFZLEdBQUcsYUFBYSxHQUFHLFlBQVksR0FBRyxjQUFjO0FBQzlGO0FBQ0E7QUFDQSxtREFBbUQsRUFBRTtBQUNyRDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0EsaURBQWlELEVBQUU7QUFDbkQ7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsUUFBUSxrQkFBa0IsU0FBUztBQUNoRztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLElBQUk7QUFDckY7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX2Fzc2VydC5qcz80Yzk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vdXRwdXQgPSBleHBvcnRzLmV4aXN0cyA9IGV4cG9ydHMuaGFzaCA9IGV4cG9ydHMuYnl0ZXMgPSBleHBvcnRzLmJvb2wgPSBleHBvcnRzLm51bWJlciA9IHZvaWQgMDtcbmZ1bmN0aW9uIG51bWJlcihuKSB7XG4gICAgaWYgKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihuKSB8fCBuIDwgMClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXcm9uZyBwb3NpdGl2ZSBpbnRlZ2VyOiAke259YCk7XG59XG5leHBvcnRzLm51bWJlciA9IG51bWJlcjtcbmZ1bmN0aW9uIGJvb2woYikge1xuICAgIGlmICh0eXBlb2YgYiAhPT0gJ2Jvb2xlYW4nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGJvb2xlYW4sIG5vdCAke2J9YCk7XG59XG5leHBvcnRzLmJvb2wgPSBib29sO1xuZnVuY3Rpb24gYnl0ZXMoYiwgLi4ubGVuZ3Rocykge1xuICAgIGlmICghKGIgaW5zdGFuY2VvZiBVaW50OEFycmF5KSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgVWludDhBcnJheScpO1xuICAgIGlmIChsZW5ndGhzLmxlbmd0aCA+IDAgJiYgIWxlbmd0aHMuaW5jbHVkZXMoYi5sZW5ndGgpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBVaW50OEFycmF5IG9mIGxlbmd0aCAke2xlbmd0aHN9LCBub3Qgb2YgbGVuZ3RoPSR7Yi5sZW5ndGh9YCk7XG59XG5leHBvcnRzLmJ5dGVzID0gYnl0ZXM7XG5mdW5jdGlvbiBoYXNoKGhhc2gpIHtcbiAgICBpZiAodHlwZW9mIGhhc2ggIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGhhc2guY3JlYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggc2hvdWxkIGJlIHdyYXBwZWQgYnkgdXRpbHMud3JhcENvbnN0cnVjdG9yJyk7XG4gICAgbnVtYmVyKGhhc2gub3V0cHV0TGVuKTtcbiAgICBudW1iZXIoaGFzaC5ibG9ja0xlbik7XG59XG5leHBvcnRzLmhhc2ggPSBoYXNoO1xuZnVuY3Rpb24gZXhpc3RzKGluc3RhbmNlLCBjaGVja0ZpbmlzaGVkID0gdHJ1ZSkge1xuICAgIGlmIChpbnN0YW5jZS5kZXN0cm95ZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCBpbnN0YW5jZSBoYXMgYmVlbiBkZXN0cm95ZWQnKTtcbiAgICBpZiAoY2hlY2tGaW5pc2hlZCAmJiBpbnN0YW5jZS5maW5pc2hlZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoI2RpZ2VzdCgpIGhhcyBhbHJlYWR5IGJlZW4gY2FsbGVkJyk7XG59XG5leHBvcnRzLmV4aXN0cyA9IGV4aXN0cztcbmZ1bmN0aW9uIG91dHB1dChvdXQsIGluc3RhbmNlKSB7XG4gICAgYnl0ZXMob3V0KTtcbiAgICBjb25zdCBtaW4gPSBpbnN0YW5jZS5vdXRwdXRMZW47XG4gICAgaWYgKG91dC5sZW5ndGggPCBtaW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBkaWdlc3RJbnRvKCkgZXhwZWN0cyBvdXRwdXQgYnVmZmVyIG9mIGxlbmd0aCBhdCBsZWFzdCAke21pbn1gKTtcbiAgICB9XG59XG5leHBvcnRzLm91dHB1dCA9IG91dHB1dDtcbmNvbnN0IGFzc2VydCA9IHtcbiAgICBudW1iZXIsXG4gICAgYm9vbCxcbiAgICBieXRlcyxcbiAgICBoYXNoLFxuICAgIGV4aXN0cyxcbiAgICBvdXRwdXQsXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gYXNzZXJ0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/_assert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/_sha2.js":
/*!*********************************************!*\
  !*** ./node_modules/@noble/hashes/_sha2.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SHA2 = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/_assert.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL19zaGEyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWixxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQyxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseUJBQXlCO0FBQ3pDO0FBQ0E7QUFDQSwwQkFBMEIsVUFBVTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DLGNBQWMsTUFBTTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsY0FBYztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQXFEO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3NoYTIuanM/NjEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU0hBMiA9IHZvaWQgMDtcbmNvbnN0IF9hc3NlcnRfanNfMSA9IHJlcXVpcmUoXCIuL19hc3NlcnQuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmNsYXNzIFNIQTIgZXh0ZW5kcyB1dGlsc19qc18xLkhhc2gge1xuICAgIGNvbnN0cnVjdG9yKGJsb2NrTGVuLCBvdXRwdXRMZW4sIHBhZE9mZnNldCwgaXNMRSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0aGlzLnBhZE9mZnNldCA9IHBhZE9mZnNldDtcbiAgICAgICAgdGhpcy5pc0xFID0gaXNMRTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIHRoaXMudmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKHRoaXMuYnVmZmVyKTtcbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuZXhpc3RzKHRoaXMpO1xuICAgICAgICBjb25zdCB7IHZpZXcsIGJ1ZmZlciwgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIGRhdGEgPSAoMCwgdXRpbHNfanNfMS50b0J5dGVzKShkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgLy8gRmFzdCBwYXRoOiB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBibG9jayBpbiBpbnB1dCwgY2FzdCBpdCB0byB2aWV3IGFuZCBwcm9jZXNzXG4gICAgICAgICAgICBpZiAodGFrZSA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhVmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKGRhdGEpO1xuICAgICAgICAgICAgICAgIGZvciAoOyBibG9ja0xlbiA8PSBsZW4gLSBwb3M7IHBvcyArPSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzKGRhdGFWaWV3LCBwb3MpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyLnNldChkYXRhLnN1YmFycmF5KHBvcywgcG9zICsgdGFrZSksIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvcyA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICB0aGlzLnJvdW5kQ2xlYW4oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIF9hc3NlcnRfanNfMS5kZWZhdWx0LmV4aXN0cyh0aGlzKTtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQub3V0cHV0KG91dCwgdGhpcyk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAvLyBQYWRkaW5nXG4gICAgICAgIC8vIFdlIGNhbiBhdm9pZCBhbGxvY2F0aW9uIG9mIGJ1ZmZlciBmb3IgcGFkZGluZyBjb21wbGV0ZWx5IGlmIGl0XG4gICAgICAgIC8vIHdhcyBwcmV2aW91c2x5IG5vdCBhbGxvY2F0ZWQgaGVyZS4gQnV0IGl0IHdvbid0IGNoYW5nZSBwZXJmb3JtYW5jZS5cbiAgICAgICAgY29uc3QgeyBidWZmZXIsIHZpZXcsIGJsb2NrTGVuLCBpc0xFIH0gPSB0aGlzO1xuICAgICAgICBsZXQgeyBwb3MgfSA9IHRoaXM7XG4gICAgICAgIC8vIGFwcGVuZCB0aGUgYml0ICcxJyB0byB0aGUgbWVzc2FnZVxuICAgICAgICBidWZmZXJbcG9zKytdID0gMGIxMDAwMDAwMDtcbiAgICAgICAgdGhpcy5idWZmZXIuc3ViYXJyYXkocG9zKS5maWxsKDApO1xuICAgICAgICAvLyB3ZSBoYXZlIGxlc3MgdGhhbiBwYWRPZmZzZXQgbGVmdCBpbiBidWZmZXIsIHNvIHdlIGNhbm5vdCBwdXQgbGVuZ3RoIGluIGN1cnJlbnQgYmxvY2ssIG5lZWQgcHJvY2VzcyBpdCBhbmQgcGFkIGFnYWluXG4gICAgICAgIGlmICh0aGlzLnBhZE9mZnNldCA+IGJsb2NrTGVuIC0gcG9zKSB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICBwb3MgPSAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIFBhZCB1bnRpbCBmdWxsIGJsb2NrIGJ5dGUgd2l0aCB6ZXJvc1xuICAgICAgICBmb3IgKGxldCBpID0gcG9zOyBpIDwgYmxvY2tMZW47IGkrKylcbiAgICAgICAgICAgIGJ1ZmZlcltpXSA9IDA7XG4gICAgICAgIC8vIE5vdGU6IHNoYTUxMiByZXF1aXJlcyBsZW5ndGggdG8gYmUgMTI4Yml0IGludGVnZXIsIGJ1dCBsZW5ndGggaW4gSlMgd2lsbCBvdmVyZmxvdyBiZWZvcmUgdGhhdFxuICAgICAgICAvLyBZb3UgbmVlZCB0byB3cml0ZSBhcm91bmQgMiBleGFieXRlcyAodTY0X21heCAvIDggLyAoMTAyNCoqNikpIGZvciB0aGlzIHRvIGhhcHBlbi5cbiAgICAgICAgLy8gU28gd2UganVzdCB3cml0ZSBsb3dlc3QgNjQgYml0cyBvZiB0aGF0IHZhbHVlLlxuICAgICAgICBzZXRCaWdVaW50NjQodmlldywgYmxvY2tMZW4gLSA4LCBCaWdJbnQodGhpcy5sZW5ndGggKiA4KSwgaXNMRSk7XG4gICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgY29uc3Qgb3ZpZXcgPSAoMCwgdXRpbHNfanNfMS5jcmVhdGVWaWV3KShvdXQpO1xuICAgICAgICBjb25zdCBsZW4gPSB0aGlzLm91dHB1dExlbjtcbiAgICAgICAgLy8gTk9URTogd2UgZG8gZGl2aXNpb24gYnkgNCBsYXRlciwgd2hpY2ggc2hvdWxkIGJlIGZ1c2VkIGluIHNpbmdsZSBvcCB3aXRoIG1vZHVsbyBieSBKSVRcbiAgICAgICAgaWYgKGxlbiAlIDQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ19zaGEyOiBvdXRwdXRMZW4gc2hvdWxkIGJlIGFsaWduZWQgdG8gMzJiaXQnKTtcbiAgICAgICAgY29uc3Qgb3V0TGVuID0gbGVuIC8gNDtcbiAgICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldCgpO1xuICAgICAgICBpZiAob3V0TGVuID4gc3RhdGUubGVuZ3RoKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdfc2hhMjogb3V0cHV0TGVuIGJpZ2dlciB0aGFuIHN0YXRlJyk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3V0TGVuOyBpKyspXG4gICAgICAgICAgICBvdmlldy5zZXRVaW50MzIoNCAqIGksIHN0YXRlW2ldLCBpc0xFKTtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgb3V0cHV0TGVuIH0gPSB0aGlzO1xuICAgICAgICB0aGlzLmRpZ2VzdEludG8oYnVmZmVyKTtcbiAgICAgICAgY29uc3QgcmVzID0gYnVmZmVyLnNsaWNlKDAsIG91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIHRvIHx8ICh0byA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKCkpO1xuICAgICAgICB0by5zZXQoLi4udGhpcy5nZXQoKSk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIGJ1ZmZlciwgbGVuZ3RoLCBmaW5pc2hlZCwgZGVzdHJveWVkLCBwb3MgfSA9IHRoaXM7XG4gICAgICAgIHRvLmxlbmd0aCA9IGxlbmd0aDtcbiAgICAgICAgdG8ucG9zID0gcG9zO1xuICAgICAgICB0by5maW5pc2hlZCA9IGZpbmlzaGVkO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSBkZXN0cm95ZWQ7XG4gICAgICAgIGlmIChsZW5ndGggJSBibG9ja0xlbilcbiAgICAgICAgICAgIHRvLmJ1ZmZlci5zZXQoYnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbn1cbmV4cG9ydHMuU0hBMiA9IFNIQTI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/_sha2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/cryptoBrowser.js":
/*!*****************************************************!*\
  !*** ./node_modules/@noble/hashes/cryptoBrowser.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2NyeXB0b0Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGNBQWM7QUFDZDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvY3J5cHRvQnJvd3Nlci5qcz84NjdiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcnlwdG8gPSB2b2lkIDA7XG5leHBvcnRzLmNyeXB0byA9IHtcbiAgICBub2RlOiB1bmRlZmluZWQsXG4gICAgd2ViOiB0eXBlb2Ygc2VsZiA9PT0gJ29iamVjdCcgJiYgJ2NyeXB0bycgaW4gc2VsZiA/IHNlbGYuY3J5cHRvIDogdW5kZWZpbmVkLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/cryptoBrowser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/hmac.js":
/*!********************************************!*\
  !*** ./node_modules/@noble/hashes/hmac.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hmac = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/_assert.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2htYWMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFjO0FBQzNDLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFO0FBQ2pFLGdCQUFnQix5REFBeUQ7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2htYWMuanM/NmY4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaG1hYyA9IHZvaWQgMDtcbmNvbnN0IF9hc3NlcnRfanNfMSA9IHJlcXVpcmUoXCIuL19hc3NlcnQuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG4vLyBITUFDIChSRkMgMjEwNClcbmNsYXNzIEhNQUMgZXh0ZW5kcyB1dGlsc19qc18xLkhhc2gge1xuICAgIGNvbnN0cnVjdG9yKGhhc2gsIF9rZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICBfYXNzZXJ0X2pzXzEuZGVmYXVsdC5oYXNoKGhhc2gpO1xuICAgICAgICBjb25zdCBrZXkgPSAoMCwgdXRpbHNfanNfMS50b0J5dGVzKShfa2V5KTtcbiAgICAgICAgdGhpcy5pSGFzaCA9IGhhc2guY3JlYXRlKCk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5pSGFzaC51cGRhdGUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBpbnN0YW5jZSBvZiBjbGFzcyB3aGljaCBleHRlbmRzIHV0aWxzLkhhc2gnKTtcbiAgICAgICAgdGhpcy5ibG9ja0xlbiA9IHRoaXMuaUhhc2guYmxvY2tMZW47XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gdGhpcy5pSGFzaC5vdXRwdXRMZW47XG4gICAgICAgIGNvbnN0IGJsb2NrTGVuID0gdGhpcy5ibG9ja0xlbjtcbiAgICAgICAgY29uc3QgcGFkID0gbmV3IFVpbnQ4QXJyYXkoYmxvY2tMZW4pO1xuICAgICAgICAvLyBibG9ja0xlbiBjYW4gYmUgYmlnZ2VyIHRoYW4gb3V0cHV0TGVuXG4gICAgICAgIHBhZC5zZXQoa2V5Lmxlbmd0aCA+IGJsb2NrTGVuID8gaGFzaC5jcmVhdGUoKS51cGRhdGUoa2V5KS5kaWdlc3QoKSA6IGtleSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFkLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgcGFkW2ldIF49IDB4MzY7XG4gICAgICAgIHRoaXMuaUhhc2gudXBkYXRlKHBhZCk7XG4gICAgICAgIC8vIEJ5IGRvaW5nIHVwZGF0ZSAocHJvY2Vzc2luZyBvZiBmaXJzdCBibG9jaykgb2Ygb3V0ZXIgaGFzaCBoZXJlIHdlIGNhbiByZS11c2UgaXQgYmV0d2VlbiBtdWx0aXBsZSBjYWxscyB2aWEgY2xvbmVcbiAgICAgICAgdGhpcy5vSGFzaCA9IGhhc2guY3JlYXRlKCk7XG4gICAgICAgIC8vIFVuZG8gaW50ZXJuYWwgWE9SICYmIGFwcGx5IG91dGVyIFhPUlxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHBhZFtpXSBePSAweDM2IF4gMHg1YztcbiAgICAgICAgdGhpcy5vSGFzaC51cGRhdGUocGFkKTtcbiAgICAgICAgcGFkLmZpbGwoMCk7XG4gICAgfVxuICAgIHVwZGF0ZShidWYpIHtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuZXhpc3RzKHRoaXMpO1xuICAgICAgICB0aGlzLmlIYXNoLnVwZGF0ZShidWYpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0SW50byhvdXQpIHtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuZXhpc3RzKHRoaXMpO1xuICAgICAgICBfYXNzZXJ0X2pzXzEuZGVmYXVsdC5ieXRlcyhvdXQsIHRoaXMub3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuaUhhc2guZGlnZXN0SW50byhvdXQpO1xuICAgICAgICB0aGlzLm9IYXNoLnVwZGF0ZShvdXQpO1xuICAgICAgICB0aGlzLm9IYXNoLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5vSGFzaC5vdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAgX2Nsb25lSW50byh0bykge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IGluc3RhbmNlIHdpdGhvdXQgY2FsbGluZyBjb25zdHJ1Y3RvciBzaW5jZSBrZXkgYWxyZWFkeSBpbiBzdGF0ZSBhbmQgd2UgZG9uJ3Qga25vdyBpdC5cbiAgICAgICAgdG8gfHwgKHRvID0gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcyksIHt9KSk7XG4gICAgICAgIGNvbnN0IHsgb0hhc2gsIGlIYXNoLCBmaW5pc2hlZCwgZGVzdHJveWVkLCBibG9ja0xlbiwgb3V0cHV0TGVuIH0gPSB0aGlzO1xuICAgICAgICB0byA9IHRvO1xuICAgICAgICB0by5maW5pc2hlZCA9IGZpbmlzaGVkO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSBkZXN0cm95ZWQ7XG4gICAgICAgIHRvLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRvLm91dHB1dExlbiA9IG91dHB1dExlbjtcbiAgICAgICAgdG8ub0hhc2ggPSBvSGFzaC5fY2xvbmVJbnRvKHRvLm9IYXNoKTtcbiAgICAgICAgdG8uaUhhc2ggPSBpSGFzaC5fY2xvbmVJbnRvKHRvLmlIYXNoKTtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XG4gICAgICAgIHRoaXMub0hhc2guZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmlIYXNoLmRlc3Ryb3koKTtcbiAgICB9XG59XG4vKipcbiAqIEhNQUM6IFJGQzIxMDQgbWVzc2FnZSBhdXRoZW50aWNhdGlvbiBjb2RlLlxuICogQHBhcmFtIGhhc2ggLSBmdW5jdGlvbiB0aGF0IHdvdWxkIGJlIHVzZWQgZS5nLiBzaGEyNTZcbiAqIEBwYXJhbSBrZXkgLSBtZXNzYWdlIGtleVxuICogQHBhcmFtIG1lc3NhZ2UgLSBtZXNzYWdlIGRhdGFcbiAqL1xuY29uc3QgaG1hYyA9IChoYXNoLCBrZXksIG1lc3NhZ2UpID0+IG5ldyBITUFDKGhhc2gsIGtleSkudXBkYXRlKG1lc3NhZ2UpLmRpZ2VzdCgpO1xuZXhwb3J0cy5obWFjID0gaG1hYztcbmV4cG9ydHMuaG1hYy5jcmVhdGUgPSAoaGFzaCwga2V5KSA9PiBuZXcgSE1BQyhoYXNoLCBrZXkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/hmac.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/sha256.js":
/*!**********************************************!*\
  !*** ./node_modules/@noble/hashes/sha256.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/_sha2.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/@noble/hashes/utils.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = __webpack_require__(/*! @noble/hashes/crypto */ \"(app-pages-browser)/./node_modules/@noble/hashes/cryptoBrowser.js\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/secp256k1/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@noble/secp256k1/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = __webpack_require__(/*! crypto */ \"?2fb5\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexports.CURVE = CURVE;\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = exports.utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => exports.utils.hashToPrivateKey(exports.utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(exports.utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/secp256k1/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/appConfig.js":
/*!*********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/appConfig.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppConfig: function() { return /* binding */ AppConfig; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\n\nclass AppConfig {\n    constructor(scopes = _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SCOPE.slice(), appDomain = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.getGlobalObject)('location', { returnEmptyObject: true })\n        ?.origin, redirectPath = '', manifestPath = '/manifest.json', coreNode = undefined, authenticatorURL = _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_BLOCKSTACK_HOST) {\n        this.appDomain = appDomain;\n        this.scopes = scopes;\n        this.redirectPath = redirectPath;\n        this.manifestPath = manifestPath;\n        this.coreNode = coreNode;\n        this.authenticatorURL = authenticatorURL;\n    }\n    redirectURI() {\n        return `${this.appDomain}${this.redirectPath}`;\n    }\n    manifestURI() {\n        return `${this.appDomain}${this.manifestPath}`;\n    }\n}\n//# sourceMappingURL=appConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vYXBwQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRTtBQUNwQjtBQUMxQztBQUNQLHlCQUF5QixxREFBYSxzQkFBc0IsK0RBQWUsZUFBZSx5QkFBeUI7QUFDbkgsK0dBQStHLCtEQUF1QjtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWUsRUFBRSxrQkFBa0I7QUFDckQ7QUFDQTtBQUNBLGtCQUFrQixlQUFlLEVBQUUsa0JBQWtCO0FBQ3JEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9hdXRoL2Rpc3QvZXNtL2FwcENvbmZpZy5qcz9iZTZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFRkFVTFRfU0NPUEUsIERFRkFVTFRfQkxPQ0tTVEFDS19IT1NUIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgZ2V0R2xvYmFsT2JqZWN0IH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuZXhwb3J0IGNsYXNzIEFwcENvbmZpZyB7XG4gICAgY29uc3RydWN0b3Ioc2NvcGVzID0gREVGQVVMVF9TQ09QRS5zbGljZSgpLCBhcHBEb21haW4gPSBnZXRHbG9iYWxPYmplY3QoJ2xvY2F0aW9uJywgeyByZXR1cm5FbXB0eU9iamVjdDogdHJ1ZSB9KVxuICAgICAgICA/Lm9yaWdpbiwgcmVkaXJlY3RQYXRoID0gJycsIG1hbmlmZXN0UGF0aCA9ICcvbWFuaWZlc3QuanNvbicsIGNvcmVOb2RlID0gdW5kZWZpbmVkLCBhdXRoZW50aWNhdG9yVVJMID0gREVGQVVMVF9CTE9DS1NUQUNLX0hPU1QpIHtcbiAgICAgICAgdGhpcy5hcHBEb21haW4gPSBhcHBEb21haW47XG4gICAgICAgIHRoaXMuc2NvcGVzID0gc2NvcGVzO1xuICAgICAgICB0aGlzLnJlZGlyZWN0UGF0aCA9IHJlZGlyZWN0UGF0aDtcbiAgICAgICAgdGhpcy5tYW5pZmVzdFBhdGggPSBtYW5pZmVzdFBhdGg7XG4gICAgICAgIHRoaXMuY29yZU5vZGUgPSBjb3JlTm9kZTtcbiAgICAgICAgdGhpcy5hdXRoZW50aWNhdG9yVVJMID0gYXV0aGVudGljYXRvclVSTDtcbiAgICB9XG4gICAgcmVkaXJlY3RVUkkoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLmFwcERvbWFpbn0ke3RoaXMucmVkaXJlY3RQYXRofWA7XG4gICAgfVxuICAgIG1hbmlmZXN0VVJJKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5hcHBEb21haW59JHt0aGlzLm1hbmlmZXN0UGF0aH1gO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcENvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/appConfig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/constants.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOCKSTACK_APP_PRIVATE_KEY_LABEL: function() { return /* binding */ BLOCKSTACK_APP_PRIVATE_KEY_LABEL; },\n/* harmony export */   BLOCKSTACK_HANDLER: function() { return /* binding */ BLOCKSTACK_HANDLER; },\n/* harmony export */   BLOCKSTACK_STORAGE_LABEL: function() { return /* binding */ BLOCKSTACK_STORAGE_LABEL; },\n/* harmony export */   DEFAULT_BLOCKSTACK_HOST: function() { return /* binding */ DEFAULT_BLOCKSTACK_HOST; },\n/* harmony export */   DEFAULT_CORE_NODE: function() { return /* binding */ DEFAULT_CORE_NODE; },\n/* harmony export */   DEFAULT_PROFILE: function() { return /* binding */ DEFAULT_PROFILE; },\n/* harmony export */   DEFAULT_SCOPE: function() { return /* binding */ DEFAULT_SCOPE; },\n/* harmony export */   LOCALSTORAGE_SESSION_KEY: function() { return /* binding */ LOCALSTORAGE_SESSION_KEY; },\n/* harmony export */   NAME_LOOKUP_PATH: function() { return /* binding */ NAME_LOOKUP_PATH; }\n/* harmony export */ });\nconst BLOCKSTACK_HANDLER = 'blockstack';\nconst BLOCKSTACK_STORAGE_LABEL = 'blockstack';\nconst DEFAULT_BLOCKSTACK_HOST = 'https://browser.blockstack.org/auth';\nconst DEFAULT_PROFILE = {\n    '@type': 'Person',\n    '@context': 'http://schema.org',\n};\nconst DEFAULT_SCOPE = [\"store_write\"];\nconst BLOCKSTACK_APP_PRIVATE_KEY_LABEL = 'blockstack-transit-private-key';\nconst DEFAULT_CORE_NODE = 'https://stacks-node-api.stacks.co';\nconst NAME_LOOKUP_PATH = '/v1/names';\nconst LOCALSTORAGE_SESSION_KEY = 'blockstack-session';\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzP2Q1MWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEJMT0NLU1RBQ0tfSEFORExFUiA9ICdibG9ja3N0YWNrJztcbmV4cG9ydCBjb25zdCBCTE9DS1NUQUNLX1NUT1JBR0VfTEFCRUwgPSAnYmxvY2tzdGFjayc7XG5leHBvcnQgY29uc3QgREVGQVVMVF9CTE9DS1NUQUNLX0hPU1QgPSAnaHR0cHM6Ly9icm93c2VyLmJsb2Nrc3RhY2sub3JnL2F1dGgnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUFJPRklMRSA9IHtcbiAgICAnQHR5cGUnOiAnUGVyc29uJyxcbiAgICAnQGNvbnRleHQnOiAnaHR0cDovL3NjaGVtYS5vcmcnLFxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NDT1BFID0gW1wic3RvcmVfd3JpdGVcIl07XG5leHBvcnQgY29uc3QgQkxPQ0tTVEFDS19BUFBfUFJJVkFURV9LRVlfTEFCRUwgPSAnYmxvY2tzdGFjay10cmFuc2l0LXByaXZhdGUta2V5JztcbmV4cG9ydCBjb25zdCBERUZBVUxUX0NPUkVfTk9ERSA9ICdodHRwczovL3N0YWNrcy1ub2RlLWFwaS5zdGFja3MuY28nO1xuZXhwb3J0IGNvbnN0IE5BTUVfTE9PS1VQX1BBVEggPSAnL3YxL25hbWVzJztcbmV4cG9ydCBjb25zdCBMT0NBTFNUT1JBR0VfU0VTU0lPTl9LRVkgPSAnYmxvY2tzdGFjay1zZXNzaW9uJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/dids.js":
/*!****************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/dids.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAddressFromDID: function() { return /* binding */ getAddressFromDID; },\n/* harmony export */   getDIDType: function() { return /* binding */ getDIDType; },\n/* harmony export */   makeDIDFromAddress: function() { return /* binding */ makeDIDFromAddress; },\n/* harmony export */   makeDIDFromPublicKey: function() { return /* binding */ makeDIDFromPublicKey; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\");\n\nfunction makeDIDFromAddress(address) {\n    return `did:btc-addr:${address}`;\n}\nfunction makeDIDFromPublicKey(publicKey) {\n    return `did:ecdsa-pub:${publicKey}`;\n}\nfunction getDIDType(decentralizedID) {\n    const didParts = decentralizedID.split(':');\n    if (didParts.length !== 3) {\n        throw new _stacks_common__WEBPACK_IMPORTED_MODULE_0__.InvalidDIDError('Decentralized IDs must have 3 parts');\n    }\n    if (didParts[0].toLowerCase() !== 'did') {\n        throw new _stacks_common__WEBPACK_IMPORTED_MODULE_0__.InvalidDIDError('Decentralized IDs must start with \"did\"');\n    }\n    return didParts[1].toLowerCase();\n}\nfunction getAddressFromDID(decentralizedID) {\n    if (decentralizedID) {\n        const didType = getDIDType(decentralizedID);\n        if (didType === 'btc-addr') {\n            return decentralizedID.split(':')[2];\n        }\n        else {\n            return undefined;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=dids.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vZGlkcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUMxQztBQUNQLDJCQUEyQixRQUFRO0FBQ25DO0FBQ087QUFDUCw0QkFBNEIsVUFBVTtBQUN0QztBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQiwyREFBZTtBQUNqQztBQUNBO0FBQ0Esa0JBQWtCLDJEQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vZGlkcy5qcz80MzdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludmFsaWRESURFcnJvciB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmV4cG9ydCBmdW5jdGlvbiBtYWtlRElERnJvbUFkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiBgZGlkOmJ0Yy1hZGRyOiR7YWRkcmVzc31gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VESURGcm9tUHVibGljS2V5KHB1YmxpY0tleSkge1xuICAgIHJldHVybiBgZGlkOmVjZHNhLXB1Yjoke3B1YmxpY0tleX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERJRFR5cGUoZGVjZW50cmFsaXplZElEKSB7XG4gICAgY29uc3QgZGlkUGFydHMgPSBkZWNlbnRyYWxpemVkSUQuc3BsaXQoJzonKTtcbiAgICBpZiAoZGlkUGFydHMubGVuZ3RoICE9PSAzKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkRElERXJyb3IoJ0RlY2VudHJhbGl6ZWQgSURzIG11c3QgaGF2ZSAzIHBhcnRzJyk7XG4gICAgfVxuICAgIGlmIChkaWRQYXJ0c1swXS50b0xvd2VyQ2FzZSgpICE9PSAnZGlkJykge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZERJREVycm9yKCdEZWNlbnRyYWxpemVkIElEcyBtdXN0IHN0YXJ0IHdpdGggXCJkaWRcIicpO1xuICAgIH1cbiAgICByZXR1cm4gZGlkUGFydHNbMV0udG9Mb3dlckNhc2UoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRBZGRyZXNzRnJvbURJRChkZWNlbnRyYWxpemVkSUQpIHtcbiAgICBpZiAoZGVjZW50cmFsaXplZElEKSB7XG4gICAgICAgIGNvbnN0IGRpZFR5cGUgPSBnZXRESURUeXBlKGRlY2VudHJhbGl6ZWRJRCk7XG4gICAgICAgIGlmIChkaWRUeXBlID09PSAnYnRjLWFkZHInKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVjZW50cmFsaXplZElELnNwbGl0KCc6JylbMl07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaWRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/dids.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/messages.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/messages.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decryptPrivateKey: function() { return /* binding */ decryptPrivateKey; },\n/* harmony export */   encryptPrivateKey: function() { return /* binding */ encryptPrivateKey; },\n/* harmony export */   generateTransitKey: function() { return /* binding */ generateTransitKey; },\n/* harmony export */   makeAuthRequest: function() { return /* binding */ makeAuthRequest; },\n/* harmony export */   makeAuthRequestToken: function() { return /* binding */ makeAuthRequestToken; },\n/* harmony export */   makeAuthResponse: function() { return /* binding */ makeAuthResponse; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/encryption */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\");\n/* harmony import */ var _stacks_encryption__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stacks/encryption */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/ec.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsontokens */ \"(app-pages-browser)/./node_modules/jsontokens/lib/index.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsontokens__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js\");\n/* harmony import */ var _dids__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dids */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/dids.js\");\n\n\n\n\n\nconst VERSION = '1.4.0';\nfunction generateTransitKey() {\n    const transitKey = (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_1__.makeECPrivateKey)();\n    return transitKey;\n}\nconst makeAuthRequest = makeAuthRequestToken;\nfunction makeAuthRequestToken(transitPrivateKey, redirectURI, manifestURI, scopes = _constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_SCOPE.slice(), appDomain, expiresAt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.nextMonth)().getTime(), extraParams = {}) {\n    const getWindowOrigin = (paramName) => {\n        const location = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.getGlobalObject)('location', {\n            throwIfUnavailable: true,\n            usageDesc: `makeAuthRequest([${paramName}=undefined])`,\n        });\n        return location?.origin;\n    };\n    if (!redirectURI) {\n        redirectURI = `${getWindowOrigin('redirectURI')}/`;\n    }\n    if (!manifestURI) {\n        manifestURI = `${getWindowOrigin('manifestURI')}/manifest.json`;\n    }\n    if (!appDomain) {\n        appDomain = getWindowOrigin('appDomain');\n    }\n    const payload = Object.assign({}, extraParams, {\n        jti: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.makeUUID4)(),\n        iat: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(expiresAt / 1000),\n        iss: null,\n        public_keys: [],\n        domain_name: appDomain,\n        manifest_uri: manifestURI,\n        redirect_uri: redirectURI,\n        version: VERSION,\n        do_not_include_profile: true,\n        supports_hub_url: true,\n        scopes,\n    });\n    const publicKey = jsontokens__WEBPACK_IMPORTED_MODULE_0__.SECP256K1Client.derivePublicKey(transitPrivateKey);\n    payload.public_keys = [publicKey];\n    const address = (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_1__.publicKeyToBtcAddress)(publicKey);\n    payload.iss = (0,_dids__WEBPACK_IMPORTED_MODULE_4__.makeDIDFromAddress)(address);\n    const tokenSigner = new jsontokens__WEBPACK_IMPORTED_MODULE_0__.TokenSigner('ES256k', transitPrivateKey);\n    const token = tokenSigner.sign(payload);\n    return token;\n}\nasync function encryptPrivateKey(publicKey, privateKey) {\n    const encryptedObj = await (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_5__.encryptECIES)(publicKey, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.utf8ToBytes)(privateKey), true);\n    const encryptedJSON = JSON.stringify(encryptedObj);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.utf8ToBytes)(encryptedJSON));\n}\nasync function decryptPrivateKey(privateKey, hexedEncrypted) {\n    const unhexedString = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.bytesToUtf8)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hexedEncrypted));\n    const encryptedObj = JSON.parse(unhexedString);\n    const decrypted = await (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_5__.decryptECIES)(privateKey, encryptedObj);\n    if (typeof decrypted !== 'string') {\n        throw new Error('Unable to correctly decrypt private key');\n    }\n    else {\n        return decrypted;\n    }\n}\nasync function makeAuthResponse(privateKey, profile = {}, metadata, coreToken = null, appPrivateKey = null, expiresAt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.nextMonth)().getTime(), transitPublicKey = null, hubUrl = null, blockstackAPIUrl = null, associationToken = null, appPrivateKeyFromWalletSalt = null) {\n    const publicKey = jsontokens__WEBPACK_IMPORTED_MODULE_0__.SECP256K1Client.derivePublicKey(privateKey);\n    const address = (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_1__.publicKeyToBtcAddress)(publicKey);\n    let privateKeyPayload = appPrivateKey;\n    let coreTokenPayload = coreToken;\n    let additionalProperties = {};\n    if (appPrivateKey !== undefined && appPrivateKey !== null) {\n        if (transitPublicKey !== undefined && transitPublicKey !== null) {\n            privateKeyPayload = await encryptPrivateKey(transitPublicKey, appPrivateKey);\n            if (coreToken !== undefined && coreToken !== null) {\n                coreTokenPayload = await encryptPrivateKey(transitPublicKey, coreToken);\n            }\n        }\n        additionalProperties = {\n            email: metadata?.email ? metadata.email : null,\n            profile_url: metadata?.profileUrl ? metadata.profileUrl : null,\n            hubUrl,\n            blockstackAPIUrl,\n            associationToken,\n            version: VERSION,\n        };\n    }\n    else {\n    }\n    const payload = Object.assign({}, {\n        jti: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.makeUUID4)(),\n        iat: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(expiresAt / 1000),\n        iss: (0,_dids__WEBPACK_IMPORTED_MODULE_4__.makeDIDFromAddress)(address),\n        private_key: privateKeyPayload,\n        public_keys: [publicKey],\n        appPrivateKeyFromWalletSalt,\n        profile,\n        core_token: coreTokenPayload,\n    }, additionalProperties);\n    const tokenSigner = new jsontokens__WEBPACK_IMPORTED_MODULE_0__.TokenSigner('ES256k', privateKey);\n    return tokenSigner.sign(payload);\n}\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUEwSDtBQUNoQjtBQUNoRDtBQUNkO0FBQ0E7QUFDNUM7QUFDTztBQUNQLHVCQUF1QixvRUFBZ0I7QUFDdkM7QUFDQTtBQUNPO0FBQ0Esb0ZBQW9GLHFEQUFhLGlDQUFpQyx5REFBUyw4QkFBOEI7QUFDaEw7QUFDQSx5QkFBeUIsK0RBQWU7QUFDeEM7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0EseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxhQUFhLHlEQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0JBQXNCLHVEQUFlO0FBQ3JDO0FBQ0Esb0JBQW9CLHlFQUFxQjtBQUN6QyxrQkFBa0IseURBQWtCO0FBQ3BDLDRCQUE0QixtREFBVztBQUN2QztBQUNBO0FBQ0E7QUFDTztBQUNQLCtCQUErQixnRUFBWSxZQUFZLDJEQUFXO0FBQ2xFO0FBQ0EsV0FBVywwREFBVSxDQUFDLDJEQUFXO0FBQ2pDO0FBQ087QUFDUCwwQkFBMEIsMkRBQVcsQ0FBQywwREFBVTtBQUNoRDtBQUNBLDRCQUE0QixnRUFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdEQUF3RCxnRUFBZ0UseURBQVM7QUFDeEksc0JBQXNCLHVEQUFlO0FBQ3JDLG9CQUFvQix5RUFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLGFBQWEseURBQVM7QUFDdEI7QUFDQTtBQUNBLGFBQWEseURBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNEJBQTRCLG1EQUFXO0FBQ3ZDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9hdXRoL2Rpc3QvZXNtL21lc3NhZ2VzLmpzPzljMjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnl0ZXNUb0hleCwgYnl0ZXNUb1V0ZjgsIGdldEdsb2JhbE9iamVjdCwgaGV4VG9CeXRlcywgbWFrZVVVSUQ0LCBuZXh0TW9udGgsIHV0ZjhUb0J5dGVzLCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmltcG9ydCB7IGRlY3J5cHRFQ0lFUywgZW5jcnlwdEVDSUVTLCBtYWtlRUNQcml2YXRlS2V5LCBwdWJsaWNLZXlUb0J0Y0FkZHJlc3MsIH0gZnJvbSAnQHN0YWNrcy9lbmNyeXB0aW9uJztcbmltcG9ydCB7IFNFQ1AyNTZLMUNsaWVudCwgVG9rZW5TaWduZXIgfSBmcm9tICdqc29udG9rZW5zJztcbmltcG9ydCB7IERFRkFVTFRfU0NPUEUgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBtYWtlRElERnJvbUFkZHJlc3MgfSBmcm9tICcuL2RpZHMnO1xuY29uc3QgVkVSU0lPTiA9ICcxLjQuMCc7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVUcmFuc2l0S2V5KCkge1xuICAgIGNvbnN0IHRyYW5zaXRLZXkgPSBtYWtlRUNQcml2YXRlS2V5KCk7XG4gICAgcmV0dXJuIHRyYW5zaXRLZXk7XG59XG5leHBvcnQgY29uc3QgbWFrZUF1dGhSZXF1ZXN0ID0gbWFrZUF1dGhSZXF1ZXN0VG9rZW47XG5leHBvcnQgZnVuY3Rpb24gbWFrZUF1dGhSZXF1ZXN0VG9rZW4odHJhbnNpdFByaXZhdGVLZXksIHJlZGlyZWN0VVJJLCBtYW5pZmVzdFVSSSwgc2NvcGVzID0gREVGQVVMVF9TQ09QRS5zbGljZSgpLCBhcHBEb21haW4sIGV4cGlyZXNBdCA9IG5leHRNb250aCgpLmdldFRpbWUoKSwgZXh0cmFQYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IGdldFdpbmRvd09yaWdpbiA9IChwYXJhbU5hbWUpID0+IHtcbiAgICAgICAgY29uc3QgbG9jYXRpb24gPSBnZXRHbG9iYWxPYmplY3QoJ2xvY2F0aW9uJywge1xuICAgICAgICAgICAgdGhyb3dJZlVuYXZhaWxhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdXNhZ2VEZXNjOiBgbWFrZUF1dGhSZXF1ZXN0KFske3BhcmFtTmFtZX09dW5kZWZpbmVkXSlgLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGxvY2F0aW9uPy5vcmlnaW47XG4gICAgfTtcbiAgICBpZiAoIXJlZGlyZWN0VVJJKSB7XG4gICAgICAgIHJlZGlyZWN0VVJJID0gYCR7Z2V0V2luZG93T3JpZ2luKCdyZWRpcmVjdFVSSScpfS9gO1xuICAgIH1cbiAgICBpZiAoIW1hbmlmZXN0VVJJKSB7XG4gICAgICAgIG1hbmlmZXN0VVJJID0gYCR7Z2V0V2luZG93T3JpZ2luKCdtYW5pZmVzdFVSSScpfS9tYW5pZmVzdC5qc29uYDtcbiAgICB9XG4gICAgaWYgKCFhcHBEb21haW4pIHtcbiAgICAgICAgYXBwRG9tYWluID0gZ2V0V2luZG93T3JpZ2luKCdhcHBEb21haW4nKTtcbiAgICB9XG4gICAgY29uc3QgcGF5bG9hZCA9IE9iamVjdC5hc3NpZ24oe30sIGV4dHJhUGFyYW1zLCB7XG4gICAgICAgIGp0aTogbWFrZVVVSUQ0KCksXG4gICAgICAgIGlhdDogTWF0aC5mbG9vcihuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApLFxuICAgICAgICBleHA6IE1hdGguZmxvb3IoZXhwaXJlc0F0IC8gMTAwMCksXG4gICAgICAgIGlzczogbnVsbCxcbiAgICAgICAgcHVibGljX2tleXM6IFtdLFxuICAgICAgICBkb21haW5fbmFtZTogYXBwRG9tYWluLFxuICAgICAgICBtYW5pZmVzdF91cmk6IG1hbmlmZXN0VVJJLFxuICAgICAgICByZWRpcmVjdF91cmk6IHJlZGlyZWN0VVJJLFxuICAgICAgICB2ZXJzaW9uOiBWRVJTSU9OLFxuICAgICAgICBkb19ub3RfaW5jbHVkZV9wcm9maWxlOiB0cnVlLFxuICAgICAgICBzdXBwb3J0c19odWJfdXJsOiB0cnVlLFxuICAgICAgICBzY29wZXMsXG4gICAgfSk7XG4gICAgY29uc3QgcHVibGljS2V5ID0gU0VDUDI1NksxQ2xpZW50LmRlcml2ZVB1YmxpY0tleSh0cmFuc2l0UHJpdmF0ZUtleSk7XG4gICAgcGF5bG9hZC5wdWJsaWNfa2V5cyA9IFtwdWJsaWNLZXldO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBwdWJsaWNLZXlUb0J0Y0FkZHJlc3MocHVibGljS2V5KTtcbiAgICBwYXlsb2FkLmlzcyA9IG1ha2VESURGcm9tQWRkcmVzcyhhZGRyZXNzKTtcbiAgICBjb25zdCB0b2tlblNpZ25lciA9IG5ldyBUb2tlblNpZ25lcignRVMyNTZrJywgdHJhbnNpdFByaXZhdGVLZXkpO1xuICAgIGNvbnN0IHRva2VuID0gdG9rZW5TaWduZXIuc2lnbihwYXlsb2FkKTtcbiAgICByZXR1cm4gdG9rZW47XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZW5jcnlwdFByaXZhdGVLZXkocHVibGljS2V5LCBwcml2YXRlS2V5KSB7XG4gICAgY29uc3QgZW5jcnlwdGVkT2JqID0gYXdhaXQgZW5jcnlwdEVDSUVTKHB1YmxpY0tleSwgdXRmOFRvQnl0ZXMocHJpdmF0ZUtleSksIHRydWUpO1xuICAgIGNvbnN0IGVuY3J5cHRlZEpTT04gPSBKU09OLnN0cmluZ2lmeShlbmNyeXB0ZWRPYmopO1xuICAgIHJldHVybiBieXRlc1RvSGV4KHV0ZjhUb0J5dGVzKGVuY3J5cHRlZEpTT04pKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWNyeXB0UHJpdmF0ZUtleShwcml2YXRlS2V5LCBoZXhlZEVuY3J5cHRlZCkge1xuICAgIGNvbnN0IHVuaGV4ZWRTdHJpbmcgPSBieXRlc1RvVXRmOChoZXhUb0J5dGVzKGhleGVkRW5jcnlwdGVkKSk7XG4gICAgY29uc3QgZW5jcnlwdGVkT2JqID0gSlNPTi5wYXJzZSh1bmhleGVkU3RyaW5nKTtcbiAgICBjb25zdCBkZWNyeXB0ZWQgPSBhd2FpdCBkZWNyeXB0RUNJRVMocHJpdmF0ZUtleSwgZW5jcnlwdGVkT2JqKTtcbiAgICBpZiAodHlwZW9mIGRlY3J5cHRlZCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gY29ycmVjdGx5IGRlY3J5cHQgcHJpdmF0ZSBrZXknKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWNyeXB0ZWQ7XG4gICAgfVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1ha2VBdXRoUmVzcG9uc2UocHJpdmF0ZUtleSwgcHJvZmlsZSA9IHt9LCBtZXRhZGF0YSwgY29yZVRva2VuID0gbnVsbCwgYXBwUHJpdmF0ZUtleSA9IG51bGwsIGV4cGlyZXNBdCA9IG5leHRNb250aCgpLmdldFRpbWUoKSwgdHJhbnNpdFB1YmxpY0tleSA9IG51bGwsIGh1YlVybCA9IG51bGwsIGJsb2Nrc3RhY2tBUElVcmwgPSBudWxsLCBhc3NvY2lhdGlvblRva2VuID0gbnVsbCwgYXBwUHJpdmF0ZUtleUZyb21XYWxsZXRTYWx0ID0gbnVsbCkge1xuICAgIGNvbnN0IHB1YmxpY0tleSA9IFNFQ1AyNTZLMUNsaWVudC5kZXJpdmVQdWJsaWNLZXkocHJpdmF0ZUtleSk7XG4gICAgY29uc3QgYWRkcmVzcyA9IHB1YmxpY0tleVRvQnRjQWRkcmVzcyhwdWJsaWNLZXkpO1xuICAgIGxldCBwcml2YXRlS2V5UGF5bG9hZCA9IGFwcFByaXZhdGVLZXk7XG4gICAgbGV0IGNvcmVUb2tlblBheWxvYWQgPSBjb3JlVG9rZW47XG4gICAgbGV0IGFkZGl0aW9uYWxQcm9wZXJ0aWVzID0ge307XG4gICAgaWYgKGFwcFByaXZhdGVLZXkgIT09IHVuZGVmaW5lZCAmJiBhcHBQcml2YXRlS2V5ICE9PSBudWxsKSB7XG4gICAgICAgIGlmICh0cmFuc2l0UHVibGljS2V5ICE9PSB1bmRlZmluZWQgJiYgdHJhbnNpdFB1YmxpY0tleSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcHJpdmF0ZUtleVBheWxvYWQgPSBhd2FpdCBlbmNyeXB0UHJpdmF0ZUtleSh0cmFuc2l0UHVibGljS2V5LCBhcHBQcml2YXRlS2V5KTtcbiAgICAgICAgICAgIGlmIChjb3JlVG9rZW4gIT09IHVuZGVmaW5lZCAmJiBjb3JlVG9rZW4gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb3JlVG9rZW5QYXlsb2FkID0gYXdhaXQgZW5jcnlwdFByaXZhdGVLZXkodHJhbnNpdFB1YmxpY0tleSwgY29yZVRva2VuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllcyA9IHtcbiAgICAgICAgICAgIGVtYWlsOiBtZXRhZGF0YT8uZW1haWwgPyBtZXRhZGF0YS5lbWFpbCA6IG51bGwsXG4gICAgICAgICAgICBwcm9maWxlX3VybDogbWV0YWRhdGE/LnByb2ZpbGVVcmwgPyBtZXRhZGF0YS5wcm9maWxlVXJsIDogbnVsbCxcbiAgICAgICAgICAgIGh1YlVybCxcbiAgICAgICAgICAgIGJsb2Nrc3RhY2tBUElVcmwsXG4gICAgICAgICAgICBhc3NvY2lhdGlvblRva2VuLFxuICAgICAgICAgICAgdmVyc2lvbjogVkVSU0lPTixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgfVxuICAgIGNvbnN0IHBheWxvYWQgPSBPYmplY3QuYXNzaWduKHt9LCB7XG4gICAgICAgIGp0aTogbWFrZVVVSUQ0KCksXG4gICAgICAgIGlhdDogTWF0aC5mbG9vcihuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApLFxuICAgICAgICBleHA6IE1hdGguZmxvb3IoZXhwaXJlc0F0IC8gMTAwMCksXG4gICAgICAgIGlzczogbWFrZURJREZyb21BZGRyZXNzKGFkZHJlc3MpLFxuICAgICAgICBwcml2YXRlX2tleTogcHJpdmF0ZUtleVBheWxvYWQsXG4gICAgICAgIHB1YmxpY19rZXlzOiBbcHVibGljS2V5XSxcbiAgICAgICAgYXBwUHJpdmF0ZUtleUZyb21XYWxsZXRTYWx0LFxuICAgICAgICBwcm9maWxlLFxuICAgICAgICBjb3JlX3Rva2VuOiBjb3JlVG9rZW5QYXlsb2FkLFxuICAgIH0sIGFkZGl0aW9uYWxQcm9wZXJ0aWVzKTtcbiAgICBjb25zdCB0b2tlblNpZ25lciA9IG5ldyBUb2tlblNpZ25lcignRVMyNTZrJywgcHJpdmF0ZUtleSk7XG4gICAgcmV0dXJuIHRva2VuU2lnbmVyLnNpZ24ocGF5bG9hZCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/messages.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/protocolEchoDetection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/protocolEchoDetection.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protocolEchoReplyDetection: function() { return /* binding */ protocolEchoReplyDetection; }\n/* harmony export */ });\nconst GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\nconst ECHO_REPLY_PARAM = 'echoReply';\nconst AUTH_CONTINUATION_PARAM = 'authContinuation';\nfunction getQueryStringParams(query) {\n    if (!query) {\n        return {};\n    }\n    const trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\n    return trimmed.split('&').reduce((params, param) => {\n        const [key, value] = param.split('=');\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n        return params;\n    }, {});\n}\nfunction protocolEchoReplyDetection() {\n    let globalScope;\n    if (typeof self !== 'undefined') {\n        globalScope = self;\n    }\n    else if (typeof window !== 'undefined') {\n        globalScope = window;\n    }\n    else {\n        return false;\n    }\n    if (!globalScope.location || !globalScope.localStorage) {\n        return false;\n    }\n    const existingDetection = globalScope[GLOBAL_DETECTION_CACHE_KEY];\n    if (typeof existingDetection === 'boolean') {\n        return existingDetection;\n    }\n    const searchParams = getQueryStringParams(globalScope.location.search);\n    const echoReplyParam = searchParams[ECHO_REPLY_PARAM];\n    if (echoReplyParam) {\n        globalScope[GLOBAL_DETECTION_CACHE_KEY] = true;\n        const echoReplyKey = `echo-reply-${echoReplyParam}`;\n        globalScope.localStorage.setItem(echoReplyKey, 'success');\n        globalScope.setTimeout(() => {\n            const authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\n            globalScope.location.href = authContinuationParam;\n        }, 10);\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=protocolEchoDetection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vcHJvdG9jb2xFY2hvRGV0ZWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGVBQWU7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9hdXRoL2Rpc3QvZXNtL3Byb3RvY29sRWNob0RldGVjdGlvbi5qcz9lYjYyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEdMT0JBTF9ERVRFQ1RJT05fQ0FDSEVfS0VZID0gJ19ibG9ja3N0YWNrRGlkQ2hlY2tFY2hvUmVwbHknO1xuY29uc3QgRUNIT19SRVBMWV9QQVJBTSA9ICdlY2hvUmVwbHknO1xuY29uc3QgQVVUSF9DT05USU5VQVRJT05fUEFSQU0gPSAnYXV0aENvbnRpbnVhdGlvbic7XG5mdW5jdGlvbiBnZXRRdWVyeVN0cmluZ1BhcmFtcyhxdWVyeSkge1xuICAgIGlmICghcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCB0cmltbWVkID0gL15bPyNdLy50ZXN0KHF1ZXJ5KSA/IHF1ZXJ5LnNsaWNlKDEpIDogcXVlcnk7XG4gICAgcmV0dXJuIHRyaW1tZWQuc3BsaXQoJyYnKS5yZWR1Y2UoKHBhcmFtcywgcGFyYW0pID0+IHtcbiAgICAgICAgY29uc3QgW2tleSwgdmFsdWVdID0gcGFyYW0uc3BsaXQoJz0nKTtcbiAgICAgICAgcGFyYW1zW2tleV0gPSB2YWx1ZSA/IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZS5yZXBsYWNlKC9cXCsvZywgJyAnKSkgOiAnJztcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9LCB7fSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJvdG9jb2xFY2hvUmVwbHlEZXRlY3Rpb24oKSB7XG4gICAgbGV0IGdsb2JhbFNjb3BlO1xuICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZ2xvYmFsU2NvcGUgPSBzZWxmO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBnbG9iYWxTY29wZSA9IHdpbmRvdztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFnbG9iYWxTY29wZS5sb2NhdGlvbiB8fCAhZ2xvYmFsU2NvcGUubG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgZXhpc3RpbmdEZXRlY3Rpb24gPSBnbG9iYWxTY29wZVtHTE9CQUxfREVURUNUSU9OX0NBQ0hFX0tFWV07XG4gICAgaWYgKHR5cGVvZiBleGlzdGluZ0RldGVjdGlvbiA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHJldHVybiBleGlzdGluZ0RldGVjdGlvbjtcbiAgICB9XG4gICAgY29uc3Qgc2VhcmNoUGFyYW1zID0gZ2V0UXVlcnlTdHJpbmdQYXJhbXMoZ2xvYmFsU2NvcGUubG9jYXRpb24uc2VhcmNoKTtcbiAgICBjb25zdCBlY2hvUmVwbHlQYXJhbSA9IHNlYXJjaFBhcmFtc1tFQ0hPX1JFUExZX1BBUkFNXTtcbiAgICBpZiAoZWNob1JlcGx5UGFyYW0pIHtcbiAgICAgICAgZ2xvYmFsU2NvcGVbR0xPQkFMX0RFVEVDVElPTl9DQUNIRV9LRVldID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgZWNob1JlcGx5S2V5ID0gYGVjaG8tcmVwbHktJHtlY2hvUmVwbHlQYXJhbX1gO1xuICAgICAgICBnbG9iYWxTY29wZS5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShlY2hvUmVwbHlLZXksICdzdWNjZXNzJyk7XG4gICAgICAgIGdsb2JhbFNjb3BlLnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYXV0aENvbnRpbnVhdGlvblBhcmFtID0gc2VhcmNoUGFyYW1zW0FVVEhfQ09OVElOVUFUSU9OX1BBUkFNXTtcbiAgICAgICAgICAgIGdsb2JhbFNjb3BlLmxvY2F0aW9uLmhyZWYgPSBhdXRoQ29udGludWF0aW9uUGFyYW07XG4gICAgICAgIH0sIDEwKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29sRWNob0RldGVjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/protocolEchoDetection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/provider.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/provider.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAppManifest: function() { return /* binding */ fetchAppManifest; },\n/* harmony export */   getAuthRequestFromURL: function() { return /* binding */ getAuthRequestFromURL; }\n/* harmony export */ });\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsontokens */ \"(app-pages-browser)/./node_modules/jsontokens/lib/index.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsontokens__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_network__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stacks/network */ \"(app-pages-browser)/./node_modules/@stacks/network/dist/esm/fetch.js\");\n\n\n\nfunction getAuthRequestFromURL() {\n    const location = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.getGlobalObject)('location', {\n        throwIfUnavailable: true,\n        usageDesc: 'getAuthRequestFromURL',\n    });\n    const params = new URLSearchParams(location?.search);\n    return params.get('authRequest')?.replaceAll(`${_stacks_common__WEBPACK_IMPORTED_MODULE_1__.BLOCKSTACK_HANDLER}:`, '') ?? null;\n}\nasync function fetchAppManifest(authRequest, fetchFn = (0,_stacks_network__WEBPACK_IMPORTED_MODULE_2__.createFetchFn)()) {\n    if (!authRequest) {\n        throw new Error('Invalid auth request');\n    }\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(authRequest).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    const manifestURI = payload.manifest_uri;\n    try {\n        const response = await fetchFn(manifestURI);\n        const responseText = await response.text();\n        const responseJSON = JSON.parse(responseText);\n        return { ...responseJSON, manifestURI };\n    }\n    catch (error) {\n        console.log(error);\n        throw new Error('Could not fetch manifest.json');\n    }\n}\n//# sourceMappingURL=provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlDO0FBQzRCO0FBQ3JCO0FBQ3pDO0FBQ1AscUJBQXFCLCtEQUFlO0FBQ3BDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvREFBb0QsOERBQWtCLENBQUM7QUFDdkU7QUFDTyx1REFBdUQsOERBQWE7QUFDM0U7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvYXV0aC9kaXN0L2VzbS9wcm92aWRlci5qcz8wMWRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlY29kZVRva2VuIH0gZnJvbSAnanNvbnRva2Vucyc7XG5pbXBvcnQgeyBCTE9DS1NUQUNLX0hBTkRMRVIsIGdldEdsb2JhbE9iamVjdCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmltcG9ydCB7IGNyZWF0ZUZldGNoRm4gfSBmcm9tICdAc3RhY2tzL25ldHdvcmsnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEF1dGhSZXF1ZXN0RnJvbVVSTCgpIHtcbiAgICBjb25zdCBsb2NhdGlvbiA9IGdldEdsb2JhbE9iamVjdCgnbG9jYXRpb24nLCB7XG4gICAgICAgIHRocm93SWZVbmF2YWlsYWJsZTogdHJ1ZSxcbiAgICAgICAgdXNhZ2VEZXNjOiAnZ2V0QXV0aFJlcXVlc3RGcm9tVVJMJyxcbiAgICB9KTtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKGxvY2F0aW9uPy5zZWFyY2gpO1xuICAgIHJldHVybiBwYXJhbXMuZ2V0KCdhdXRoUmVxdWVzdCcpPy5yZXBsYWNlQWxsKGAke0JMT0NLU1RBQ0tfSEFORExFUn06YCwgJycpID8/IG51bGw7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hBcHBNYW5pZmVzdChhdXRoUmVxdWVzdCwgZmV0Y2hGbiA9IGNyZWF0ZUZldGNoRm4oKSkge1xuICAgIGlmICghYXV0aFJlcXVlc3QpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGF1dGggcmVxdWVzdCcpO1xuICAgIH1cbiAgICBjb25zdCBwYXlsb2FkID0gZGVjb2RlVG9rZW4oYXV0aFJlcXVlc3QpLnBheWxvYWQ7XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0eXBlIG9mIHN0cmluZycpO1xuICAgIH1cbiAgICBjb25zdCBtYW5pZmVzdFVSSSA9IHBheWxvYWQubWFuaWZlc3RfdXJpO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2hGbihtYW5pZmVzdFVSSSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2VKU09OID0gSlNPTi5wYXJzZShyZXNwb25zZVRleHQpO1xuICAgICAgICByZXR1cm4geyAuLi5yZXNwb25zZUpTT04sIG1hbmlmZXN0VVJJIH07XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGZldGNoIG1hbmlmZXN0Lmpzb24nKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/provider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionData.js":
/*!***********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/sessionData.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionData: function() { return /* binding */ SessionData; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\");\n\nconst SESSION_VERSION = '1.0.0';\nclass SessionData {\n    constructor(options) {\n        this.version = SESSION_VERSION;\n        this.userData = options.userData;\n        this.transitKey = options.transitKey;\n        this.etags = options.etags ? options.etags : {};\n    }\n    static fromJSON(json) {\n        if (json.version !== SESSION_VERSION) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_0__.InvalidStateError(`JSON data version ${json.version} not supported by SessionData`);\n        }\n        const options = {\n            coreNode: json.coreNode,\n            userData: json.userData,\n            transitKey: json.transitKey,\n            etags: json.etags,\n        };\n        return new SessionData(options);\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n}\n//# sourceMappingURL=sessionData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vc2Vzc2lvbkRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDbkQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkRBQWlCLHNCQUFzQixjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvYXV0aC9kaXN0L2VzbS9zZXNzaW9uRGF0YS5qcz82ODAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludmFsaWRTdGF0ZUVycm9yIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuY29uc3QgU0VTU0lPTl9WRVJTSU9OID0gJzEuMC4wJztcbmV4cG9ydCBjbGFzcyBTZXNzaW9uRGF0YSB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLnZlcnNpb24gPSBTRVNTSU9OX1ZFUlNJT047XG4gICAgICAgIHRoaXMudXNlckRhdGEgPSBvcHRpb25zLnVzZXJEYXRhO1xuICAgICAgICB0aGlzLnRyYW5zaXRLZXkgPSBvcHRpb25zLnRyYW5zaXRLZXk7XG4gICAgICAgIHRoaXMuZXRhZ3MgPSBvcHRpb25zLmV0YWdzID8gb3B0aW9ucy5ldGFncyA6IHt9O1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICBpZiAoanNvbi52ZXJzaW9uICE9PSBTRVNTSU9OX1ZFUlNJT04pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkU3RhdGVFcnJvcihgSlNPTiBkYXRhIHZlcnNpb24gJHtqc29uLnZlcnNpb259IG5vdCBzdXBwb3J0ZWQgYnkgU2Vzc2lvbkRhdGFgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgY29yZU5vZGU6IGpzb24uY29yZU5vZGUsXG4gICAgICAgICAgICB1c2VyRGF0YToganNvbi51c2VyRGF0YSxcbiAgICAgICAgICAgIHRyYW5zaXRLZXk6IGpzb24udHJhbnNpdEtleSxcbiAgICAgICAgICAgIGV0YWdzOiBqc29uLmV0YWdzLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IFNlc3Npb25EYXRhKG9wdGlvbnMpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25EYXRhLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionStore.js":
/*!************************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/sessionStore.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstanceDataStore: function() { return /* binding */ InstanceDataStore; },\n/* harmony export */   LocalStorageStore: function() { return /* binding */ LocalStorageStore; },\n/* harmony export */   SessionDataStore: function() { return /* binding */ SessionDataStore; }\n/* harmony export */ });\n/* harmony import */ var _sessionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sessionData */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionData.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\");\n\n\n\nclass SessionDataStore {\n    constructor(sessionOptions) {\n        if (sessionOptions) {\n            const newSessionData = new _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData(sessionOptions);\n            this.setSessionData(newSessionData);\n        }\n    }\n    getSessionData() {\n        throw new Error('Abstract class');\n    }\n    setSessionData(_session) {\n        throw new Error('Abstract class');\n    }\n    deleteSessionData() {\n        throw new Error('Abstract class');\n    }\n}\nclass InstanceDataStore extends SessionDataStore {\n    constructor(sessionOptions) {\n        super(sessionOptions);\n        if (!this.sessionData) {\n            this.setSessionData(new _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData({}));\n        }\n    }\n    getSessionData() {\n        if (!this.sessionData) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_1__.NoSessionDataError('No session data was found.');\n        }\n        return this.sessionData;\n    }\n    setSessionData(session) {\n        this.sessionData = session;\n        return true;\n    }\n    deleteSessionData() {\n        this.setSessionData(new _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData({}));\n        return true;\n    }\n}\nclass LocalStorageStore extends SessionDataStore {\n    constructor(sessionOptions) {\n        super(sessionOptions);\n        if (sessionOptions &&\n            sessionOptions.storeOptions &&\n            sessionOptions.storeOptions.localStorageKey &&\n            typeof sessionOptions.storeOptions.localStorageKey === 'string') {\n            this.key = sessionOptions.storeOptions.localStorageKey;\n        }\n        else {\n            this.key = _constants__WEBPACK_IMPORTED_MODULE_2__.LOCALSTORAGE_SESSION_KEY;\n        }\n        const data = localStorage.getItem(this.key);\n        if (!data) {\n            const sessionData = new _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData({});\n            this.setSessionData(sessionData);\n        }\n    }\n    getSessionData() {\n        const data = localStorage.getItem(this.key);\n        if (!data) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_1__.NoSessionDataError('No session data was found in localStorage');\n        }\n        const dataJSON = JSON.parse(data);\n        return _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData.fromJSON(dataJSON);\n    }\n    setSessionData(session) {\n        localStorage.setItem(this.key, session.toString());\n        return true;\n    }\n    deleteSessionData() {\n        localStorage.removeItem(this.key);\n        this.setSessionData(new _sessionData__WEBPACK_IMPORTED_MODULE_0__.SessionData({}));\n        return true;\n    }\n}\n//# sourceMappingURL=sessionStore.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vc2Vzc2lvblN0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0QztBQUNXO0FBQ0g7QUFDN0M7QUFDUDtBQUNBO0FBQ0EsdUNBQXVDLHFEQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscURBQVcsR0FBRztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxxREFBVyxHQUFHO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdFQUF3QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscURBQVcsR0FBRztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsOERBQWtCO0FBQ3hDO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHFEQUFXLEdBQUc7QUFDOUM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvYXV0aC9kaXN0L2VzbS9zZXNzaW9uU3RvcmUuanM/NjJlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXNzaW9uRGF0YSB9IGZyb20gJy4vc2Vzc2lvbkRhdGEnO1xuaW1wb3J0IHsgTE9DQUxTVE9SQUdFX1NFU1NJT05fS0VZIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgTm9TZXNzaW9uRGF0YUVycm9yIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuZXhwb3J0IGNsYXNzIFNlc3Npb25EYXRhU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKHNlc3Npb25PcHRpb25zKSB7XG4gICAgICAgIGlmIChzZXNzaW9uT3B0aW9ucykge1xuICAgICAgICAgICAgY29uc3QgbmV3U2Vzc2lvbkRhdGEgPSBuZXcgU2Vzc2lvbkRhdGEoc2Vzc2lvbk9wdGlvbnMpO1xuICAgICAgICAgICAgdGhpcy5zZXRTZXNzaW9uRGF0YShuZXdTZXNzaW9uRGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0U2Vzc2lvbkRhdGEoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQWJzdHJhY3QgY2xhc3MnKTtcbiAgICB9XG4gICAgc2V0U2Vzc2lvbkRhdGEoX3Nlc3Npb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBYnN0cmFjdCBjbGFzcycpO1xuICAgIH1cbiAgICBkZWxldGVTZXNzaW9uRGF0YSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBYnN0cmFjdCBjbGFzcycpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJbnN0YW5jZURhdGFTdG9yZSBleHRlbmRzIFNlc3Npb25EYXRhU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKHNlc3Npb25PcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25PcHRpb25zKTtcbiAgICAgICAgaWYgKCF0aGlzLnNlc3Npb25EYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnNldFNlc3Npb25EYXRhKG5ldyBTZXNzaW9uRGF0YSh7fSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFNlc3Npb25EYXRhKCkge1xuICAgICAgICBpZiAoIXRoaXMuc2Vzc2lvbkRhdGEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBOb1Nlc3Npb25EYXRhRXJyb3IoJ05vIHNlc3Npb24gZGF0YSB3YXMgZm91bmQuJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2Vzc2lvbkRhdGE7XG4gICAgfVxuICAgIHNldFNlc3Npb25EYXRhKHNlc3Npb24pIHtcbiAgICAgICAgdGhpcy5zZXNzaW9uRGF0YSA9IHNlc3Npb247XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBkZWxldGVTZXNzaW9uRGF0YSgpIHtcbiAgICAgICAgdGhpcy5zZXRTZXNzaW9uRGF0YShuZXcgU2Vzc2lvbkRhdGEoe30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVN0b3JlIGV4dGVuZHMgU2Vzc2lvbkRhdGFTdG9yZSB7XG4gICAgY29uc3RydWN0b3Ioc2Vzc2lvbk9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoc2Vzc2lvbk9wdGlvbnMpO1xuICAgICAgICBpZiAoc2Vzc2lvbk9wdGlvbnMgJiZcbiAgICAgICAgICAgIHNlc3Npb25PcHRpb25zLnN0b3JlT3B0aW9ucyAmJlxuICAgICAgICAgICAgc2Vzc2lvbk9wdGlvbnMuc3RvcmVPcHRpb25zLmxvY2FsU3RvcmFnZUtleSAmJlxuICAgICAgICAgICAgdHlwZW9mIHNlc3Npb25PcHRpb25zLnN0b3JlT3B0aW9ucy5sb2NhbFN0b3JhZ2VLZXkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aGlzLmtleSA9IHNlc3Npb25PcHRpb25zLnN0b3JlT3B0aW9ucy5sb2NhbFN0b3JhZ2VLZXk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmtleSA9IExPQ0FMU1RPUkFHRV9TRVNTSU9OX0tFWTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5rZXkpO1xuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlc3Npb25EYXRhID0gbmV3IFNlc3Npb25EYXRhKHt9KTtcbiAgICAgICAgICAgIHRoaXMuc2V0U2Vzc2lvbkRhdGEoc2Vzc2lvbkRhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFNlc3Npb25EYXRhKCkge1xuICAgICAgICBjb25zdCBkYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5rZXkpO1xuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBOb1Nlc3Npb25EYXRhRXJyb3IoJ05vIHNlc3Npb24gZGF0YSB3YXMgZm91bmQgaW4gbG9jYWxTdG9yYWdlJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YUpTT04gPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICByZXR1cm4gU2Vzc2lvbkRhdGEuZnJvbUpTT04oZGF0YUpTT04pO1xuICAgIH1cbiAgICBzZXRTZXNzaW9uRGF0YShzZXNzaW9uKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMua2V5LCBzZXNzaW9uLnRvU3RyaW5nKCkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZGVsZXRlU2Vzc2lvbkRhdGEoKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMua2V5KTtcbiAgICAgICAgdGhpcy5zZXRTZXNzaW9uRGF0YShuZXcgU2Vzc2lvbkRhdGEoe30pKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvblN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionStore.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/userSession.js":
/*!***********************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/userSession.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserSession: function() { return /* binding */ UserSession; }\n/* harmony export */ });\n/* harmony import */ var _appConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appConfig */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/appConfig.js\");\n/* harmony import */ var _sessionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sessionStore */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/sessionStore.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsontokens */ \"(app-pages-browser)/./node_modules/jsontokens/lib/index.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsontokens__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _verification__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./verification */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/verification.js\");\n/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./messages */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/messages.js\");\n/* harmony import */ var _stacks_encryption__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @stacks/encryption */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\");\n/* harmony import */ var _stacks_encryption__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @stacks/encryption */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/encryption.js\");\n/* harmony import */ var _dids__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dids */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/dids.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/logger.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js\");\n/* harmony import */ var _stacks_profile__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @stacks/profile */ \"(app-pages-browser)/./node_modules/@stacks/profile/dist/esm/profileTokens.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/constants.js\");\n/* harmony import */ var _stacks_network__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stacks/network */ \"(app-pages-browser)/./node_modules/@stacks/network/dist/esm/fetch.js\");\n/* harmony import */ var _stacks_network__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stacks/network */ \"(app-pages-browser)/./node_modules/@stacks/network/dist/esm/network.js\");\n/* harmony import */ var _protocolEchoDetection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./protocolEchoDetection */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/protocolEchoDetection.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass UserSession {\n    constructor(options) {\n        let runningInBrowser = true;\n        if (typeof window === 'undefined' && typeof self === 'undefined') {\n            runningInBrowser = false;\n        }\n        if (options && options.appConfig) {\n            this.appConfig = options.appConfig;\n        }\n        else if (runningInBrowser) {\n            this.appConfig = new _appConfig__WEBPACK_IMPORTED_MODULE_1__.AppConfig();\n        }\n        else {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.MissingParameterError('You need to specify options.appConfig');\n        }\n        if (options && options.sessionStore) {\n            this.store = options.sessionStore;\n        }\n        else if (runningInBrowser) {\n            if (options) {\n                this.store = new _sessionStore__WEBPACK_IMPORTED_MODULE_3__.LocalStorageStore(options.sessionOptions);\n            }\n            else {\n                this.store = new _sessionStore__WEBPACK_IMPORTED_MODULE_3__.LocalStorageStore();\n            }\n        }\n        else if (options) {\n            this.store = new _sessionStore__WEBPACK_IMPORTED_MODULE_3__.InstanceDataStore(options.sessionOptions);\n        }\n        else {\n            this.store = new _sessionStore__WEBPACK_IMPORTED_MODULE_3__.InstanceDataStore();\n        }\n    }\n    makeAuthRequestToken(transitKey, redirectURI, manifestURI, scopes, appDomain, expiresAt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.nextHour)().getTime(), extraParams = {}) {\n        const appConfig = this.appConfig;\n        if (!appConfig) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.InvalidStateError('Missing AppConfig');\n        }\n        transitKey = transitKey || this.generateAndStoreTransitKey();\n        redirectURI = redirectURI || appConfig.redirectURI();\n        manifestURI = manifestURI || appConfig.manifestURI();\n        scopes = scopes || appConfig.scopes;\n        appDomain = appDomain || appConfig.appDomain;\n        return _messages__WEBPACK_IMPORTED_MODULE_5__.makeAuthRequestToken(transitKey, redirectURI, manifestURI, scopes, appDomain, expiresAt, extraParams);\n    }\n    generateAndStoreTransitKey() {\n        const sessionData = this.store.getSessionData();\n        const transitKey = _messages__WEBPACK_IMPORTED_MODULE_5__.generateTransitKey();\n        sessionData.transitKey = transitKey;\n        this.store.setSessionData(sessionData);\n        return transitKey;\n    }\n    getAuthResponseToken() {\n        const search = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.getGlobalObject)('location', {\n            throwIfUnavailable: true,\n            usageDesc: 'getAuthResponseToken',\n        })?.search;\n        const params = new URLSearchParams(search);\n        return params.get('authResponse') ?? '';\n    }\n    isSignInPending() {\n        try {\n            const isProtocolEcho = (0,_protocolEchoDetection__WEBPACK_IMPORTED_MODULE_6__.protocolEchoReplyDetection)();\n            if (isProtocolEcho) {\n                _stacks_common__WEBPACK_IMPORTED_MODULE_7__.Logger.info('protocolEchoReply detected from isSignInPending call, the page is about to redirect.');\n                return true;\n            }\n        }\n        catch (error) {\n            _stacks_common__WEBPACK_IMPORTED_MODULE_7__.Logger.error(`Error checking for protocol echo reply isSignInPending: ${error}`);\n        }\n        return !!this.getAuthResponseToken();\n    }\n    isUserSignedIn() {\n        return !!this.store.getSessionData().userData;\n    }\n    async handlePendingSignIn(authResponseToken = this.getAuthResponseToken(), fetchFn = (0,_stacks_network__WEBPACK_IMPORTED_MODULE_8__.createFetchFn)()) {\n        const sessionData = this.store.getSessionData();\n        if (sessionData.userData) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.LoginFailedError('Existing user session found.');\n        }\n        const transitKey = this.store.getSessionData().transitKey;\n        let coreNode = this.appConfig && this.appConfig.coreNode;\n        if (!coreNode) {\n            const network = new _stacks_network__WEBPACK_IMPORTED_MODULE_9__.StacksMainnet();\n            coreNode = network.bnsLookupUrl;\n        }\n        const tokenPayload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(authResponseToken).payload;\n        if (typeof tokenPayload === 'string') {\n            throw new Error('Unexpected token payload type of string');\n        }\n        const isValid = await (0,_verification__WEBPACK_IMPORTED_MODULE_10__.verifyAuthResponse)(authResponseToken);\n        if (!isValid) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.LoginFailedError('Invalid authentication response.');\n        }\n        let appPrivateKey = tokenPayload.private_key;\n        let coreSessionToken = tokenPayload.core_token;\n        if ((0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.isLaterVersion)(tokenPayload.version, '1.1.0')) {\n            if (transitKey !== undefined && transitKey != null) {\n                if (tokenPayload.private_key !== undefined && tokenPayload.private_key !== null) {\n                    try {\n                        appPrivateKey = (await _messages__WEBPACK_IMPORTED_MODULE_5__.decryptPrivateKey(transitKey, tokenPayload.private_key));\n                    }\n                    catch (e) {\n                        _stacks_common__WEBPACK_IMPORTED_MODULE_7__.Logger.warn('Failed decryption of appPrivateKey, will try to use as given');\n                        if (!(0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_11__.isValidPrivateKey)(tokenPayload.private_key)) {\n                            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.LoginFailedError('Failed decrypting appPrivateKey. Usually means' +\n                                ' that the transit key has changed during login.');\n                        }\n                    }\n                }\n                if (coreSessionToken !== undefined && coreSessionToken !== null) {\n                    try {\n                        coreSessionToken = (await _messages__WEBPACK_IMPORTED_MODULE_5__.decryptPrivateKey(transitKey, coreSessionToken));\n                    }\n                    catch (e) {\n                        _stacks_common__WEBPACK_IMPORTED_MODULE_7__.Logger.info('Failed decryption of coreSessionToken, will try to use as given');\n                    }\n                }\n            }\n            else {\n                throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.LoginFailedError('Authenticating with protocol > 1.1.0 requires transit' + ' key, and none found.');\n            }\n        }\n        let hubUrl = _stacks_common__WEBPACK_IMPORTED_MODULE_12__.BLOCKSTACK_DEFAULT_GAIA_HUB_URL;\n        let gaiaAssociationToken;\n        if ((0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.isLaterVersion)(tokenPayload.version, '1.2.0') &&\n            tokenPayload.hubUrl !== null &&\n            tokenPayload.hubUrl !== undefined) {\n            hubUrl = tokenPayload.hubUrl;\n        }\n        if ((0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.isLaterVersion)(tokenPayload.version, '1.3.0') &&\n            tokenPayload.associationToken !== null &&\n            tokenPayload.associationToken !== undefined) {\n            gaiaAssociationToken = tokenPayload.associationToken;\n        }\n        const userData = {\n            profile: tokenPayload.profile,\n            email: tokenPayload.email,\n            decentralizedID: tokenPayload.iss,\n            identityAddress: (0,_dids__WEBPACK_IMPORTED_MODULE_13__.getAddressFromDID)(tokenPayload.iss),\n            appPrivateKey,\n            coreSessionToken,\n            authResponseToken,\n            hubUrl,\n            appPrivateKeyFromWalletSalt: tokenPayload.appPrivateKeyFromWalletSalt,\n            coreNode: tokenPayload.blockstackAPIUrl,\n            gaiaAssociationToken,\n        };\n        const profileURL = tokenPayload.profile_url;\n        if (!userData.profile && profileURL) {\n            const response = await fetchFn(profileURL);\n            if (!response.ok) {\n                userData.profile = Object.assign({}, _constants__WEBPACK_IMPORTED_MODULE_14__.DEFAULT_PROFILE);\n            }\n            else {\n                const responseText = await response.text();\n                const wrappedProfile = JSON.parse(responseText);\n                userData.profile = (0,_stacks_profile__WEBPACK_IMPORTED_MODULE_15__.extractProfile)(wrappedProfile[0].token);\n            }\n        }\n        else {\n            userData.profile = tokenPayload.profile;\n        }\n        sessionData.userData = userData;\n        this.store.setSessionData(sessionData);\n        return userData;\n    }\n    loadUserData() {\n        const userData = this.store.getSessionData().userData;\n        if (!userData) {\n            throw new _stacks_common__WEBPACK_IMPORTED_MODULE_2__.InvalidStateError('No user data found. Did the user sign in?');\n        }\n        return userData;\n    }\n    encryptContent(content, options) {\n        const opts = Object.assign({}, options);\n        if (!opts.privateKey) {\n            opts.privateKey = this.loadUserData().appPrivateKey;\n        }\n        return (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_16__.encryptContent)(content, opts);\n    }\n    decryptContent(content, options) {\n        const opts = Object.assign({}, options);\n        if (!opts.privateKey) {\n            opts.privateKey = this.loadUserData().appPrivateKey;\n        }\n        return (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_16__.decryptContent)(content, opts);\n    }\n    signUserOut(redirectURL) {\n        this.store.deleteSessionData();\n        if (redirectURL) {\n            if (typeof location !== 'undefined' && location.href) {\n                location.href = redirectURL;\n            }\n        }\n    }\n}\nUserSession.prototype.makeAuthRequest = UserSession.prototype.makeAuthRequestToken;\n//# sourceMappingURL=userSession.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/userSession.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/verification.js":
/*!************************************************************!*\
  !*** ./node_modules/@stacks/auth/dist/esm/verification.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   doPublicKeysMatchIssuer: function() { return /* binding */ doPublicKeysMatchIssuer; },\n/* harmony export */   doSignaturesMatchPublicKeys: function() { return /* binding */ doSignaturesMatchPublicKeys; },\n/* harmony export */   isExpirationDateValid: function() { return /* binding */ isExpirationDateValid; },\n/* harmony export */   isIssuanceDateValid: function() { return /* binding */ isIssuanceDateValid; },\n/* harmony export */   isManifestUriValid: function() { return /* binding */ isManifestUriValid; },\n/* harmony export */   isRedirectUriValid: function() { return /* binding */ isRedirectUriValid; },\n/* harmony export */   verifyAuthRequest: function() { return /* binding */ verifyAuthRequest; },\n/* harmony export */   verifyAuthRequestAndLoadManifest: function() { return /* binding */ verifyAuthRequestAndLoadManifest; },\n/* harmony export */   verifyAuthResponse: function() { return /* binding */ verifyAuthResponse; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_encryption__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stacks/encryption */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsontokens */ \"(app-pages-browser)/./node_modules/jsontokens/lib/index.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsontokens__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dids__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dids */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/dids.js\");\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./provider */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/provider.js\");\n\n\n\n\n\nfunction doSignaturesMatchPublicKeys(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    const publicKeys = payload.public_keys;\n    if (publicKeys.length === 1) {\n        const publicKey = publicKeys[0];\n        try {\n            const tokenVerifier = new jsontokens__WEBPACK_IMPORTED_MODULE_0__.TokenVerifier('ES256k', publicKey);\n            return tokenVerifier.verify(token);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    else {\n        throw new Error('Multiple public keys are not supported');\n    }\n}\nfunction doPublicKeysMatchIssuer(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    const publicKeys = payload.public_keys;\n    const addressFromIssuer = (0,_dids__WEBPACK_IMPORTED_MODULE_1__.getAddressFromDID)(payload.iss);\n    if (publicKeys.length === 1) {\n        const addressFromPublicKeys = (0,_stacks_encryption__WEBPACK_IMPORTED_MODULE_2__.publicKeyToBtcAddress)(publicKeys[0]);\n        if (addressFromPublicKeys === addressFromIssuer) {\n            return true;\n        }\n    }\n    else {\n        throw new Error('Multiple public keys are not supported');\n    }\n    return false;\n}\nfunction isIssuanceDateValid(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    if (payload.iat) {\n        if (typeof payload.iat !== 'number') {\n            return false;\n        }\n        const issuedAt = new Date(payload.iat * 1000);\n        if (new Date().getTime() < issuedAt.getTime()) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\nfunction isExpirationDateValid(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    if (payload.exp) {\n        if (typeof payload.exp !== 'number') {\n            return false;\n        }\n        const expiresAt = new Date(payload.exp * 1000);\n        if (new Date().getTime() > expiresAt.getTime()) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\nfunction isManifestUriValid(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.isSameOriginAbsoluteUrl)(payload.domain_name, payload.manifest_uri);\n}\nfunction isRedirectUriValid(token) {\n    const payload = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.isSameOriginAbsoluteUrl)(payload.domain_name, payload.redirect_uri);\n}\nasync function verifyAuthRequest(token) {\n    if ((0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token).header.alg === 'none') {\n        throw new Error('Token must be signed in order to be verified');\n    }\n    const values = await Promise.all([\n        isExpirationDateValid(token),\n        isIssuanceDateValid(token),\n        doSignaturesMatchPublicKeys(token),\n        doPublicKeysMatchIssuer(token),\n        isManifestUriValid(token),\n        isRedirectUriValid(token),\n    ]);\n    return values.every(val => val);\n}\nasync function verifyAuthRequestAndLoadManifest(token) {\n    const valid = await verifyAuthRequest(token);\n    if (!valid) {\n        throw new Error('Token is an invalid auth request');\n    }\n    return (0,_provider__WEBPACK_IMPORTED_MODULE_4__.fetchAppManifest)(token);\n}\nasync function verifyAuthResponse(token) {\n    const conditions = await Promise.all([\n        isExpirationDateValid(token),\n        isIssuanceDateValid(token),\n        doSignaturesMatchPublicKeys(token),\n        doPublicKeysMatchIssuer(token),\n    ]);\n    return conditions.every(val => val);\n}\n//# sourceMappingURL=verification.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2F1dGgvZGlzdC9lc20vdmVyaWZpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5RDtBQUNFO0FBQ0g7QUFDYjtBQUNHO0FBQ3ZDO0FBQ1Asb0JBQW9CLHVEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHFEQUFhO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsdURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0RBQWlCO0FBQy9DO0FBQ0Esc0NBQXNDLHlFQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQix1REFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0JBQW9CLHVEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsdURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1RUFBdUI7QUFDbEM7QUFDTztBQUNQLG9CQUFvQix1REFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVFQUF1QjtBQUNsQztBQUNPO0FBQ1AsUUFBUSx1REFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyREFBZ0I7QUFDM0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9hdXRoL2Rpc3QvZXNtL3ZlcmlmaWNhdGlvbi5qcz8xZjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzU2FtZU9yaWdpbkFic29sdXRlVXJsIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgcHVibGljS2V5VG9CdGNBZGRyZXNzIH0gZnJvbSAnQHN0YWNrcy9lbmNyeXB0aW9uJztcbmltcG9ydCB7IGRlY29kZVRva2VuLCBUb2tlblZlcmlmaWVyIH0gZnJvbSAnanNvbnRva2Vucyc7XG5pbXBvcnQgeyBnZXRBZGRyZXNzRnJvbURJRCB9IGZyb20gJy4vZGlkcyc7XG5pbXBvcnQgeyBmZXRjaEFwcE1hbmlmZXN0IH0gZnJvbSAnLi9wcm92aWRlcic7XG5leHBvcnQgZnVuY3Rpb24gZG9TaWduYXR1cmVzTWF0Y2hQdWJsaWNLZXlzKHRva2VuKSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IGRlY29kZVRva2VuKHRva2VuKS5wYXlsb2FkO1xuICAgIGlmICh0eXBlb2YgcGF5bG9hZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIHRva2VuIHBheWxvYWQgdHlwZSBvZiBzdHJpbmcnKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5cyA9IHBheWxvYWQucHVibGljX2tleXM7XG4gICAgaWYgKHB1YmxpY0tleXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IHB1YmxpY0tleXNbMF07XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB0b2tlblZlcmlmaWVyID0gbmV3IFRva2VuVmVyaWZpZXIoJ0VTMjU2aycsIHB1YmxpY0tleSk7XG4gICAgICAgICAgICByZXR1cm4gdG9rZW5WZXJpZmllci52ZXJpZnkodG9rZW4pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVsdGlwbGUgcHVibGljIGtleXMgYXJlIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZG9QdWJsaWNLZXlzTWF0Y2hJc3N1ZXIodG9rZW4pIHtcbiAgICBjb25zdCBwYXlsb2FkID0gZGVjb2RlVG9rZW4odG9rZW4pLnBheWxvYWQ7XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0eXBlIG9mIHN0cmluZycpO1xuICAgIH1cbiAgICBjb25zdCBwdWJsaWNLZXlzID0gcGF5bG9hZC5wdWJsaWNfa2V5cztcbiAgICBjb25zdCBhZGRyZXNzRnJvbUlzc3VlciA9IGdldEFkZHJlc3NGcm9tRElEKHBheWxvYWQuaXNzKTtcbiAgICBpZiAocHVibGljS2V5cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgY29uc3QgYWRkcmVzc0Zyb21QdWJsaWNLZXlzID0gcHVibGljS2V5VG9CdGNBZGRyZXNzKHB1YmxpY0tleXNbMF0pO1xuICAgICAgICBpZiAoYWRkcmVzc0Zyb21QdWJsaWNLZXlzID09PSBhZGRyZXNzRnJvbUlzc3Vlcikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVsdGlwbGUgcHVibGljIGtleXMgYXJlIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSXNzdWFuY2VEYXRlVmFsaWQodG9rZW4pIHtcbiAgICBjb25zdCBwYXlsb2FkID0gZGVjb2RlVG9rZW4odG9rZW4pLnBheWxvYWQ7XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0eXBlIG9mIHN0cmluZycpO1xuICAgIH1cbiAgICBpZiAocGF5bG9hZC5pYXQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXlsb2FkLmlhdCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpc3N1ZWRBdCA9IG5ldyBEYXRlKHBheWxvYWQuaWF0ICogMTAwMCk7XG4gICAgICAgIGlmIChuZXcgRGF0ZSgpLmdldFRpbWUoKSA8IGlzc3VlZEF0LmdldFRpbWUoKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0V4cGlyYXRpb25EYXRlVmFsaWQodG9rZW4pIHtcbiAgICBjb25zdCBwYXlsb2FkID0gZGVjb2RlVG9rZW4odG9rZW4pLnBheWxvYWQ7XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0eXBlIG9mIHN0cmluZycpO1xuICAgIH1cbiAgICBpZiAocGF5bG9hZC5leHApIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXlsb2FkLmV4cCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBleHBpcmVzQXQgPSBuZXcgRGF0ZShwYXlsb2FkLmV4cCAqIDEwMDApO1xuICAgICAgICBpZiAobmV3IERhdGUoKS5nZXRUaW1lKCkgPiBleHBpcmVzQXQuZ2V0VGltZSgpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTWFuaWZlc3RVcmlWYWxpZCh0b2tlbikge1xuICAgIGNvbnN0IHBheWxvYWQgPSBkZWNvZGVUb2tlbih0b2tlbikucGF5bG9hZDtcbiAgICBpZiAodHlwZW9mIHBheWxvYWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCB0b2tlbiBwYXlsb2FkIHR5cGUgb2Ygc3RyaW5nJyk7XG4gICAgfVxuICAgIHJldHVybiBpc1NhbWVPcmlnaW5BYnNvbHV0ZVVybChwYXlsb2FkLmRvbWFpbl9uYW1lLCBwYXlsb2FkLm1hbmlmZXN0X3VyaSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZWRpcmVjdFVyaVZhbGlkKHRva2VuKSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IGRlY29kZVRva2VuKHRva2VuKS5wYXlsb2FkO1xuICAgIGlmICh0eXBlb2YgcGF5bG9hZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIHRva2VuIHBheWxvYWQgdHlwZSBvZiBzdHJpbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIGlzU2FtZU9yaWdpbkFic29sdXRlVXJsKHBheWxvYWQuZG9tYWluX25hbWUsIHBheWxvYWQucmVkaXJlY3RfdXJpKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdXRoUmVxdWVzdCh0b2tlbikge1xuICAgIGlmIChkZWNvZGVUb2tlbih0b2tlbikuaGVhZGVyLmFsZyA9PT0gJ25vbmUnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9rZW4gbXVzdCBiZSBzaWduZWQgaW4gb3JkZXIgdG8gYmUgdmVyaWZpZWQnKTtcbiAgICB9XG4gICAgY29uc3QgdmFsdWVzID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBpc0V4cGlyYXRpb25EYXRlVmFsaWQodG9rZW4pLFxuICAgICAgICBpc0lzc3VhbmNlRGF0ZVZhbGlkKHRva2VuKSxcbiAgICAgICAgZG9TaWduYXR1cmVzTWF0Y2hQdWJsaWNLZXlzKHRva2VuKSxcbiAgICAgICAgZG9QdWJsaWNLZXlzTWF0Y2hJc3N1ZXIodG9rZW4pLFxuICAgICAgICBpc01hbmlmZXN0VXJpVmFsaWQodG9rZW4pLFxuICAgICAgICBpc1JlZGlyZWN0VXJpVmFsaWQodG9rZW4pLFxuICAgIF0pO1xuICAgIHJldHVybiB2YWx1ZXMuZXZlcnkodmFsID0+IHZhbCk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXV0aFJlcXVlc3RBbmRMb2FkTWFuaWZlc3QodG9rZW4pIHtcbiAgICBjb25zdCB2YWxpZCA9IGF3YWl0IHZlcmlmeUF1dGhSZXF1ZXN0KHRva2VuKTtcbiAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9rZW4gaXMgYW4gaW52YWxpZCBhdXRoIHJlcXVlc3QnKTtcbiAgICB9XG4gICAgcmV0dXJuIGZldGNoQXBwTWFuaWZlc3QodG9rZW4pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUF1dGhSZXNwb25zZSh0b2tlbikge1xuICAgIGNvbnN0IGNvbmRpdGlvbnMgPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGlzRXhwaXJhdGlvbkRhdGVWYWxpZCh0b2tlbiksXG4gICAgICAgIGlzSXNzdWFuY2VEYXRlVmFsaWQodG9rZW4pLFxuICAgICAgICBkb1NpZ25hdHVyZXNNYXRjaFB1YmxpY0tleXModG9rZW4pLFxuICAgICAgICBkb1B1YmxpY0tleXNNYXRjaElzc3Vlcih0b2tlbiksXG4gICAgXSk7XG4gICAgcmV0dXJuIGNvbmRpdGlvbnMuZXZlcnkodmFsID0+IHZhbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJpZmljYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/verification.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/buffer.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: function() { return /* binding */ alloc; },\n/* harmony export */   equals: function() { return /* binding */ equals; },\n/* harmony export */   readUInt16BE: function() { return /* binding */ readUInt16BE; },\n/* harmony export */   readUInt16LE: function() { return /* binding */ readUInt16LE; },\n/* harmony export */   readUInt32BE: function() { return /* binding */ readUInt32BE; },\n/* harmony export */   readUInt32LE: function() { return /* binding */ readUInt32LE; },\n/* harmony export */   readUInt8: function() { return /* binding */ readUInt8; },\n/* harmony export */   writeUInt16BE: function() { return /* binding */ writeUInt16BE; },\n/* harmony export */   writeUInt16LE: function() { return /* binding */ writeUInt16LE; },\n/* harmony export */   writeUInt32BE: function() { return /* binding */ writeUInt32BE; },\n/* harmony export */   writeUInt32LE: function() { return /* binding */ writeUInt32LE; },\n/* harmony export */   writeUInt8: function() { return /* binding */ writeUInt8; }\n/* harmony export */ });\nfunction equals(a, b) {\n    if (a.byteLength !== b.byteLength)\n        return false;\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nfunction alloc(length, value) {\n    const a = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        a[i] = value;\n    }\n    return a;\n}\nfunction readUInt16BE(source, offset) {\n    return ((source[offset + 0] << 8) | source[offset + 1]) >>> 0;\n}\nfunction writeUInt16BE(source, value, offset) {\n    source[offset + 0] = value >>> 8;\n    source[offset + 1] = value >>> 0;\n}\nfunction readUInt8(source, offset) {\n    return source[offset];\n}\nfunction writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nfunction readUInt16LE(source, offset) {\n    return ((source[offset + 0] << 0) >>> 0) | ((source[offset + 1] << 8) >>> 0);\n}\nfunction writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n}\nfunction readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24 +\n        source[offset + 1] * 2 ** 16 +\n        source[offset + 2] * 2 ** 8 +\n        source[offset + 3]);\n}\nfunction writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset] = value;\n}\nfunction readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nfunction writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n    value >>>= 8;\n    destination[offset + 2] = value & 255;\n    value >>>= 8;\n    destination[offset + 3] = value & 255;\n}\n//# sourceMappingURL=buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9idWZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvY29tbW9uL2Rpc3QvZXNtL2J1ZmZlci5qcz81NDEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgIGlmIChhLmJ5dGVMZW5ndGggIT09IGIuYnl0ZUxlbmd0aClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5ieXRlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jKGxlbmd0aCwgdmFsdWUpIHtcbiAgICBjb25zdCBhID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFbaV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVhZFVJbnQxNkJFKHNvdXJjZSwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuICgoc291cmNlW29mZnNldCArIDBdIDw8IDgpIHwgc291cmNlW29mZnNldCArIDFdKSA+Pj4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQxNkJFKHNvdXJjZSwgdmFsdWUsIG9mZnNldCkge1xuICAgIHNvdXJjZVtvZmZzZXQgKyAwXSA9IHZhbHVlID4+PiA4O1xuICAgIHNvdXJjZVtvZmZzZXQgKyAxXSA9IHZhbHVlID4+PiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50OChzb3VyY2UsIG9mZnNldCkge1xuICAgIHJldHVybiBzb3VyY2Vbb2Zmc2V0XTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQ4KGRlc3RpbmF0aW9uLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0XSA9IHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50MTZMRShzb3VyY2UsIG9mZnNldCkge1xuICAgIHJldHVybiAoKHNvdXJjZVtvZmZzZXQgKyAwXSA8PCAwKSA+Pj4gMCkgfCAoKHNvdXJjZVtvZmZzZXQgKyAxXSA8PCA4KSA+Pj4gMCk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JpdGVVSW50MTZMRShkZXN0aW5hdGlvbiwgdmFsdWUsIG9mZnNldCkge1xuICAgIGRlc3RpbmF0aW9uW29mZnNldCArIDBdID0gdmFsdWUgJiAyNTU7XG4gICAgdmFsdWUgPj4+PSA4O1xuICAgIGRlc3RpbmF0aW9uW29mZnNldCArIDFdID0gdmFsdWUgJiAyNTU7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVhZFVJbnQzMkJFKHNvdXJjZSwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuIChzb3VyY2Vbb2Zmc2V0XSAqIDIgKiogMjQgK1xuICAgICAgICBzb3VyY2Vbb2Zmc2V0ICsgMV0gKiAyICoqIDE2ICtcbiAgICAgICAgc291cmNlW29mZnNldCArIDJdICogMiAqKiA4ICtcbiAgICAgICAgc291cmNlW29mZnNldCArIDNdKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGRlc3RpbmF0aW9uLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0ICsgM10gPSB2YWx1ZTtcbiAgICB2YWx1ZSA+Pj49IDg7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0ICsgMl0gPSB2YWx1ZTtcbiAgICB2YWx1ZSA+Pj49IDg7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0ICsgMV0gPSB2YWx1ZTtcbiAgICB2YWx1ZSA+Pj49IDg7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0XSA9IHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50MzJMRShzb3VyY2UsIG9mZnNldCkge1xuICAgIHJldHVybiAoKChzb3VyY2Vbb2Zmc2V0ICsgMF0gPDwgMCkgPj4+IDApIHxcbiAgICAgICAgKChzb3VyY2Vbb2Zmc2V0ICsgMV0gPDwgOCkgPj4+IDApIHxcbiAgICAgICAgKChzb3VyY2Vbb2Zmc2V0ICsgMl0gPDwgMTYpID4+PiAwKSB8XG4gICAgICAgICgoc291cmNlW29mZnNldCArIDNdIDw8IDI0KSA+Pj4gMCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlVUludDMyTEUoZGVzdGluYXRpb24sIHZhbHVlLCBvZmZzZXQpIHtcbiAgICBkZXN0aW5hdGlvbltvZmZzZXQgKyAwXSA9IHZhbHVlICYgMjU1O1xuICAgIHZhbHVlID4+Pj0gODtcbiAgICBkZXN0aW5hdGlvbltvZmZzZXQgKyAxXSA9IHZhbHVlICYgMjU1O1xuICAgIHZhbHVlID4+Pj0gODtcbiAgICBkZXN0aW5hdGlvbltvZmZzZXQgKyAyXSA9IHZhbHVlICYgMjU1O1xuICAgIHZhbHVlID4+Pj0gODtcbiAgICBkZXN0aW5hdGlvbltvZmZzZXQgKyAzXSA9IHZhbHVlICYgMjU1O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnVmZmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/config.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/config.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: function() { return /* binding */ config; }\n/* harmony export */ });\nconst config = {\n    network: {\n        layer1: 'placeholder',\n    },\n    logLevel: 'debug',\n};\n\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ2tCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9jb25maWcuanM/NWJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25maWcgPSB7XG4gICAgbmV0d29yazoge1xuICAgICAgICBsYXllcjE6ICdwbGFjZWhvbGRlcicsXG4gICAgfSxcbiAgICBsb2dMZXZlbDogJ2RlYnVnJyxcbn07XG5leHBvcnQgeyBjb25maWcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js":
/*!***********************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/constants.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOCKSTACK_DEFAULT_GAIA_HUB_URL: function() { return /* binding */ BLOCKSTACK_DEFAULT_GAIA_HUB_URL; },\n/* harmony export */   ChainID: function() { return /* binding */ ChainID; },\n/* harmony export */   PRIVATE_KEY_COMPRESSED_LENGTH: function() { return /* binding */ PRIVATE_KEY_COMPRESSED_LENGTH; },\n/* harmony export */   PRIVATE_KEY_UNCOMPRESSED_LENGTH: function() { return /* binding */ PRIVATE_KEY_UNCOMPRESSED_LENGTH; },\n/* harmony export */   PeerNetworkID: function() { return /* binding */ PeerNetworkID; },\n/* harmony export */   TransactionVersion: function() { return /* binding */ TransactionVersion; }\n/* harmony export */ });\nvar ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nvar TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nvar PeerNetworkID;\n(function (PeerNetworkID) {\n    PeerNetworkID[PeerNetworkID[\"Mainnet\"] = 385875968] = \"Mainnet\";\n    PeerNetworkID[PeerNetworkID[\"Testnet\"] = 4278190080] = \"Testnet\";\n})(PeerNetworkID || (PeerNetworkID = {}));\nconst PRIVATE_KEY_COMPRESSED_LENGTH = 33;\nconst PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\nconst BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBCQUEwQjtBQUNwQjtBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdEO0FBQzFDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDaEM7QUFDQTtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvY29tbW9uL2Rpc3QvZXNtL2NvbnN0YW50cy5qcz81NWNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQ2hhaW5JRDtcbihmdW5jdGlvbiAoQ2hhaW5JRCkge1xuICAgIENoYWluSURbQ2hhaW5JRFtcIlRlc3RuZXRcIl0gPSAyMTQ3NDgzNjQ4XSA9IFwiVGVzdG5ldFwiO1xuICAgIENoYWluSURbQ2hhaW5JRFtcIk1haW5uZXRcIl0gPSAxXSA9IFwiTWFpbm5ldFwiO1xufSkoQ2hhaW5JRCB8fCAoQ2hhaW5JRCA9IHt9KSk7XG5leHBvcnQgdmFyIFRyYW5zYWN0aW9uVmVyc2lvbjtcbihmdW5jdGlvbiAoVHJhbnNhY3Rpb25WZXJzaW9uKSB7XG4gICAgVHJhbnNhY3Rpb25WZXJzaW9uW1RyYW5zYWN0aW9uVmVyc2lvbltcIk1haW5uZXRcIl0gPSAwXSA9IFwiTWFpbm5ldFwiO1xuICAgIFRyYW5zYWN0aW9uVmVyc2lvbltUcmFuc2FjdGlvblZlcnNpb25bXCJUZXN0bmV0XCJdID0gMTI4XSA9IFwiVGVzdG5ldFwiO1xufSkoVHJhbnNhY3Rpb25WZXJzaW9uIHx8IChUcmFuc2FjdGlvblZlcnNpb24gPSB7fSkpO1xuZXhwb3J0IHZhciBQZWVyTmV0d29ya0lEO1xuKGZ1bmN0aW9uIChQZWVyTmV0d29ya0lEKSB7XG4gICAgUGVlck5ldHdvcmtJRFtQZWVyTmV0d29ya0lEW1wiTWFpbm5ldFwiXSA9IDM4NTg3NTk2OF0gPSBcIk1haW5uZXRcIjtcbiAgICBQZWVyTmV0d29ya0lEW1BlZXJOZXR3b3JrSURbXCJUZXN0bmV0XCJdID0gNDI3ODE5MDA4MF0gPSBcIlRlc3RuZXRcIjtcbn0pKFBlZXJOZXR3b3JrSUQgfHwgKFBlZXJOZXR3b3JrSUQgPSB7fSkpO1xuZXhwb3J0IGNvbnN0IFBSSVZBVEVfS0VZX0NPTVBSRVNTRURfTEVOR1RIID0gMzM7XG5leHBvcnQgY29uc3QgUFJJVkFURV9LRVlfVU5DT01QUkVTU0VEX0xFTkdUSCA9IDMyO1xuZXhwb3J0IGNvbnN0IEJMT0NLU1RBQ0tfREVGQVVMVF9HQUlBX0hVQl9VUkwgPSAnaHR0cHM6Ly9odWIuYmxvY2tzdGFjay5vcmcnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/errors.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadPathError: function() { return /* binding */ BadPathError; },\n/* harmony export */   BlockstackError: function() { return /* binding */ BlockstackError; },\n/* harmony export */   ConflictError: function() { return /* binding */ ConflictError; },\n/* harmony export */   DoesNotExist: function() { return /* binding */ DoesNotExist; },\n/* harmony export */   ERROR_CODES: function() { return /* binding */ ERROR_CODES; },\n/* harmony export */   FailedDecryptionError: function() { return /* binding */ FailedDecryptionError; },\n/* harmony export */   GaiaHubError: function() { return /* binding */ GaiaHubError; },\n/* harmony export */   InvalidAmountError: function() { return /* binding */ InvalidAmountError; },\n/* harmony export */   InvalidDIDError: function() { return /* binding */ InvalidDIDError; },\n/* harmony export */   InvalidParameterError: function() { return /* binding */ InvalidParameterError; },\n/* harmony export */   InvalidStateError: function() { return /* binding */ InvalidStateError; },\n/* harmony export */   LoginFailedError: function() { return /* binding */ LoginFailedError; },\n/* harmony export */   MissingParameterError: function() { return /* binding */ MissingParameterError; },\n/* harmony export */   NoSessionDataError: function() { return /* binding */ NoSessionDataError; },\n/* harmony export */   NotEnoughFundsError: function() { return /* binding */ NotEnoughFundsError; },\n/* harmony export */   NotEnoughProofError: function() { return /* binding */ NotEnoughProofError; },\n/* harmony export */   PayloadTooLargeError: function() { return /* binding */ PayloadTooLargeError; },\n/* harmony export */   PreconditionFailedError: function() { return /* binding */ PreconditionFailedError; },\n/* harmony export */   RemoteServiceError: function() { return /* binding */ RemoteServiceError; },\n/* harmony export */   SignatureVerificationError: function() { return /* binding */ SignatureVerificationError; },\n/* harmony export */   ValidationError: function() { return /* binding */ ValidationError; }\n/* harmony export */ });\nconst ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    DOES_NOT_EXIST: 'does_not_exist',\n    FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n    INVALID_DID_ERROR: 'invalid_did_error',\n    NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n    INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n    LOGIN_FAILED_ERROR: 'login_failed',\n    SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n    CONFLICT_ERROR: 'conflict_error',\n    NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n    BAD_PATH_ERROR: 'bad_path_error',\n    VALIDATION_ERROR: 'validation_error',\n    PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n    PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n    UNKNOWN: 'unknown',\n};\nObject.freeze(ERROR_CODES);\nclass BlockstackError extends Error {\n    constructor(error) {\n        super();\n        let message = error.message;\n        let bugDetails = `Error Code: ${error.code}`;\n        let stack = this.stack;\n        if (!stack) {\n            try {\n                throw new Error();\n            }\n            catch (e) {\n                stack = e.stack;\n            }\n        }\n        else {\n            bugDetails += `Stack Trace:\\n${stack}`;\n        }\n        message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n        this.message = message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : undefined;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nclass InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nclass MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nclass RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nclass InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n        this.name = 'InvalidDIDError';\n    }\n}\nclass NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nclass InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n            ` specified spend is  ${specifiedAmount}`;\n        super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nclass LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nclass SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nclass FailedDecryptionError extends BlockstackError {\n    constructor(message = 'Unable to decrypt cipher object.') {\n        super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n        this.message = message;\n        this.name = 'FailedDecryptionError';\n    }\n}\nclass InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nclass NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nclass GaiaHubError extends BlockstackError {\n    constructor(error, response) {\n        super(error);\n        if (response) {\n            this.hubError = {\n                statusCode: response.status,\n                statusText: response.statusText,\n            };\n            if (typeof response.body === 'string') {\n                this.hubError.message = response.body;\n            }\n            else if (typeof response.body === 'object') {\n                Object.assign(this.hubError, response.body);\n            }\n        }\n    }\n}\nclass DoesNotExist extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n        this.name = 'DoesNotExist';\n    }\n}\nclass ConflictError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n        this.name = 'ConflictError';\n    }\n}\nclass NotEnoughProofError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n        this.name = 'NotEnoughProofError';\n    }\n}\nclass BadPathError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n        this.name = 'BadPathError';\n    }\n}\nclass ValidationError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n        this.name = 'ValidationError';\n    }\n}\nclass PayloadTooLargeError extends GaiaHubError {\n    constructor(message, response, maxUploadByteSize) {\n        super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response);\n        this.name = 'PayloadTooLargeError';\n        this.maxUploadByteSize = maxUploadByteSize;\n    }\n}\nclass PreconditionFailedError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n        this.name = 'PreconditionFailedError';\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsV0FBVztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxNQUFNO0FBQ2pEO0FBQ0E7QUFDQSxvRkFBb0YsV0FBVztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLFlBQVksV0FBVyxTQUFTLHdDQUF3QztBQUN4RTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQix5REFBeUQ7QUFDekU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQix5REFBeUQ7QUFDekU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQixpREFBaUQ7QUFDakU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQiw4Q0FBOEM7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG1FQUFtRSxXQUFXO0FBQzlFLGdCQUFnQixtREFBbUQ7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx3RkFBd0YsS0FBSztBQUM3RixvQ0FBb0MsZ0JBQWdCO0FBQ3BELGdCQUFnQixpREFBaUQ7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDRDQUE0QyxPQUFPO0FBQ25ELGdCQUFnQiwrQ0FBK0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsdURBQXVELE9BQU87QUFDOUQsZ0JBQWdCLHlEQUF5RDtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0Isb0RBQW9EO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQiwwQ0FBMEM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDBDQUEwQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDJDQUEyQztBQUMzRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDJDQUEyQztBQUMzRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLG1EQUFtRDtBQUNuRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDJDQUEyQztBQUMzRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDZDQUE2QztBQUM3RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLG9EQUFvRDtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0Isc0RBQXNEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9lcnJvcnMuanM/MGMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRVJST1JfQ09ERVMgPSB7XG4gICAgTUlTU0lOR19QQVJBTUVURVI6ICdtaXNzaW5nX3BhcmFtZXRlcicsXG4gICAgUkVNT1RFX1NFUlZJQ0VfRVJST1I6ICdyZW1vdGVfc2VydmljZV9lcnJvcicsXG4gICAgSU5WQUxJRF9TVEFURTogJ2ludmFsaWRfc3RhdGUnLFxuICAgIE5PX1NFU1NJT05fREFUQTogJ25vX3Nlc3Npb25fZGF0YScsXG4gICAgRE9FU19OT1RfRVhJU1Q6ICdkb2VzX25vdF9leGlzdCcsXG4gICAgRkFJTEVEX0RFQ1JZUFRJT05fRVJST1I6ICdmYWlsZWRfZGVjcnlwdGlvbl9lcnJvcicsXG4gICAgSU5WQUxJRF9ESURfRVJST1I6ICdpbnZhbGlkX2RpZF9lcnJvcicsXG4gICAgTk9UX0VOT1VHSF9GVU5EU19FUlJPUjogJ25vdF9lbm91Z2hfZXJyb3InLFxuICAgIElOVkFMSURfQU1PVU5UX0VSUk9SOiAnaW52YWxpZF9hbW91bnRfZXJyb3InLFxuICAgIExPR0lOX0ZBSUxFRF9FUlJPUjogJ2xvZ2luX2ZhaWxlZCcsXG4gICAgU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9FUlJPUjogJ3NpZ25hdHVyZV92ZXJpZmljYXRpb25fZmFpbHVyZScsXG4gICAgQ09ORkxJQ1RfRVJST1I6ICdjb25mbGljdF9lcnJvcicsXG4gICAgTk9UX0VOT1VHSF9QUk9PRl9FUlJPUjogJ25vdF9lbm91Z2hfcHJvb2ZfZXJyb3InLFxuICAgIEJBRF9QQVRIX0VSUk9SOiAnYmFkX3BhdGhfZXJyb3InLFxuICAgIFZBTElEQVRJT05fRVJST1I6ICd2YWxpZGF0aW9uX2Vycm9yJyxcbiAgICBQQVlMT0FEX1RPT19MQVJHRV9FUlJPUjogJ3BheWxvYWRfdG9vX2xhcmdlX2Vycm9yJyxcbiAgICBQUkVDT05ESVRJT05fRkFJTEVEX0VSUk9SOiAncHJlY29uZGl0aW9uX2ZhaWxlZF9lcnJvcicsXG4gICAgVU5LTk9XTjogJ3Vua25vd24nLFxufTtcbk9iamVjdC5mcmVlemUoRVJST1JfQ09ERVMpO1xuZXhwb3J0IGNsYXNzIEJsb2Nrc3RhY2tFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvcikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBsZXQgbWVzc2FnZSA9IGVycm9yLm1lc3NhZ2U7XG4gICAgICAgIGxldCBidWdEZXRhaWxzID0gYEVycm9yIENvZGU6ICR7ZXJyb3IuY29kZX1gO1xuICAgICAgICBsZXQgc3RhY2sgPSB0aGlzLnN0YWNrO1xuICAgICAgICBpZiAoIXN0YWNrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBzdGFjayA9IGUuc3RhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBidWdEZXRhaWxzICs9IGBTdGFjayBUcmFjZTpcXG4ke3N0YWNrfWA7XG4gICAgICAgIH1cbiAgICAgICAgbWVzc2FnZSArPSBgXFxuSWYgeW91IGJlbGlldmUgdGhpcyBleGNlcHRpb24gaXMgY2F1c2VkIGJ5IGEgYnVnIGluIHN0YWNrcy5qcyxcbiAgICAgIHBsZWFzZSBmaWxlIGEgYnVnIHJlcG9ydDogaHR0cHM6Ly9naXRodWIuY29tL2Jsb2Nrc3RhY2svc3RhY2tzLmpzL2lzc3Vlc1xcblxcbiR7YnVnRGV0YWlsc31gO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLmNvZGUgPSBlcnJvci5jb2RlO1xuICAgICAgICB0aGlzLnBhcmFtZXRlciA9IGVycm9yLnBhcmFtZXRlciA/IGVycm9yLnBhcmFtZXRlciA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgJHtzdXBlci50b1N0cmluZygpfVxuICAgIGNvZGU6ICR7dGhpcy5jb2RlfSBwYXJhbTogJHt0aGlzLnBhcmFtZXRlciA/IHRoaXMucGFyYW1ldGVyIDogJ24vYSd9YDtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSW52YWxpZFBhcmFtZXRlckVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbWV0ZXIsIG1lc3NhZ2UgPSAnJykge1xuICAgICAgICBzdXBlcih7IGNvZGU6IEVSUk9SX0NPREVTLk1JU1NJTkdfUEFSQU1FVEVSLCBtZXNzYWdlLCBwYXJhbWV0ZXIgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdNaXNzaW5nUGFyYW1ldGVyc0Vycm9yJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTWlzc2luZ1BhcmFtZXRlckVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbWV0ZXIsIG1lc3NhZ2UgPSAnJykge1xuICAgICAgICBzdXBlcih7IGNvZGU6IEVSUk9SX0NPREVTLk1JU1NJTkdfUEFSQU1FVEVSLCBtZXNzYWdlLCBwYXJhbWV0ZXIgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdNaXNzaW5nUGFyYW1ldGVyc0Vycm9yJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVtb3RlU2VydmljZUVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihyZXNwb25zZSwgbWVzc2FnZSA9ICcnKSB7XG4gICAgICAgIHN1cGVyKHsgY29kZTogRVJST1JfQ09ERVMuUkVNT1RFX1NFUlZJQ0VfRVJST1IsIG1lc3NhZ2UgfSk7XG4gICAgICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSW52YWxpZERJREVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJycpIHtcbiAgICAgICAgc3VwZXIoeyBjb2RlOiBFUlJPUl9DT0RFUy5JTlZBTElEX0RJRF9FUlJPUiwgbWVzc2FnZSB9KTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRESURFcnJvcic7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIE5vdEVub3VnaEZ1bmRzRXJyb3IgZXh0ZW5kcyBCbG9ja3N0YWNrRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGxlZnRUb0Z1bmQpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGBOb3QgZW5vdWdoIFVUWE9zIHRvIGZ1bmQuIExlZnQgdG8gZnVuZDogJHtsZWZ0VG9GdW5kfWA7XG4gICAgICAgIHN1cGVyKHsgY29kZTogRVJST1JfQ09ERVMuTk9UX0VOT1VHSF9GVU5EU19FUlJPUiwgbWVzc2FnZSB9KTtcbiAgICAgICAgdGhpcy5sZWZ0VG9GdW5kID0gbGVmdFRvRnVuZDtcbiAgICAgICAgdGhpcy5uYW1lID0gJ05vdEVub3VnaEZ1bmRzRXJyb3InO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJbnZhbGlkQW1vdW50RXJyb3IgZXh0ZW5kcyBCbG9ja3N0YWNrRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGZlZXMsIHNwZWNpZmllZEFtb3VudCkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gYE5vdCBlbm91Z2ggY29pbiB0byBmdW5kIGZlZXMgdHJhbnNhY3Rpb24gZmVlcy4gRmVlcyB3b3VsZCBiZSAke2ZlZXN9LGAgK1xuICAgICAgICAgICAgYCBzcGVjaWZpZWQgc3BlbmQgaXMgICR7c3BlY2lmaWVkQW1vdW50fWA7XG4gICAgICAgIHN1cGVyKHsgY29kZTogRVJST1JfQ09ERVMuSU5WQUxJRF9BTU9VTlRfRVJST1IsIG1lc3NhZ2UgfSk7XG4gICAgICAgIHRoaXMuc3BlY2lmaWVkQW1vdW50ID0gc3BlY2lmaWVkQW1vdW50O1xuICAgICAgICB0aGlzLmZlZXMgPSBmZWVzO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZEFtb3VudEVycm9yJztcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTG9naW5GYWlsZWRFcnJvciBleHRlbmRzIEJsb2Nrc3RhY2tFcnJvciB7XG4gICAgY29uc3RydWN0b3IocmVhc29uKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgRmFpbGVkIHRvIGxvZ2luOiAke3JlYXNvbn1gO1xuICAgICAgICBzdXBlcih7IGNvZGU6IEVSUk9SX0NPREVTLkxPR0lOX0ZBSUxFRF9FUlJPUiwgbWVzc2FnZSB9KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0xvZ2luRmFpbGVkRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBTaWduYXR1cmVWZXJpZmljYXRpb25FcnJvciBleHRlbmRzIEJsb2Nrc3RhY2tFcnJvciB7XG4gICAgY29uc3RydWN0b3IocmVhc29uKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgRmFpbGVkIHRvIHZlcmlmeSBzaWduYXR1cmU6ICR7cmVhc29ufWA7XG4gICAgICAgIHN1cGVyKHsgY29kZTogRVJST1JfQ09ERVMuU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9FUlJPUiwgbWVzc2FnZSB9KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1NpZ25hdHVyZVZlcmlmaWNhdGlvbkVycm9yJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRmFpbGVkRGVjcnlwdGlvbkVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ1VuYWJsZSB0byBkZWNyeXB0IGNpcGhlciBvYmplY3QuJykge1xuICAgICAgICBzdXBlcih7IGNvZGU6IEVSUk9SX0NPREVTLkZBSUxFRF9ERUNSWVBUSU9OX0VSUk9SLCBtZXNzYWdlIH0pO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLm5hbWUgPSAnRmFpbGVkRGVjcnlwdGlvbkVycm9yJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSW52YWxpZFN0YXRlRXJyb3IgZXh0ZW5kcyBCbG9ja3N0YWNrRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoeyBjb2RlOiBFUlJPUl9DT0RFUy5JTlZBTElEX1NUQVRFLCBtZXNzYWdlIH0pO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFN0YXRlRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOb1Nlc3Npb25EYXRhRXJyb3IgZXh0ZW5kcyBCbG9ja3N0YWNrRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoeyBjb2RlOiBFUlJPUl9DT0RFUy5JTlZBTElEX1NUQVRFLCBtZXNzYWdlIH0pO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLm5hbWUgPSAnTm9TZXNzaW9uRGF0YUVycm9yJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgR2FpYUh1YkVycm9yIGV4dGVuZHMgQmxvY2tzdGFja0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvciwgcmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoZXJyb3IpO1xuICAgICAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHRoaXMuaHViRXJyb3IgPSB7XG4gICAgICAgICAgICAgICAgc3RhdHVzQ29kZTogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiByZXNwb25zZS5ib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMuaHViRXJyb3IubWVzc2FnZSA9IHJlc3BvbnNlLmJvZHk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgcmVzcG9uc2UuYm9keSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuaHViRXJyb3IsIHJlc3BvbnNlLmJvZHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERvZXNOb3RFeGlzdCBleHRlbmRzIEdhaWFIdWJFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoeyBtZXNzYWdlLCBjb2RlOiBFUlJPUl9DT0RFUy5ET0VTX05PVF9FWElTVCB9LCByZXNwb25zZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdEb2VzTm90RXhpc3QnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25mbGljdEVycm9yIGV4dGVuZHMgR2FpYUh1YkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZXNwb25zZSkge1xuICAgICAgICBzdXBlcih7IG1lc3NhZ2UsIGNvZGU6IEVSUk9SX0NPREVTLkNPTkZMSUNUX0VSUk9SIH0sIHJlc3BvbnNlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0NvbmZsaWN0RXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOb3RFbm91Z2hQcm9vZkVycm9yIGV4dGVuZHMgR2FpYUh1YkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZXNwb25zZSkge1xuICAgICAgICBzdXBlcih7IG1lc3NhZ2UsIGNvZGU6IEVSUk9SX0NPREVTLk5PVF9FTk9VR0hfUFJPT0ZfRVJST1IgfSwgcmVzcG9uc2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnTm90RW5vdWdoUHJvb2ZFcnJvcic7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEJhZFBhdGhFcnJvciBleHRlbmRzIEdhaWFIdWJFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoeyBtZXNzYWdlLCBjb2RlOiBFUlJPUl9DT0RFUy5CQURfUEFUSF9FUlJPUiB9LCByZXNwb25zZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdCYWRQYXRoRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBWYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBHYWlhSHViRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHJlc3BvbnNlKSB7XG4gICAgICAgIHN1cGVyKHsgbWVzc2FnZSwgY29kZTogRVJST1JfQ09ERVMuVkFMSURBVElPTl9FUlJPUiB9LCByZXNwb25zZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdWYWxpZGF0aW9uRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBQYXlsb2FkVG9vTGFyZ2VFcnJvciBleHRlbmRzIEdhaWFIdWJFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVzcG9uc2UsIG1heFVwbG9hZEJ5dGVTaXplKSB7XG4gICAgICAgIHN1cGVyKHsgbWVzc2FnZSwgY29kZTogRVJST1JfQ09ERVMuUEFZTE9BRF9UT09fTEFSR0VfRVJST1IgfSwgcmVzcG9uc2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnUGF5bG9hZFRvb0xhcmdlRXJyb3InO1xuICAgICAgICB0aGlzLm1heFVwbG9hZEJ5dGVTaXplID0gbWF4VXBsb2FkQnl0ZVNpemU7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFByZWNvbmRpdGlvbkZhaWxlZEVycm9yIGV4dGVuZHMgR2FpYUh1YkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZXNwb25zZSkge1xuICAgICAgICBzdXBlcih7IG1lc3NhZ2UsIGNvZGU6IEVSUk9SX0NPREVTLlBSRUNPTkRJVElPTl9GQUlMRURfRVJST1IgfSwgcmVzcG9uc2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnUHJlY29uZGl0aW9uRmFpbGVkRXJyb3InO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/keys.js":
/*!******************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/keys.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   privateKeyToBytes: function() { return /* binding */ privateKeyToBytes; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\nfunction privateKeyToBytes(privateKey) {\n    const privateKeyBuffer = typeof privateKey === 'string' ? (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(privateKey) : privateKey;\n    if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n        throw new Error(`Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`);\n    }\n    if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n        throw new Error('Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01');\n    }\n    return privateKeyBuffer;\n}\n//# sourceMappingURL=keys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9rZXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBQzlCO0FBQ1AsOERBQThELGtEQUFVO0FBQ3hFO0FBQ0EsMEhBQTBILHdCQUF3QjtBQUNsSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9jb21tb24vZGlzdC9lc20va2V5cy5qcz9kMTEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhleFRvQnl0ZXMgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBwcml2YXRlS2V5VG9CeXRlcyhwcml2YXRlS2V5KSB7XG4gICAgY29uc3QgcHJpdmF0ZUtleUJ1ZmZlciA9IHR5cGVvZiBwcml2YXRlS2V5ID09PSAnc3RyaW5nJyA/IGhleFRvQnl0ZXMocHJpdmF0ZUtleSkgOiBwcml2YXRlS2V5O1xuICAgIGlmIChwcml2YXRlS2V5QnVmZmVyLmxlbmd0aCAhPSAzMiAmJiBwcml2YXRlS2V5QnVmZmVyLmxlbmd0aCAhPSAzMykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltcHJvcGVybHkgZm9ybWF0dGVkIHByaXZhdGUta2V5LiBQcml2YXRlLWtleSBieXRlIGxlbmd0aCBzaG91bGQgYmUgMzIgb3IgMzMuIExlbmd0aCBwcm92aWRlZDogJHtwcml2YXRlS2V5QnVmZmVyLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgaWYgKHByaXZhdGVLZXlCdWZmZXIubGVuZ3RoID09IDMzICYmIHByaXZhdGVLZXlCdWZmZXJbMzJdICE9PSAxKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW1wcm9wZXJseSBmb3JtYXR0ZWQgcHJpdmF0ZS1rZXkuIDMzIGJ5dGVzIGluZGljYXRlIGNvbXByZXNzZWQga2V5LCBidXQgdGhlIGxhc3QgYnl0ZSBtdXN0IGJlID09IDAxJyk7XG4gICAgfVxuICAgIHJldHVybiBwcml2YXRlS2V5QnVmZmVyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2V5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/logger.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/logger.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: function() { return /* binding */ Logger; }\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/config.js\");\n\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\nfor (let index = 0; index < levels.length; index++) {\n    const level = levels[index];\n    levelToInt[level] = index;\n    intToLevel[index] = level;\n}\nclass Logger {\n    static error(message) {\n        if (!this.shouldLog('error'))\n            return;\n        console.error(this.logMessage('error', message));\n    }\n    static warn(message) {\n        if (!this.shouldLog('warn'))\n            return;\n        console.warn(this.logMessage('warn', message));\n    }\n    static info(message) {\n        if (!this.shouldLog('info'))\n            return;\n        console.log(this.logMessage('info', message));\n    }\n    static debug(message) {\n        if (!this.shouldLog('debug'))\n            return;\n        console.log(this.logMessage('debug', message));\n    }\n    static logMessage(level, message) {\n        return `[${level.toUpperCase()}] ${message}`;\n    }\n    static shouldLog(level) {\n        const currentLevel = levelToInt[_config__WEBPACK_IMPORTED_MODULE_0__.config.logLevel];\n        return currentLevel <= levelToInt[level];\n    }\n}\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9sb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQixJQUFJLFFBQVE7QUFDbkQ7QUFDQTtBQUNBLHdDQUF3QywyQ0FBTTtBQUM5QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9jb21tb24vZGlzdC9lc20vbG9nZ2VyLmpzPzA1OWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi9jb25maWcnO1xuY29uc3QgbGV2ZWxzID0gWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InLCAnbm9uZSddO1xuY29uc3QgbGV2ZWxUb0ludCA9IHt9O1xuY29uc3QgaW50VG9MZXZlbCA9IHt9O1xuZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxldmVscy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICBjb25zdCBsZXZlbCA9IGxldmVsc1tpbmRleF07XG4gICAgbGV2ZWxUb0ludFtsZXZlbF0gPSBpbmRleDtcbiAgICBpbnRUb0xldmVsW2luZGV4XSA9IGxldmVsO1xufVxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XG4gICAgc3RhdGljIGVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZExvZygnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc29sZS5lcnJvcih0aGlzLmxvZ01lc3NhZ2UoJ2Vycm9yJywgbWVzc2FnZSkpO1xuICAgIH1cbiAgICBzdGF0aWMgd2FybihtZXNzYWdlKSB7XG4gICAgICAgIGlmICghdGhpcy5zaG91bGRMb2coJ3dhcm4nKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc29sZS53YXJuKHRoaXMubG9nTWVzc2FnZSgnd2FybicsIG1lc3NhZ2UpKTtcbiAgICB9XG4gICAgc3RhdGljIGluZm8obWVzc2FnZSkge1xuICAgICAgICBpZiAoIXRoaXMuc2hvdWxkTG9nKCdpbmZvJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMubG9nTWVzc2FnZSgnaW5mbycsIG1lc3NhZ2UpKTtcbiAgICB9XG4gICAgc3RhdGljIGRlYnVnKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZExvZygnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5sb2dNZXNzYWdlKCdkZWJ1ZycsIG1lc3NhZ2UpKTtcbiAgICB9XG4gICAgc3RhdGljIGxvZ01lc3NhZ2UobGV2ZWwsIG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIGBbJHtsZXZlbC50b1VwcGVyQ2FzZSgpfV0gJHttZXNzYWdlfWA7XG4gICAgfVxuICAgIHN0YXRpYyBzaG91bGRMb2cobGV2ZWwpIHtcbiAgICAgICAgY29uc3QgY3VycmVudExldmVsID0gbGV2ZWxUb0ludFtjb25maWcubG9nTGV2ZWxdO1xuICAgICAgICByZXR1cm4gY3VycmVudExldmVsIDw9IGxldmVsVG9JbnRbbGV2ZWxdO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/logger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/signatures.js":
/*!************************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/signatures.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseRecoverableSignatureVrs: function() { return /* binding */ parseRecoverableSignatureVrs; },\n/* harmony export */   signatureRsvToVrs: function() { return /* binding */ signatureRsvToVrs; },\n/* harmony export */   signatureVrsToRsv: function() { return /* binding */ signatureVrsToRsv; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\nconst COORDINATE_BYTES = 32;\nfunction parseRecoverableSignatureVrs(signature) {\n    if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n        throw new Error('Invalid signature');\n    }\n    const recoveryIdHex = signature.slice(0, 2);\n    const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n    const s = signature.slice(2 + COORDINATE_BYTES * 2);\n    return {\n        recoveryId: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToInt)(recoveryIdHex),\n        r,\n        s,\n    };\n}\nfunction signatureVrsToRsv(signature) {\n    return signature.slice(2) + signature.slice(0, 2);\n}\nfunction signatureRsvToVrs(signature) {\n    return signature.slice(-2) + signature.slice(0, -2);\n}\n//# sourceMappingURL=signatures.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2NvbW1vbi9kaXN0L2VzbS9zaWduYXR1cmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUM7QUFDbkM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdEQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvY29tbW9uL2Rpc3QvZXNtL3NpZ25hdHVyZXMuanM/Mzk2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb0ludCB9IGZyb20gJy4vdXRpbHMnO1xuY29uc3QgQ09PUkRJTkFURV9CWVRFUyA9IDMyO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUmVjb3ZlcmFibGVTaWduYXR1cmVWcnMoc2lnbmF0dXJlKSB7XG4gICAgaWYgKHNpZ25hdHVyZS5sZW5ndGggPCBDT09SRElOQVRFX0JZVEVTICogMiAqIDIgKyAxKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUnKTtcbiAgICB9XG4gICAgY29uc3QgcmVjb3ZlcnlJZEhleCA9IHNpZ25hdHVyZS5zbGljZSgwLCAyKTtcbiAgICBjb25zdCByID0gc2lnbmF0dXJlLnNsaWNlKDIsIDIgKyBDT09SRElOQVRFX0JZVEVTICogMik7XG4gICAgY29uc3QgcyA9IHNpZ25hdHVyZS5zbGljZSgyICsgQ09PUkRJTkFURV9CWVRFUyAqIDIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlY292ZXJ5SWQ6IGhleFRvSW50KHJlY292ZXJ5SWRIZXgpLFxuICAgICAgICByLFxuICAgICAgICBzLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2lnbmF0dXJlVnJzVG9Sc3Yoc2lnbmF0dXJlKSB7XG4gICAgcmV0dXJuIHNpZ25hdHVyZS5zbGljZSgyKSArIHNpZ25hdHVyZS5zbGljZSgwLCAyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzaWduYXR1cmVSc3ZUb1ZycyhzaWduYXR1cmUpIHtcbiAgICByZXR1cm4gc2lnbmF0dXJlLnNsaWNlKC0yKSArIHNpZ25hdHVyZS5zbGljZSgwLCAtMik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduYXR1cmVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/signatures.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@stacks/common/dist/esm/utils.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOCKSTACK_HANDLER: function() { return /* binding */ BLOCKSTACK_HANDLER; },\n/* harmony export */   asciiToBytes: function() { return /* binding */ asciiToBytes; },\n/* harmony export */   bigIntToBytes: function() { return /* binding */ bigIntToBytes; },\n/* harmony export */   bytesToAscii: function() { return /* binding */ bytesToAscii; },\n/* harmony export */   bytesToHex: function() { return /* binding */ bytesToHex; },\n/* harmony export */   bytesToUtf8: function() { return /* binding */ bytesToUtf8; },\n/* harmony export */   concatArray: function() { return /* binding */ concatArray; },\n/* harmony export */   concatBytes: function() { return /* binding */ concatBytes; },\n/* harmony export */   fromTwos: function() { return /* binding */ fromTwos; },\n/* harmony export */   getAesCbcOutputLength: function() { return /* binding */ getAesCbcOutputLength; },\n/* harmony export */   getBase64OutputLength: function() { return /* binding */ getBase64OutputLength; },\n/* harmony export */   getGlobalObject: function() { return /* binding */ getGlobalObject; },\n/* harmony export */   getGlobalObjects: function() { return /* binding */ getGlobalObjects; },\n/* harmony export */   getGlobalScope: function() { return /* binding */ getGlobalScope; },\n/* harmony export */   hexToBigInt: function() { return /* binding */ hexToBigInt; },\n/* harmony export */   hexToBytes: function() { return /* binding */ hexToBytes; },\n/* harmony export */   hexToInt: function() { return /* binding */ hexToInt; },\n/* harmony export */   intToBigInt: function() { return /* binding */ intToBigInt; },\n/* harmony export */   intToBytes: function() { return /* binding */ intToBytes; },\n/* harmony export */   intToHex: function() { return /* binding */ intToHex; },\n/* harmony export */   isInstance: function() { return /* binding */ isInstance; },\n/* harmony export */   isLaterVersion: function() { return /* binding */ isLaterVersion; },\n/* harmony export */   isSameOriginAbsoluteUrl: function() { return /* binding */ isSameOriginAbsoluteUrl; },\n/* harmony export */   makeUUID4: function() { return /* binding */ makeUUID4; },\n/* harmony export */   megabytesToBytes: function() { return /* binding */ megabytesToBytes; },\n/* harmony export */   nextHour: function() { return /* binding */ nextHour; },\n/* harmony export */   nextMonth: function() { return /* binding */ nextMonth; },\n/* harmony export */   nextYear: function() { return /* binding */ nextYear; },\n/* harmony export */   octetsToBytes: function() { return /* binding */ octetsToBytes; },\n/* harmony export */   toBytes: function() { return /* binding */ toBytes; },\n/* harmony export */   toTwos: function() { return /* binding */ toTwos; },\n/* harmony export */   updateQueryStringParameter: function() { return /* binding */ updateQueryStringParameter; },\n/* harmony export */   utf8ToBytes: function() { return /* binding */ utf8ToBytes; },\n/* harmony export */   with0x: function() { return /* binding */ with0x; }\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/logger.js\");\n\nconst BLOCKSTACK_HANDLER = 'blockstack';\nfunction nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nfunction nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nfunction nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nfunction megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nfunction getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nfunction getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nfunction updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nfunction isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nfunction isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nfunction getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof __webpack_require__.g !== 'undefined') {\n        return __webpack_require__.g;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nfunction getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nfunction getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                _logger__WEBPACK_IMPORTED_MODULE_0__.Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nfunction intToBytes(value, signed, byteLength) {\n    return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\nfunction intToBigInt(value, signed) {\n    let parsedValue = value;\n    if (typeof parsedValue === 'number') {\n        if (!Number.isInteger(parsedValue)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        if (parsedValue > Number.MAX_SAFE_INTEGER) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`);\n        }\n        return BigInt(parsedValue);\n    }\n    if (typeof parsedValue === 'string') {\n        if (parsedValue.toLowerCase().startsWith('0x')) {\n            let hex = parsedValue.slice(2);\n            hex = hex.padStart(hex.length + (hex.length % 2), '0');\n            parsedValue = hexToBytes(hex);\n        }\n        else {\n            try {\n                return BigInt(parsedValue);\n            }\n            catch (error) {\n                if (error instanceof SyntaxError) {\n                    throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n                }\n            }\n        }\n    }\n    if (typeof parsedValue === 'bigint') {\n        return parsedValue;\n    }\n    if (parsedValue instanceof Uint8Array) {\n        if (signed) {\n            const bn = fromTwos(BigInt(`0x${bytesToHex(parsedValue)}`), BigInt(parsedValue.byteLength * 8));\n            return BigInt(bn.toString());\n        }\n        else {\n            return BigInt(`0x${bytesToHex(parsedValue)}`);\n        }\n    }\n    if (parsedValue != null &&\n        typeof parsedValue === 'object' &&\n        parsedValue.constructor.name === 'BN') {\n        return BigInt(parsedValue.toString());\n    }\n    throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.`);\n}\nfunction with0x(value) {\n    return value.startsWith('0x') ? value : `0x${value}`;\n}\nfunction hexToBigInt(hex) {\n    if (typeof hex !== 'string')\n        throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n    return BigInt(`0x${hex}`);\n}\nfunction intToHex(integer, lengthBytes = 8) {\n    const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n    return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nfunction hexToInt(hex) {\n    return parseInt(hex, 16);\n}\nfunction bigIntToBytes(value, length = 16) {\n    const hex = intToHex(value, length);\n    return hexToBytes(hex);\n}\nfunction toTwos(value, width) {\n    if (value < -(BigInt(1) << (width - BigInt(1))) ||\n        (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value) {\n        throw `Unable to represent integer in width: ${width}`;\n    }\n    if (value >= BigInt(0)) {\n        return BigInt(value);\n    }\n    return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n    return value & (BigInt(1) << n);\n}\nfunction fromTwos(value, width) {\n    if (nthBit(value, width - BigInt(1))) {\n        return value - (BigInt(1) << width);\n    }\n    return value;\n}\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (const u of uint8a) {\n        hex += hexes[u];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n    }\n    const paddedHex = hex.length % 2 ? `0${hex}` : hex;\n    const array = new Uint8Array(paddedHex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = paddedHex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction utf8ToBytes(str) {\n    return new TextEncoder().encode(str);\n}\nfunction bytesToUtf8(arr) {\n    return new TextDecoder().decode(arr);\n}\nfunction asciiToBytes(str) {\n    const byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i) & 0xff);\n    }\n    return new Uint8Array(byteArray);\n}\nfunction bytesToAscii(arr) {\n    return String.fromCharCode.apply(null, arr);\n}\nfunction isNotOctet(octet) {\n    return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\nfunction octetsToBytes(numbers) {\n    if (numbers.some(isNotOctet))\n        throw new Error('Some values are invalid bytes.');\n    return new Uint8Array(numbers);\n}\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        return utf8ToBytes(data);\n    if (data instanceof Uint8Array)\n        return data;\n    throw new TypeError(`Expected input type is (Uint8Array | string) but got (${typeof data})`);\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(a => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction concatArray(elements) {\n    return concatBytes(...elements.map(e => {\n        if (typeof e === 'number')\n            return octetsToBytes([e]);\n        if (e instanceof Array)\n            return octetsToBytes(e);\n        return e;\n    }));\n}\nfunction isInstance(object, type) {\n    return object instanceof type || object?.constructor?.name?.toLowerCase() === type.name;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/aesCipher.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/aesCipher.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeCryptoAesCipher: function() { return /* binding */ NodeCryptoAesCipher; },\n/* harmony export */   WebCryptoAesCipher: function() { return /* binding */ WebCryptoAesCipher; },\n/* harmony export */   createCipher: function() { return /* binding */ createCipher; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _cryptoUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cryptoUtils */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/cryptoUtils.js\");\n\n\nclass NodeCryptoAesCipher {\n    constructor(createCipher, createDecipher) {\n        this.createCipher = createCipher;\n        this.createDecipher = createDecipher;\n    }\n    async encrypt(algorithm, key, iv, data) {\n        if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cipher = this.createCipher(algorithm, key, iv);\n        const result = new Uint8Array((0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(cipher.update(data), cipher.final()));\n        return Promise.resolve(result);\n    }\n    async decrypt(algorithm, key, iv, data) {\n        if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cipher = this.createDecipher(algorithm, key, iv);\n        const result = new Uint8Array((0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(cipher.update(data), cipher.final()));\n        return Promise.resolve(result);\n    }\n}\nclass WebCryptoAesCipher {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async encrypt(algorithm, key, iv, data) {\n        let algo;\n        let length;\n        if (algorithm === 'aes-128-cbc') {\n            algo = 'AES-CBC';\n            length = 128;\n        }\n        else if (algorithm === 'aes-256-cbc') {\n            algo = 'AES-CBC';\n            length = 256;\n        }\n        else {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n            'encrypt',\n        ]);\n        const result = await this.subtleCrypto.encrypt({ name: algo, iv }, cryptoKey, data);\n        return new Uint8Array(result);\n    }\n    async decrypt(algorithm, key, iv, data) {\n        let algo;\n        let length;\n        if (algorithm === 'aes-128-cbc') {\n            algo = 'AES-CBC';\n            length = 128;\n        }\n        else if (algorithm === 'aes-256-cbc') {\n            algo = 'AES-CBC';\n            length = 256;\n        }\n        else {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n            'decrypt',\n        ]);\n        const result = await this.subtleCrypto.decrypt({ name: algo, iv }, cryptoKey, data);\n        return new Uint8Array(result);\n    }\n}\nasync function createCipher() {\n    const cryptoLib = await (0,_cryptoUtils__WEBPACK_IMPORTED_MODULE_1__.getCryptoLib)();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoAesCipher(cryptoLib.lib);\n    }\n    return new NodeCryptoAesCipher(cryptoLib.lib.createCipheriv, cryptoLib.lib.createDecipheriv);\n}\n//# sourceMappingURL=aesCipher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vYWVzQ2lwaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDO0FBQ0E7QUFDdEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsVUFBVTtBQUN2RTtBQUNBO0FBQ0Esc0NBQXNDLDJEQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELFVBQVU7QUFDdkU7QUFDQTtBQUNBLHNDQUFzQywyREFBVztBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxVQUFVO0FBQ3ZFO0FBQ0EsMEVBQTBFLG9CQUFvQjtBQUM5RjtBQUNBO0FBQ0EseURBQXlELGdCQUFnQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELFVBQVU7QUFDdkU7QUFDQSwwRUFBMEUsb0JBQW9CO0FBQzlGO0FBQ0E7QUFDQSx5REFBeUQsZ0JBQWdCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9lbmNyeXB0aW9uL2Rpc3QvZXNtL2Flc0NpcGhlci5qcz9hZGFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmNhdEJ5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgZ2V0Q3J5cHRvTGliIH0gZnJvbSAnLi9jcnlwdG9VdGlscyc7XG5leHBvcnQgY2xhc3MgTm9kZUNyeXB0b0Flc0NpcGhlciB7XG4gICAgY29uc3RydWN0b3IoY3JlYXRlQ2lwaGVyLCBjcmVhdGVEZWNpcGhlcikge1xuICAgICAgICB0aGlzLmNyZWF0ZUNpcGhlciA9IGNyZWF0ZUNpcGhlcjtcbiAgICAgICAgdGhpcy5jcmVhdGVEZWNpcGhlciA9IGNyZWF0ZURlY2lwaGVyO1xuICAgIH1cbiAgICBhc3luYyBlbmNyeXB0KGFsZ29yaXRobSwga2V5LCBpdiwgZGF0YSkge1xuICAgICAgICBpZiAoYWxnb3JpdGhtICE9PSAnYWVzLTEyOC1jYmMnICYmIGFsZ29yaXRobSAhPT0gJ2Flcy0yNTYtY2JjJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjaXBoZXIgYWxnb3JpdGhtIFwiJHthbGdvcml0aG19XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjaXBoZXIgPSB0aGlzLmNyZWF0ZUNpcGhlcihhbGdvcml0aG0sIGtleSwgaXYpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShjb25jYXRCeXRlcyhjaXBoZXIudXBkYXRlKGRhdGEpLCBjaXBoZXIuZmluYWwoKSkpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdCk7XG4gICAgfVxuICAgIGFzeW5jIGRlY3J5cHQoYWxnb3JpdGhtLCBrZXksIGl2LCBkYXRhKSB7XG4gICAgICAgIGlmIChhbGdvcml0aG0gIT09ICdhZXMtMTI4LWNiYycgJiYgYWxnb3JpdGhtICE9PSAnYWVzLTI1Ni1jYmMnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNpcGhlciBhbGdvcml0aG0gXCIke2FsZ29yaXRobX1cImApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNpcGhlciA9IHRoaXMuY3JlYXRlRGVjaXBoZXIoYWxnb3JpdGhtLCBrZXksIGl2KTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoY29uY2F0Qnl0ZXMoY2lwaGVyLnVwZGF0ZShkYXRhKSwgY2lwaGVyLmZpbmFsKCkpKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXN1bHQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBXZWJDcnlwdG9BZXNDaXBoZXIge1xuICAgIGNvbnN0cnVjdG9yKHN1YnRsZUNyeXB0bykge1xuICAgICAgICB0aGlzLnN1YnRsZUNyeXB0byA9IHN1YnRsZUNyeXB0bztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChhbGdvcml0aG0sIGtleSwgaXYsIGRhdGEpIHtcbiAgICAgICAgbGV0IGFsZ287XG4gICAgICAgIGxldCBsZW5ndGg7XG4gICAgICAgIGlmIChhbGdvcml0aG0gPT09ICdhZXMtMTI4LWNiYycpIHtcbiAgICAgICAgICAgIGFsZ28gPSAnQUVTLUNCQyc7XG4gICAgICAgICAgICBsZW5ndGggPSAxMjg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYWxnb3JpdGhtID09PSAnYWVzLTI1Ni1jYmMnKSB7XG4gICAgICAgICAgICBhbGdvID0gJ0FFUy1DQkMnO1xuICAgICAgICAgICAgbGVuZ3RoID0gMjU2O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjaXBoZXIgYWxnb3JpdGhtIFwiJHthbGdvcml0aG19XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjcnlwdG9LZXkgPSBhd2FpdCB0aGlzLnN1YnRsZUNyeXB0by5pbXBvcnRLZXkoJ3JhdycsIGtleSwgeyBuYW1lOiBhbGdvLCBsZW5ndGggfSwgZmFsc2UsIFtcbiAgICAgICAgICAgICdlbmNyeXB0JyxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuc3VidGxlQ3J5cHRvLmVuY3J5cHQoeyBuYW1lOiBhbGdvLCBpdiB9LCBjcnlwdG9LZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkocmVzdWx0KTtcbiAgICB9XG4gICAgYXN5bmMgZGVjcnlwdChhbGdvcml0aG0sIGtleSwgaXYsIGRhdGEpIHtcbiAgICAgICAgbGV0IGFsZ287XG4gICAgICAgIGxldCBsZW5ndGg7XG4gICAgICAgIGlmIChhbGdvcml0aG0gPT09ICdhZXMtMTI4LWNiYycpIHtcbiAgICAgICAgICAgIGFsZ28gPSAnQUVTLUNCQyc7XG4gICAgICAgICAgICBsZW5ndGggPSAxMjg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYWxnb3JpdGhtID09PSAnYWVzLTI1Ni1jYmMnKSB7XG4gICAgICAgICAgICBhbGdvID0gJ0FFUy1DQkMnO1xuICAgICAgICAgICAgbGVuZ3RoID0gMjU2O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjaXBoZXIgYWxnb3JpdGhtIFwiJHthbGdvcml0aG19XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjcnlwdG9LZXkgPSBhd2FpdCB0aGlzLnN1YnRsZUNyeXB0by5pbXBvcnRLZXkoJ3JhdycsIGtleSwgeyBuYW1lOiBhbGdvLCBsZW5ndGggfSwgZmFsc2UsIFtcbiAgICAgICAgICAgICdkZWNyeXB0JyxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuc3VidGxlQ3J5cHRvLmRlY3J5cHQoeyBuYW1lOiBhbGdvLCBpdiB9LCBjcnlwdG9LZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkocmVzdWx0KTtcbiAgICB9XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2lwaGVyKCkge1xuICAgIGNvbnN0IGNyeXB0b0xpYiA9IGF3YWl0IGdldENyeXB0b0xpYigpO1xuICAgIGlmIChjcnlwdG9MaWIubmFtZSA9PT0gJ3N1YnRsZUNyeXB0bycpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBXZWJDcnlwdG9BZXNDaXBoZXIoY3J5cHRvTGliLmxpYik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgTm9kZUNyeXB0b0Flc0NpcGhlcihjcnlwdG9MaWIubGliLmNyZWF0ZUNpcGhlcml2LCBjcnlwdG9MaWIubGliLmNyZWF0ZURlY2lwaGVyaXYpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWVzQ2lwaGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/aesCipher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/cryptoUtils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/cryptoUtils.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NO_CRYPTO_LIB: function() { return /* binding */ NO_CRYPTO_LIB; },\n/* harmony export */   getCryptoLib: function() { return /* binding */ getCryptoLib; },\n/* harmony export */   isNodeCryptoAvailable: function() { return /* binding */ isNodeCryptoAvailable; },\n/* harmony export */   isSubtleCryptoAvailable: function() { return /* binding */ isSubtleCryptoAvailable; }\n/* harmony export */ });\nfunction isSubtleCryptoAvailable() {\n    return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\nfunction isNodeCryptoAvailable(withFeature) {\n    try {\n        const resolvedResult = /*require.resolve*/(/*! crypto */ \"?59cb\");\n        if (!resolvedResult) {\n            return false;\n        }\n        const cryptoModule = __webpack_require__(/*! crypto */ \"?59cb\");\n        if (!cryptoModule) {\n            return false;\n        }\n        if (withFeature) {\n            const features = withFeature(cryptoModule);\n            return features;\n        }\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nconst NO_CRYPTO_LIB = 'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\nasync function getCryptoLib() {\n    if (isSubtleCryptoAvailable()) {\n        return {\n            lib: crypto.subtle,\n            name: 'subtleCrypto',\n        };\n    }\n    else {\n        try {\n            const nodeCrypto = __webpack_require__(/*! crypto */ \"?59cb\");\n            return {\n                lib: nodeCrypto,\n                name: 'nodeCrypto',\n            };\n        }\n        catch (error) {\n            throw new Error(NO_CRYPTO_LIB);\n        }\n    }\n}\n//# sourceMappingURL=cryptoUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vY3J5cHRvVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSwrQkFBK0IsbUJBQWUsQ0FBQyxxQkFBUTtBQUN2RDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQyxxQkFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG1CQUFPLENBQUMscUJBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9lbmNyeXB0aW9uL2Rpc3QvZXNtL2NyeXB0b1V0aWxzLmpzP2I0YTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzU3VidGxlQ3J5cHRvQXZhaWxhYmxlKCkge1xuICAgIHJldHVybiB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY3J5cHRvLnN1YnRsZSAhPT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlQ3J5cHRvQXZhaWxhYmxlKHdpdGhGZWF0dXJlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzb2x2ZWRSZXN1bHQgPSByZXF1aXJlLnJlc29sdmUoJ2NyeXB0bycpO1xuICAgICAgICBpZiAoIXJlc29sdmVkUmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3J5cHRvTW9kdWxlID0gcmVxdWlyZSgnY3J5cHRvJyk7XG4gICAgICAgIGlmICghY3J5cHRvTW9kdWxlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHdpdGhGZWF0dXJlKSB7XG4gICAgICAgICAgICBjb25zdCBmZWF0dXJlcyA9IHdpdGhGZWF0dXJlKGNyeXB0b01vZHVsZSk7XG4gICAgICAgICAgICByZXR1cm4gZmVhdHVyZXM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IE5PX0NSWVBUT19MSUIgPSAnQ3J5cHRvIGxpYiBub3QgZm91bmQuIEVpdGhlciB0aGUgV2ViQ3J5cHRvIFwiY3J5cHRvLnN1YnRsZVwiIG9yIE5vZGUuanMgXCJjcnlwdG9cIiBtb2R1bGUgbXVzdCBiZSBhdmFpbGFibGUuJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDcnlwdG9MaWIoKSB7XG4gICAgaWYgKGlzU3VidGxlQ3J5cHRvQXZhaWxhYmxlKCkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGxpYjogY3J5cHRvLnN1YnRsZSxcbiAgICAgICAgICAgIG5hbWU6ICdzdWJ0bGVDcnlwdG8nLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGVDcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbGliOiBub2RlQ3J5cHRvLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdub2RlQ3J5cHRvJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoTk9fQ1JZUFRPX0xJQik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG9VdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/cryptoUtils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/ec.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/ec.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidPublicKeyReason: function() { return /* binding */ InvalidPublicKeyReason; },\n/* harmony export */   aes256CbcEncrypt: function() { return /* binding */ aes256CbcEncrypt; },\n/* harmony export */   decryptECIES: function() { return /* binding */ decryptECIES; },\n/* harmony export */   eciesGetJsonStringLength: function() { return /* binding */ eciesGetJsonStringLength; },\n/* harmony export */   encryptECIES: function() { return /* binding */ encryptECIES; },\n/* harmony export */   getBytesFromBN: function() { return /* binding */ getBytesFromBN; },\n/* harmony export */   getCipherObjectWrapper: function() { return /* binding */ getCipherObjectWrapper; },\n/* harmony export */   getHexFromBN: function() { return /* binding */ getHexFromBN; },\n/* harmony export */   getSignedCipherObjectWrapper: function() { return /* binding */ getSignedCipherObjectWrapper; },\n/* harmony export */   hmacSha256: function() { return /* binding */ hmacSha256; },\n/* harmony export */   signECDSA: function() { return /* binding */ signECDSA; },\n/* harmony export */   verifyECDSA: function() { return /* binding */ verifyECDSA; },\n/* harmony export */   verifyMessageSignature: function() { return /* binding */ verifyMessageSignature; },\n/* harmony export */   verifyMessageSignatureRsv: function() { return /* binding */ verifyMessageSignatureRsv; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/errors.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/signatures.js\");\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\");\n/* harmony import */ var _aesCipher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./aesCipher */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/aesCipher.js\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\");\n/* harmony import */ var _messageSignature__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./messageSignature */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/messageSignature.js\");\n/* harmony import */ var _sha2Hash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sha2Hash */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/sha2Hash.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/utils.js\");\n\n\n\n\n\n\n\n\n\n\n_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac.create(_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nvar InvalidPublicKeyReason;\n(function (InvalidPublicKeyReason) {\n    InvalidPublicKeyReason[\"InvalidFormat\"] = \"InvalidFormat\";\n    InvalidPublicKeyReason[\"IsNotPoint\"] = \"IsNotPoint\";\n})(InvalidPublicKeyReason || (InvalidPublicKeyReason = {}));\nasync function aes256CbcEncrypt(iv, key, plaintext) {\n    const cipher = await (0,_aesCipher__WEBPACK_IMPORTED_MODULE_4__.createCipher)();\n    return await cipher.encrypt('aes-256-cbc', key, iv, plaintext);\n}\nasync function aes256CbcDecrypt(iv, key, ciphertext) {\n    const cipher = await (0,_aesCipher__WEBPACK_IMPORTED_MODULE_4__.createCipher)();\n    return await cipher.decrypt('aes-256-cbc', key, iv, ciphertext);\n}\nfunction hmacSha256(key, content) {\n    return (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256, key, content);\n}\nfunction equalsConstTime(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    let res = 0;\n    for (let i = 0; i < a.length; i++) {\n        res |= a[i] ^ b[i];\n    }\n    return res === 0;\n}\nfunction sharedSecretToKeys(sharedSecret) {\n    const hashedSecret = (0,_sha2Hash__WEBPACK_IMPORTED_MODULE_5__.hashSha512Sync)(sharedSecret);\n    return {\n        encryptionKey: hashedSecret.slice(0, 32),\n        hmacKey: hashedSecret.slice(32),\n    };\n}\nfunction allHexChars(maybe) {\n    return maybe.match(/^[0-9a-f]+$/i) !== null;\n}\nfunction isValidPublicKey(pub) {\n    const invalidFormat = {\n        result: false,\n        reason_data: 'Invalid public key format',\n        reason: InvalidPublicKeyReason.InvalidFormat,\n    };\n    const invalidPoint = {\n        result: false,\n        reason_data: 'Public key is not a point',\n        reason: InvalidPublicKeyReason.IsNotPoint,\n    };\n    if (pub.length !== 66 && pub.length !== 130)\n        return invalidFormat;\n    const firstByte = pub.slice(0, 2);\n    if (pub.length === 130 && firstByte !== '04')\n        return invalidFormat;\n    if (pub.length === 66 && firstByte !== '02' && firstByte !== '03')\n        return invalidFormat;\n    if (!allHexChars(pub))\n        return invalidFormat;\n    try {\n        const point = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Point.fromHex(pub);\n        point.assertValidity();\n        return {\n            result: true,\n            reason_data: null,\n            reason: null,\n        };\n    }\n    catch (e) {\n        return invalidPoint;\n    }\n}\nfunction getHexFromBN(bnInput) {\n    const hexOut = bnInput.toString(16);\n    if (hexOut.length === 64) {\n        return hexOut;\n    }\n    else if (hexOut.length < 64) {\n        const padding = '0'.repeat(64 - hexOut.length);\n        return `${padding}${hexOut}`;\n    }\n    else {\n        throw new Error('Generated a > 32-byte BN for encryption. Failing.');\n    }\n}\nfunction getBytesFromBN(bnInput) {\n    const result = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bigIntToBytes)(bnInput, 32);\n    if (result.byteLength !== 32) {\n        throw new Error('Failed to generate a 32-byte Uint8Array');\n    }\n    return result;\n}\nfunction getCipherObjectWrapper(opts) {\n    const shell = {\n        iv: '',\n        ephemeralPK: '',\n        mac: '',\n        cipherText: '',\n        wasString: !!opts.wasString,\n    };\n    if (opts.cipherTextEncoding === 'base64') {\n        shell.cipherTextEncoding = 'base64';\n    }\n    const ivLength = 32;\n    const ephemeralPKLength = 66;\n    const macLength = 64;\n    return {\n        payloadValuesLength: ivLength + ephemeralPKLength + macLength,\n        payloadShell: JSON.stringify(shell),\n    };\n}\nfunction getSignedCipherObjectWrapper(payloadShell) {\n    const shell = {\n        signature: '',\n        publicKey: '',\n        cipherText: payloadShell,\n    };\n    const signatureLength = 144;\n    const publicKeyLength = 66;\n    return {\n        signedPayloadValuesLength: signatureLength + publicKeyLength,\n        signedPayloadShell: JSON.stringify(shell),\n    };\n}\nfunction eciesGetJsonStringLength(opts) {\n    const { payloadShell, payloadValuesLength } = getCipherObjectWrapper(opts);\n    const cipherTextLength = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getAesCbcOutputLength)(opts.contentLength);\n    let encodedCipherTextLength;\n    if (!opts.cipherTextEncoding || opts.cipherTextEncoding === 'hex') {\n        encodedCipherTextLength = cipherTextLength * 2;\n    }\n    else if (opts.cipherTextEncoding === 'base64') {\n        encodedCipherTextLength = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getBase64OutputLength)(cipherTextLength);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${opts.cipherTextEncoding}\"`);\n    }\n    if (!opts.sign) {\n        return payloadShell.length + payloadValuesLength + encodedCipherTextLength;\n    }\n    else {\n        const { signedPayloadShell, signedPayloadValuesLength } = getSignedCipherObjectWrapper(payloadShell);\n        return (signedPayloadShell.length +\n            signedPayloadValuesLength +\n            payloadValuesLength +\n            encodedCipherTextLength);\n    }\n}\nasync function encryptECIES(publicKey, content, wasString, cipherTextEncoding) {\n    const validity = isValidPublicKey(publicKey);\n    if (!validity.result) {\n        throw validity;\n    }\n    const ephemeralPrivateKey = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.randomPrivateKey();\n    const ephemeralPublicKey = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.getPublicKey)(ephemeralPrivateKey, true);\n    let sharedSecret = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.getSharedSecret)(ephemeralPrivateKey, publicKey, true);\n    sharedSecret = sharedSecret.slice(1);\n    const sharedKeys = sharedSecretToKeys(sharedSecret);\n    const initializationVector = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.randomBytes(16);\n    const cipherText = await aes256CbcEncrypt(initializationVector, sharedKeys.encryptionKey, content);\n    const macData = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatBytes)(initializationVector, ephemeralPublicKey, cipherText);\n    const mac = hmacSha256(sharedKeys.hmacKey, macData);\n    let cipherTextString;\n    if (!cipherTextEncoding || cipherTextEncoding === 'hex') {\n        cipherTextString = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(cipherText);\n    }\n    else if (cipherTextEncoding === 'base64') {\n        cipherTextString = (0,base64_js__WEBPACK_IMPORTED_MODULE_3__.fromByteArray)(cipherText);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${cipherTextEncoding}\"`);\n    }\n    const result = {\n        iv: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(initializationVector),\n        ephemeralPK: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(ephemeralPublicKey),\n        cipherText: cipherTextString,\n        mac: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(mac),\n        wasString,\n    };\n    if (cipherTextEncoding && cipherTextEncoding !== 'hex') {\n        result.cipherTextEncoding = cipherTextEncoding;\n    }\n    return result;\n}\nasync function decryptECIES(privateKey, cipherObject) {\n    if (!cipherObject.ephemeralPK) {\n        throw new _stacks_common__WEBPACK_IMPORTED_MODULE_8__.FailedDecryptionError('Unable to get public key from cipher object. ' +\n            'You might be trying to decrypt an unencrypted object.');\n    }\n    const ephemeralPK = cipherObject.ephemeralPK;\n    let sharedSecret = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.getSharedSecret)(privateKey, ephemeralPK, true);\n    sharedSecret = sharedSecret.slice(1);\n    const sharedKeys = sharedSecretToKeys(sharedSecret);\n    const ivBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(cipherObject.iv);\n    let cipherTextBytes;\n    if (!cipherObject.cipherTextEncoding || cipherObject.cipherTextEncoding === 'hex') {\n        cipherTextBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(cipherObject.cipherText);\n    }\n    else if (cipherObject.cipherTextEncoding === 'base64') {\n        cipherTextBytes = (0,base64_js__WEBPACK_IMPORTED_MODULE_3__.toByteArray)(cipherObject.cipherText);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${cipherObject.cipherText}\"`);\n    }\n    const macData = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatBytes)(ivBytes, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(ephemeralPK), cipherTextBytes);\n    const actualMac = hmacSha256(sharedKeys.hmacKey, macData);\n    const expectedMac = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBytes)(cipherObject.mac);\n    if (!equalsConstTime(expectedMac, actualMac)) {\n        throw new _stacks_common__WEBPACK_IMPORTED_MODULE_8__.FailedDecryptionError('Decryption failed: failure in MAC check');\n    }\n    const plainText = await aes256CbcDecrypt(ivBytes, sharedKeys.encryptionKey, cipherTextBytes);\n    if (cipherObject.wasString) {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToUtf8)(plainText);\n    }\n    return plainText;\n}\nfunction signECDSA(privateKey, content) {\n    const contentBytes = typeof content === 'string' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.utf8ToBytes)(content) : content;\n    const publicKey = (0,_keys__WEBPACK_IMPORTED_MODULE_9__.getPublicKeyFromPrivate)(privateKey);\n    const contentHash = (0,_sha2Hash__WEBPACK_IMPORTED_MODULE_5__.hashSha256Sync)(contentBytes);\n    const signature = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.signSync)(contentHash, privateKey);\n    return {\n        signature: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(signature),\n        publicKey,\n    };\n}\nfunction verifyECDSA(content, publicKey, signature) {\n    const contentBytes = typeof content === 'string' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.utf8ToBytes)(content) : content;\n    const contentHash = (0,_sha2Hash__WEBPACK_IMPORTED_MODULE_5__.hashSha256Sync)(contentBytes);\n    return (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.verify)(signature, contentHash, publicKey, { strict: false });\n}\nfunction verifyMessageSignature({ signature, message, publicKey, }) {\n    const { r, s } = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_10__.parseRecoverableSignatureVrs)(signature);\n    const sig = new _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Signature((0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBigInt)(r), (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.hexToBigInt)(s));\n    const hashedMsg = typeof message === 'string' ? (0,_messageSignature__WEBPACK_IMPORTED_MODULE_11__.hashMessage)(message) : message;\n    const verificationResult = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.verify)(sig, hashedMsg, publicKey, { strict: false });\n    if (verificationResult || typeof message !== 'string')\n        return verificationResult;\n    const LEGACY_PREFIX = '\\x18Stacks Message Signing:\\n';\n    const legacyHash = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)((0,_messageSignature__WEBPACK_IMPORTED_MODULE_11__.encodeMessage)(message, LEGACY_PREFIX));\n    return (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.verify)(sig, legacyHash, publicKey, { strict: false });\n}\nfunction verifyMessageSignatureRsv({ signature, message, publicKey, }) {\n    return verifyMessageSignature({\n        signature: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_10__.signatureRsvToVrs)(signature),\n        message,\n        publicKey,\n    });\n}\n//# sourceMappingURL=ec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/ec.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/encryption.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/encryption.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decryptContent: function() { return /* binding */ decryptContent; },\n/* harmony export */   encryptContent: function() { return /* binding */ encryptContent; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _ec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ec */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/ec.js\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\");\n\n\n\nasync function encryptContent(content, options) {\n    const opts = Object.assign({}, options);\n    let privateKey;\n    if (!opts.publicKey) {\n        if (!opts.privateKey) {\n            throw new Error('Either public key or private key must be supplied for encryption.');\n        }\n        opts.publicKey = (0,_keys__WEBPACK_IMPORTED_MODULE_0__.getPublicKeyFromPrivate)(opts.privateKey);\n    }\n    const wasString = typeof opts.wasString === 'boolean' ? opts.wasString : typeof content === 'string';\n    const contentBytes = typeof content === 'string' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(content) : content;\n    const cipherObject = await (0,_ec__WEBPACK_IMPORTED_MODULE_2__.encryptECIES)(opts.publicKey, contentBytes, wasString, opts.cipherTextEncoding);\n    let cipherPayload = JSON.stringify(cipherObject);\n    if (opts.sign) {\n        if (typeof opts.sign === 'string') {\n            privateKey = opts.sign;\n        }\n        else if (!privateKey) {\n            privateKey = opts.privateKey;\n        }\n        const signatureObject = (0,_ec__WEBPACK_IMPORTED_MODULE_2__.signECDSA)(privateKey, cipherPayload);\n        const signedCipherObject = {\n            signature: signatureObject.signature,\n            publicKey: signatureObject.publicKey,\n            cipherText: cipherPayload,\n        };\n        cipherPayload = JSON.stringify(signedCipherObject);\n    }\n    return cipherPayload;\n}\nfunction decryptContent(content, options) {\n    const opts = Object.assign({}, options);\n    if (!opts.privateKey) {\n        throw new Error('Private key is required for decryption.');\n    }\n    try {\n        const cipherObject = JSON.parse(content);\n        return (0,_ec__WEBPACK_IMPORTED_MODULE_2__.decryptECIES)(opts.privateKey, cipherObject);\n    }\n    catch (err) {\n        if (err instanceof SyntaxError) {\n            throw new Error('Failed to parse encrypted content JSON. The content may not ' +\n                'be encrypted. If using getFile, try passing { decrypt: false }.');\n        }\n        else {\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=encryption.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vZW5jcnlwdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QztBQUNpQjtBQUNiO0FBQzFDO0FBQ1AsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOERBQXVCO0FBQ2hEO0FBQ0E7QUFDQSx1REFBdUQsMkRBQVc7QUFDbEUsK0JBQStCLGlEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsOENBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsZ0JBQWdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vZW5jcnlwdGlvbi5qcz8zNWI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHV0ZjhUb0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgZGVjcnlwdEVDSUVTLCBlbmNyeXB0RUNJRVMsIHNpZ25FQ0RTQSwgfSBmcm9tICcuL2VjJztcbmltcG9ydCB7IGdldFB1YmxpY0tleUZyb21Qcml2YXRlIH0gZnJvbSAnLi9rZXlzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbmNyeXB0Q29udGVudChjb250ZW50LCBvcHRpb25zKSB7XG4gICAgY29uc3Qgb3B0cyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpO1xuICAgIGxldCBwcml2YXRlS2V5O1xuICAgIGlmICghb3B0cy5wdWJsaWNLZXkpIHtcbiAgICAgICAgaWYgKCFvcHRzLnByaXZhdGVLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRWl0aGVyIHB1YmxpYyBrZXkgb3IgcHJpdmF0ZSBrZXkgbXVzdCBiZSBzdXBwbGllZCBmb3IgZW5jcnlwdGlvbi4nKTtcbiAgICAgICAgfVxuICAgICAgICBvcHRzLnB1YmxpY0tleSA9IGdldFB1YmxpY0tleUZyb21Qcml2YXRlKG9wdHMucHJpdmF0ZUtleSk7XG4gICAgfVxuICAgIGNvbnN0IHdhc1N0cmluZyA9IHR5cGVvZiBvcHRzLndhc1N0cmluZyA9PT0gJ2Jvb2xlYW4nID8gb3B0cy53YXNTdHJpbmcgOiB0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZyc7XG4gICAgY29uc3QgY29udGVudEJ5dGVzID0gdHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnID8gdXRmOFRvQnl0ZXMoY29udGVudCkgOiBjb250ZW50O1xuICAgIGNvbnN0IGNpcGhlck9iamVjdCA9IGF3YWl0IGVuY3J5cHRFQ0lFUyhvcHRzLnB1YmxpY0tleSwgY29udGVudEJ5dGVzLCB3YXNTdHJpbmcsIG9wdHMuY2lwaGVyVGV4dEVuY29kaW5nKTtcbiAgICBsZXQgY2lwaGVyUGF5bG9hZCA9IEpTT04uc3RyaW5naWZ5KGNpcGhlck9iamVjdCk7XG4gICAgaWYgKG9wdHMuc2lnbikge1xuICAgICAgICBpZiAodHlwZW9mIG9wdHMuc2lnbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHByaXZhdGVLZXkgPSBvcHRzLnNpZ247XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIXByaXZhdGVLZXkpIHtcbiAgICAgICAgICAgIHByaXZhdGVLZXkgPSBvcHRzLnByaXZhdGVLZXk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlT2JqZWN0ID0gc2lnbkVDRFNBKHByaXZhdGVLZXksIGNpcGhlclBheWxvYWQpO1xuICAgICAgICBjb25zdCBzaWduZWRDaXBoZXJPYmplY3QgPSB7XG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZU9iamVjdC5zaWduYXR1cmUsXG4gICAgICAgICAgICBwdWJsaWNLZXk6IHNpZ25hdHVyZU9iamVjdC5wdWJsaWNLZXksXG4gICAgICAgICAgICBjaXBoZXJUZXh0OiBjaXBoZXJQYXlsb2FkLFxuICAgICAgICB9O1xuICAgICAgICBjaXBoZXJQYXlsb2FkID0gSlNPTi5zdHJpbmdpZnkoc2lnbmVkQ2lwaGVyT2JqZWN0KTtcbiAgICB9XG4gICAgcmV0dXJuIGNpcGhlclBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjcnlwdENvbnRlbnQoY29udGVudCwgb3B0aW9ucykge1xuICAgIGNvbnN0IG9wdHMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKTtcbiAgICBpZiAoIW9wdHMucHJpdmF0ZUtleSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1ByaXZhdGUga2V5IGlzIHJlcXVpcmVkIGZvciBkZWNyeXB0aW9uLicpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBjaXBoZXJPYmplY3QgPSBKU09OLnBhcnNlKGNvbnRlbnQpO1xuICAgICAgICByZXR1cm4gZGVjcnlwdEVDSUVTKG9wdHMucHJpdmF0ZUtleSwgY2lwaGVyT2JqZWN0KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAoZXJyIGluc3RhbmNlb2YgU3ludGF4RXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHBhcnNlIGVuY3J5cHRlZCBjb250ZW50IEpTT04uIFRoZSBjb250ZW50IG1heSBub3QgJyArXG4gICAgICAgICAgICAgICAgJ2JlIGVuY3J5cHRlZC4gSWYgdXNpbmcgZ2V0RmlsZSwgdHJ5IHBhc3NpbmcgeyBkZWNyeXB0OiBmYWxzZSB9LicpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jcnlwdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/encryption.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/hashRipemd160.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/hashRipemd160.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashRipemd160: function() { return /* binding */ hashRipemd160; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/ripemd160.js\");\n\nfunction hashRipemd160(data) {\n    return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__.ripemd160)(data);\n}\n//# sourceMappingURL=hashRipemd160.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vaGFzaFJpcGVtZDE2MC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDtBQUM3QztBQUNQLFdBQVcsa0VBQVM7QUFDcEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9lbmNyeXB0aW9uL2Rpc3QvZXNtL2hhc2hSaXBlbWQxNjAuanM/MGZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByaXBlbWQxNjAgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3JpcGVtZDE2MCc7XG5leHBvcnQgZnVuY3Rpb24gaGFzaFJpcGVtZDE2MChkYXRhKSB7XG4gICAgcmV0dXJuIHJpcGVtZDE2MChkYXRhKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hSaXBlbWQxNjAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/hashRipemd160.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js":
/*!**********************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/keys.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58CheckDecode: function() { return /* binding */ base58CheckDecode; },\n/* harmony export */   base58CheckEncode: function() { return /* binding */ base58CheckEncode; },\n/* harmony export */   base58Encode: function() { return /* binding */ base58Encode; },\n/* harmony export */   compressPrivateKey: function() { return /* binding */ compressPrivateKey; },\n/* harmony export */   ecSign: function() { return /* binding */ ecSign; },\n/* harmony export */   getPublicKeyFromPrivate: function() { return /* binding */ getPublicKeyFromPrivate; },\n/* harmony export */   isValidPrivateKey: function() { return /* binding */ isValidPrivateKey; },\n/* harmony export */   makeECPrivateKey: function() { return /* binding */ makeECPrivateKey; },\n/* harmony export */   publicKeyToBtcAddress: function() { return /* binding */ publicKeyToBtcAddress; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/keys.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _hashRipemd160__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hashRipemd160 */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/hashRipemd160.js\");\n/* harmony import */ var _sha2Hash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sha2Hash */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/sha2Hash.js\");\n\n\n\n\n\n\n\nconst BITCOIN_PUBKEYHASH = 0x00;\n_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac.create(_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nfunction makeECPrivateKey() {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.randomPrivateKey());\n}\nfunction base58CheckDecode(btcAddress) {\n    const bytes = bs58__WEBPACK_IMPORTED_MODULE_3___default().decode(btcAddress);\n    const payload = bytes.slice(0, -4);\n    const checksum = bytes.slice(-4);\n    const newChecksum = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(payload));\n    if ((checksum[0] ^ newChecksum[0]) |\n        (checksum[1] ^ newChecksum[1]) |\n        (checksum[2] ^ newChecksum[2]) |\n        (checksum[3] ^ newChecksum[3])) {\n        throw new Error('Invalid checksum');\n    }\n    if (payload.length !== 21)\n        throw new TypeError('Invalid address length');\n    const version = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.readUInt8)(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n}\nfunction base58Encode(hash) {\n    const checksum = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(hash));\n    return bs58__WEBPACK_IMPORTED_MODULE_3___default().encode((0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.concatBytes)(hash, checksum).slice(0, hash.length + 4));\n}\nfunction base58CheckEncode(version, hash) {\n    return base58Encode((0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.concatBytes)(new Uint8Array([version]), hash.slice(0, 20)));\n}\nfunction publicKeyToBtcAddress(publicKey, version = BITCOIN_PUBKEYHASH) {\n    const publicKeyBytes = typeof publicKey === 'string' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(publicKey) : publicKey;\n    const publicKeyHash160 = (0,_hashRipemd160__WEBPACK_IMPORTED_MODULE_6__.hashRipemd160)((0,_sha2Hash__WEBPACK_IMPORTED_MODULE_7__.hashSha256Sync)(publicKeyBytes));\n    return base58CheckEncode(version, publicKeyHash160);\n}\nfunction getPublicKeyFromPrivate(privateKey) {\n    const privateKeyBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.privateKeyToBytes)(privateKey);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.getPublicKey)(privateKeyBytes.slice(0, 32), true));\n}\nfunction ecSign(messageHash, hexPrivateKey) {\n    return (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.signSync)(messageHash, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.privateKeyToBytes)(hexPrivateKey).slice(0, 32), {\n        der: false,\n    });\n}\nfunction isValidPrivateKey(privateKey) {\n    return _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.isValidPrivateKey((0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.privateKeyToBytes)(privateKey));\n}\nfunction compressPrivateKey(privateKey) {\n    const privateKeyBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.privateKeyToBytes)(privateKey);\n    return privateKeyBytes.length == _stacks_common__WEBPACK_IMPORTED_MODULE_9__.PRIVATE_KEY_COMPRESSED_LENGTH\n        ? privateKeyBytes\n        : (0,_stacks_common__WEBPACK_IMPORTED_MODULE_4__.concatBytes)(privateKeyBytes, new Uint8Array([1]));\n}\n//# sourceMappingURL=keys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20va2V5cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUNJO0FBQ3dDO0FBQzZDO0FBQ3pHO0FBQ3NCO0FBQ0o7QUFDNUM7QUFDQSxtREFBSztBQUNMLGNBQWMsb0RBQUksUUFBUSx3REFBTTtBQUNoQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsMERBQVUsQ0FBQyxtREFBSztBQUMzQjtBQUNPO0FBQ1Asa0JBQWtCLGtEQUFhO0FBQy9CO0FBQ0E7QUFDQSx3QkFBd0IsNERBQU0sQ0FBQyw0REFBTTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFTO0FBQzdCO0FBQ0EsYUFBYTtBQUNiO0FBQ087QUFDUCxxQkFBcUIsNERBQU0sQ0FBQyw0REFBTTtBQUNsQyxXQUFXLGtEQUFhLENBQUMsMkRBQVc7QUFDcEM7QUFDTztBQUNQLHdCQUF3QiwyREFBVztBQUNuQztBQUNPO0FBQ1AsMkRBQTJELDBEQUFVO0FBQ3JFLDZCQUE2Qiw2REFBYSxDQUFDLHlEQUFjO0FBQ3pEO0FBQ0E7QUFDTztBQUNQLDRCQUE0QixpRUFBaUI7QUFDN0MsV0FBVywwREFBVSxDQUFDLDhEQUFpQjtBQUN2QztBQUNPO0FBQ1AsV0FBVywwREFBUSxjQUFjLGlFQUFpQjtBQUNsRDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsV0FBVyxtREFBSyxtQkFBbUIsaUVBQWlCO0FBQ3BEO0FBQ087QUFDUCw0QkFBNEIsaUVBQWlCO0FBQzdDLHFDQUFxQyx5RUFBNkI7QUFDbEU7QUFDQSxVQUFVLDJEQUFXO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvZW5jcnlwdGlvbi9kaXN0L2VzbS9rZXlzLmpzPzg3M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG1hYyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvaG1hYyc7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTI1Nic7XG5pbXBvcnQgeyBnZXRQdWJsaWNLZXkgYXMgbm9ibGVHZXRQdWJsaWNLZXksIHNpZ25TeW5jLCB1dGlscyB9IGZyb20gJ0Bub2JsZS9zZWNwMjU2azEnO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCwgY29uY2F0Qnl0ZXMsIGhleFRvQnl0ZXMsIHByaXZhdGVLZXlUb0J5dGVzLCBQUklWQVRFX0tFWV9DT01QUkVTU0VEX0xFTkdUSCwgcmVhZFVJbnQ4LCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmltcG9ydCBiYXNlNTggZnJvbSAnYnM1OCc7XG5pbXBvcnQgeyBoYXNoUmlwZW1kMTYwIH0gZnJvbSAnLi9oYXNoUmlwZW1kMTYwJztcbmltcG9ydCB7IGhhc2hTaGEyNTZTeW5jIH0gZnJvbSAnLi9zaGEySGFzaCc7XG5jb25zdCBCSVRDT0lOX1BVQktFWUhBU0ggPSAweDAwO1xudXRpbHMuaG1hY1NoYTI1NlN5bmMgPSAoa2V5LCAuLi5tc2dzKSA9PiB7XG4gICAgY29uc3QgaCA9IGhtYWMuY3JlYXRlKHNoYTI1Niwga2V5KTtcbiAgICBtc2dzLmZvckVhY2gobXNnID0+IGgudXBkYXRlKG1zZykpO1xuICAgIHJldHVybiBoLmRpZ2VzdCgpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBtYWtlRUNQcml2YXRlS2V5KCkge1xuICAgIHJldHVybiBieXRlc1RvSGV4KHV0aWxzLnJhbmRvbVByaXZhdGVLZXkoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYmFzZTU4Q2hlY2tEZWNvZGUoYnRjQWRkcmVzcykge1xuICAgIGNvbnN0IGJ5dGVzID0gYmFzZTU4LmRlY29kZShidGNBZGRyZXNzKTtcbiAgICBjb25zdCBwYXlsb2FkID0gYnl0ZXMuc2xpY2UoMCwgLTQpO1xuICAgIGNvbnN0IGNoZWNrc3VtID0gYnl0ZXMuc2xpY2UoLTQpO1xuICAgIGNvbnN0IG5ld0NoZWNrc3VtID0gc2hhMjU2KHNoYTI1NihwYXlsb2FkKSk7XG4gICAgaWYgKChjaGVja3N1bVswXSBeIG5ld0NoZWNrc3VtWzBdKSB8XG4gICAgICAgIChjaGVja3N1bVsxXSBeIG5ld0NoZWNrc3VtWzFdKSB8XG4gICAgICAgIChjaGVja3N1bVsyXSBeIG5ld0NoZWNrc3VtWzJdKSB8XG4gICAgICAgIChjaGVja3N1bVszXSBeIG5ld0NoZWNrc3VtWzNdKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hlY2tzdW0nKTtcbiAgICB9XG4gICAgaWYgKHBheWxvYWQubGVuZ3RoICE9PSAyMSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBhZGRyZXNzIGxlbmd0aCcpO1xuICAgIGNvbnN0IHZlcnNpb24gPSByZWFkVUludDgocGF5bG9hZCwgMCk7XG4gICAgY29uc3QgaGFzaCA9IHBheWxvYWQuc2xpY2UoMSk7XG4gICAgcmV0dXJuIHsgdmVyc2lvbiwgaGFzaCB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJhc2U1OEVuY29kZShoYXNoKSB7XG4gICAgY29uc3QgY2hlY2tzdW0gPSBzaGEyNTYoc2hhMjU2KGhhc2gpKTtcbiAgICByZXR1cm4gYmFzZTU4LmVuY29kZShjb25jYXRCeXRlcyhoYXNoLCBjaGVja3N1bSkuc2xpY2UoMCwgaGFzaC5sZW5ndGggKyA0KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYmFzZTU4Q2hlY2tFbmNvZGUodmVyc2lvbiwgaGFzaCkge1xuICAgIHJldHVybiBiYXNlNThFbmNvZGUoY29uY2F0Qnl0ZXMobmV3IFVpbnQ4QXJyYXkoW3ZlcnNpb25dKSwgaGFzaC5zbGljZSgwLCAyMCkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdWJsaWNLZXlUb0J0Y0FkZHJlc3MocHVibGljS2V5LCB2ZXJzaW9uID0gQklUQ09JTl9QVUJLRVlIQVNIKSB7XG4gICAgY29uc3QgcHVibGljS2V5Qnl0ZXMgPSB0eXBlb2YgcHVibGljS2V5ID09PSAnc3RyaW5nJyA/IGhleFRvQnl0ZXMocHVibGljS2V5KSA6IHB1YmxpY0tleTtcbiAgICBjb25zdCBwdWJsaWNLZXlIYXNoMTYwID0gaGFzaFJpcGVtZDE2MChoYXNoU2hhMjU2U3luYyhwdWJsaWNLZXlCeXRlcykpO1xuICAgIHJldHVybiBiYXNlNThDaGVja0VuY29kZSh2ZXJzaW9uLCBwdWJsaWNLZXlIYXNoMTYwKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQdWJsaWNLZXlGcm9tUHJpdmF0ZShwcml2YXRlS2V5KSB7XG4gICAgY29uc3QgcHJpdmF0ZUtleUJ5dGVzID0gcHJpdmF0ZUtleVRvQnl0ZXMocHJpdmF0ZUtleSk7XG4gICAgcmV0dXJuIGJ5dGVzVG9IZXgobm9ibGVHZXRQdWJsaWNLZXkocHJpdmF0ZUtleUJ5dGVzLnNsaWNlKDAsIDMyKSwgdHJ1ZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVjU2lnbihtZXNzYWdlSGFzaCwgaGV4UHJpdmF0ZUtleSkge1xuICAgIHJldHVybiBzaWduU3luYyhtZXNzYWdlSGFzaCwgcHJpdmF0ZUtleVRvQnl0ZXMoaGV4UHJpdmF0ZUtleSkuc2xpY2UoMCwgMzIpLCB7XG4gICAgICAgIGRlcjogZmFsc2UsXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFByaXZhdGVLZXkocHJpdmF0ZUtleSkge1xuICAgIHJldHVybiB1dGlscy5pc1ZhbGlkUHJpdmF0ZUtleShwcml2YXRlS2V5VG9CeXRlcyhwcml2YXRlS2V5KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3NQcml2YXRlS2V5KHByaXZhdGVLZXkpIHtcbiAgICBjb25zdCBwcml2YXRlS2V5Qnl0ZXMgPSBwcml2YXRlS2V5VG9CeXRlcyhwcml2YXRlS2V5KTtcbiAgICByZXR1cm4gcHJpdmF0ZUtleUJ5dGVzLmxlbmd0aCA9PSBQUklWQVRFX0tFWV9DT01QUkVTU0VEX0xFTkdUSFxuICAgICAgICA/IHByaXZhdGVLZXlCeXRlc1xuICAgICAgICA6IGNvbmNhdEJ5dGVzKHByaXZhdGVLZXlCeXRlcywgbmV3IFVpbnQ4QXJyYXkoWzFdKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/messageSignature.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/messageSignature.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMessage: function() { return /* binding */ decodeMessage; },\n/* harmony export */   encodeMessage: function() { return /* binding */ encodeMessage; },\n/* harmony export */   hashMessage: function() { return /* binding */ hashMessage; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _varuint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./varuint */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/varuint.js\");\n\n\n\nconst chainPrefix = '\\x17Stacks Signed Message:\\n';\nfunction hashMessage(message, prefix = chainPrefix) {\n    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(encodeMessage(message, prefix));\n}\nfunction encodeMessage(message, prefix = chainPrefix) {\n    const messageBytes = typeof message == 'string' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(message) : message;\n    const encodedLength = (0,_varuint__WEBPACK_IMPORTED_MODULE_2__.encode)(messageBytes.length);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.concatBytes)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(prefix), encodedLength, messageBytes);\n}\nfunction decodeMessage(encodedMessage, prefix = chainPrefix) {\n    const prefixByteLength = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(prefix).byteLength;\n    const messageWithoutChainPrefix = encodedMessage.subarray(prefixByteLength);\n    const decoded = (0,_varuint__WEBPACK_IMPORTED_MODULE_2__.decode)(messageWithoutChainPrefix);\n    const varIntLength = (0,_varuint__WEBPACK_IMPORTED_MODULE_2__.encodingLength)(decoded);\n    return messageWithoutChainPrefix.slice(varIntLength);\n}\n//# sourceMappingURL=messageSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vbWVzc2FnZVNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEM7QUFDWTtBQUNDO0FBQzNEO0FBQ087QUFDUCxXQUFXLDREQUFNO0FBQ2pCO0FBQ087QUFDUCxzREFBc0QsMkRBQVc7QUFDakUsMEJBQTBCLGdEQUFNO0FBQ2hDLFdBQVcsMkRBQVcsQ0FBQywyREFBVztBQUNsQztBQUNPO0FBQ1AsNkJBQTZCLDJEQUFXO0FBQ3hDO0FBQ0Esb0JBQW9CLGdEQUFNO0FBQzFCLHlCQUF5Qix3REFBYztBQUN2QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvZW5jcnlwdGlvbi9kaXN0L2VzbS9tZXNzYWdlU2lnbmF0dXJlLmpzPzY0OWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGEyNTYnO1xuaW1wb3J0IHsgY29uY2F0Qnl0ZXMsIHV0ZjhUb0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgZGVjb2RlLCBlbmNvZGUsIGVuY29kaW5nTGVuZ3RoIH0gZnJvbSAnLi92YXJ1aW50JztcbmNvbnN0IGNoYWluUHJlZml4ID0gJ1xceDE3U3RhY2tzIFNpZ25lZCBNZXNzYWdlOlxcbic7XG5leHBvcnQgZnVuY3Rpb24gaGFzaE1lc3NhZ2UobWVzc2FnZSwgcHJlZml4ID0gY2hhaW5QcmVmaXgpIHtcbiAgICByZXR1cm4gc2hhMjU2KGVuY29kZU1lc3NhZ2UobWVzc2FnZSwgcHJlZml4KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTWVzc2FnZShtZXNzYWdlLCBwcmVmaXggPSBjaGFpblByZWZpeCkge1xuICAgIGNvbnN0IG1lc3NhZ2VCeXRlcyA9IHR5cGVvZiBtZXNzYWdlID09ICdzdHJpbmcnID8gdXRmOFRvQnl0ZXMobWVzc2FnZSkgOiBtZXNzYWdlO1xuICAgIGNvbnN0IGVuY29kZWRMZW5ndGggPSBlbmNvZGUobWVzc2FnZUJ5dGVzLmxlbmd0aCk7XG4gICAgcmV0dXJuIGNvbmNhdEJ5dGVzKHV0ZjhUb0J5dGVzKHByZWZpeCksIGVuY29kZWRMZW5ndGgsIG1lc3NhZ2VCeXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWVzc2FnZShlbmNvZGVkTWVzc2FnZSwgcHJlZml4ID0gY2hhaW5QcmVmaXgpIHtcbiAgICBjb25zdCBwcmVmaXhCeXRlTGVuZ3RoID0gdXRmOFRvQnl0ZXMocHJlZml4KS5ieXRlTGVuZ3RoO1xuICAgIGNvbnN0IG1lc3NhZ2VXaXRob3V0Q2hhaW5QcmVmaXggPSBlbmNvZGVkTWVzc2FnZS5zdWJhcnJheShwcmVmaXhCeXRlTGVuZ3RoKTtcbiAgICBjb25zdCBkZWNvZGVkID0gZGVjb2RlKG1lc3NhZ2VXaXRob3V0Q2hhaW5QcmVmaXgpO1xuICAgIGNvbnN0IHZhckludExlbmd0aCA9IGVuY29kaW5nTGVuZ3RoKGRlY29kZWQpO1xuICAgIHJldHVybiBtZXNzYWdlV2l0aG91dENoYWluUHJlZml4LnNsaWNlKHZhckludExlbmd0aCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlU2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/messageSignature.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/sha2Hash.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/sha2Hash.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeCryptoSha2Hash: function() { return /* binding */ NodeCryptoSha2Hash; },\n/* harmony export */   WebCryptoSha2Hash: function() { return /* binding */ WebCryptoSha2Hash; },\n/* harmony export */   createSha2Hash: function() { return /* binding */ createSha2Hash; },\n/* harmony export */   hashSha256Sync: function() { return /* binding */ hashSha256Sync; },\n/* harmony export */   hashSha512Sync: function() { return /* binding */ hashSha512Sync; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _cryptoUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cryptoUtils */ \"(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/cryptoUtils.js\");\n\n\n\nclass NodeCryptoSha2Hash {\n    constructor(createHash) {\n        this.createHash = createHash;\n    }\n    async digest(data, algorithm = 'sha256') {\n        try {\n            const result = this.createHash(algorithm).update(data).digest();\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nclass WebCryptoSha2Hash {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async digest(data, algorithm = 'sha256') {\n        let algo;\n        if (algorithm === 'sha256') {\n            algo = 'SHA-256';\n        }\n        else if (algorithm === 'sha512') {\n            algo = 'SHA-512';\n        }\n        else {\n            throw new Error(`Unsupported hash algorithm ${algorithm}`);\n        }\n        try {\n            const hash = await this.subtleCrypto.digest(algo, data);\n            return new Uint8Array(hash);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nasync function createSha2Hash() {\n    const cryptoLib = await (0,_cryptoUtils__WEBPACK_IMPORTED_MODULE_2__.getCryptoLib)();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoSha2Hash(cryptoLib.lib);\n    }\n    else {\n        return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n    }\n}\nfunction hashSha256Sync(data) {\n    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(data);\n}\nfunction hashSha512Sync(data) {\n    return (0,_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512)(data);\n}\n//# sourceMappingURL=sha2Hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vc2hhMkhhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEM7QUFDQTtBQUNEO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsV0FBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFVBQVU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsV0FBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDREQUFNO0FBQ2pCO0FBQ087QUFDUCxXQUFXLDREQUFNO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvZW5jcnlwdGlvbi9kaXN0L2VzbS9zaGEySGFzaC5qcz8wMDFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYTI1NiB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhMjU2JztcbmltcG9ydCB7IHNoYTUxMiB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhNTEyJztcbmltcG9ydCB7IGdldENyeXB0b0xpYiB9IGZyb20gJy4vY3J5cHRvVXRpbHMnO1xuZXhwb3J0IGNsYXNzIE5vZGVDcnlwdG9TaGEySGFzaCB7XG4gICAgY29uc3RydWN0b3IoY3JlYXRlSGFzaCkge1xuICAgICAgICB0aGlzLmNyZWF0ZUhhc2ggPSBjcmVhdGVIYXNoO1xuICAgIH1cbiAgICBhc3luYyBkaWdlc3QoZGF0YSwgYWxnb3JpdGhtID0gJ3NoYTI1NicpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuY3JlYXRlSGFzaChhbGdvcml0aG0pLnVwZGF0ZShkYXRhKS5kaWdlc3QoKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBFcnJvciBwZXJmb3JtaW5nICR7YWxnb3JpdGhtfSBkaWdlc3Qgd2l0aCBOb2RlLmpzICdjcnlwdG8uY3JlYXRlSGFzaCcsIGZhbGxpbmcgYmFjayB0byBKUyBpbXBsZW1lbnRhdGlvbi5gKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoYWxnb3JpdGhtID09PSAnc2hhMjU2JyA/IGhhc2hTaGEyNTZTeW5jKGRhdGEpIDogaGFzaFNoYTUxMlN5bmMoZGF0YSkpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFdlYkNyeXB0b1NoYTJIYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihzdWJ0bGVDcnlwdG8pIHtcbiAgICAgICAgdGhpcy5zdWJ0bGVDcnlwdG8gPSBzdWJ0bGVDcnlwdG87XG4gICAgfVxuICAgIGFzeW5jIGRpZ2VzdChkYXRhLCBhbGdvcml0aG0gPSAnc2hhMjU2Jykge1xuICAgICAgICBsZXQgYWxnbztcbiAgICAgICAgaWYgKGFsZ29yaXRobSA9PT0gJ3NoYTI1NicpIHtcbiAgICAgICAgICAgIGFsZ28gPSAnU0hBLTI1Nic7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYWxnb3JpdGhtID09PSAnc2hhNTEyJykge1xuICAgICAgICAgICAgYWxnbyA9ICdTSEEtNTEyJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgaGFzaCBhbGdvcml0aG0gJHthbGdvcml0aG19YCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGhhc2ggPSBhd2FpdCB0aGlzLnN1YnRsZUNyeXB0by5kaWdlc3QoYWxnbywgZGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGFzaCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3IgcGVyZm9ybWluZyAke2FsZ29yaXRobX0gZGlnZXN0IHdpdGggV2ViQ3J5cHRvLCBmYWxsaW5nIGJhY2sgdG8gSlMgaW1wbGVtZW50YXRpb24uYCk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGFsZ29yaXRobSA9PT0gJ3NoYTI1NicgPyBoYXNoU2hhMjU2U3luYyhkYXRhKSA6IGhhc2hTaGE1MTJTeW5jKGRhdGEpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVTaGEySGFzaCgpIHtcbiAgICBjb25zdCBjcnlwdG9MaWIgPSBhd2FpdCBnZXRDcnlwdG9MaWIoKTtcbiAgICBpZiAoY3J5cHRvTGliLm5hbWUgPT09ICdzdWJ0bGVDcnlwdG8nKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViQ3J5cHRvU2hhMkhhc2goY3J5cHRvTGliLmxpYik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbmV3IE5vZGVDcnlwdG9TaGEySGFzaChjcnlwdG9MaWIubGliLmNyZWF0ZUhhc2gpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNoU2hhMjU2U3luYyhkYXRhKSB7XG4gICAgcmV0dXJuIHNoYTI1NihkYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNoU2hhNTEyU3luYyhkYXRhKSB7XG4gICAgcmV0dXJuIHNoYTUxMihkYXRhKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTJIYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/sha2Hash.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/utils.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signature: function() { return /* reexport safe */ _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.Signature; },\n/* harmony export */   getAesCbcOutputLength: function() { return /* binding */ getAesCbcOutputLength; },\n/* harmony export */   getBase64OutputLength: function() { return /* binding */ getBase64OutputLength; },\n/* harmony export */   hashCode: function() { return /* binding */ hashCode; },\n/* harmony export */   verifySignature: function() { return /* reexport safe */ _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.verify; }\n/* harmony export */ });\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n\n\nfunction getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nfunction getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nfunction hashCode(string) {\n    let hash = 0;\n    if (string.length === 0)\n        return hash;\n    for (let i = 0; i < string.length; i++) {\n        const character = string.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash &= hash;\n    }\n    return hash & 0x7fffffff;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFEO0FBQ0w7QUFDekM7QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9lbmNyeXB0aW9uL2Rpc3QvZXNtL3V0aWxzLmpzP2Q3NjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2lnbmF0dXJlLCB2ZXJpZnkgfSBmcm9tICdAbm9ibGUvc2VjcDI1NmsxJztcbmV4cG9ydCB7IFNpZ25hdHVyZSwgdmVyaWZ5IGFzIHZlcmlmeVNpZ25hdHVyZSB9O1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFlc0NiY091dHB1dExlbmd0aChpbnB1dEJ5dGVMZW5ndGgpIHtcbiAgICBjb25zdCBjaXBoZXJUZXh0TGVuZ3RoID0gKE1hdGguZmxvb3IoaW5wdXRCeXRlTGVuZ3RoIC8gMTYpICsgMSkgKiAxNjtcbiAgICByZXR1cm4gY2lwaGVyVGV4dExlbmd0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCYXNlNjRPdXRwdXRMZW5ndGgoaW5wdXRCeXRlTGVuZ3RoKSB7XG4gICAgY29uc3QgZW5jb2RlZExlbmd0aCA9IE1hdGguY2VpbChpbnB1dEJ5dGVMZW5ndGggLyAzKSAqIDQ7XG4gICAgcmV0dXJuIGVuY29kZWRMZW5ndGg7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzaENvZGUoc3RyaW5nKSB7XG4gICAgbGV0IGhhc2ggPSAwO1xuICAgIGlmIChzdHJpbmcubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gaGFzaDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjaGFyYWN0ZXIgPSBzdHJpbmcuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaGFzaCA9IChoYXNoIDw8IDUpIC0gaGFzaCArIGNoYXJhY3RlcjtcbiAgICAgICAgaGFzaCAmPSBoYXNoO1xuICAgIH1cbiAgICByZXR1cm4gaGFzaCAmIDB4N2ZmZmZmZmY7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/varuint.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stacks/encryption/dist/esm/varuint.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   encode: function() { return /* binding */ encode; },\n/* harmony export */   encodingLength: function() { return /* binding */ encodingLength; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\");\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction ensureUInt53(n) {\n    if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n        throw new RangeError('value out of range');\n}\nfunction encode(number, bytes, offset = 0) {\n    ensureUInt53(number);\n    if (!bytes)\n        bytes = new Uint8Array(encodingLength(number));\n    if (number < 0xfd) {\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt8)(bytes, number, offset);\n    }\n    else if (number <= 65535) {\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt8)(bytes, 0xfd, offset);\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt16LE)(bytes, number, offset + 1);\n    }\n    else if (number <= 4294967295) {\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt8)(bytes, 0xfe, offset);\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt32LE)(bytes, number, offset + 1);\n    }\n    else {\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt8)(bytes, 0xff, offset);\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt32LE)(bytes, number >>> 0, offset + 1);\n        (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.writeUInt32LE)(bytes, (number / 4294967296) | 0, offset + 5);\n    }\n    return bytes;\n}\nfunction decode(bytes, offset = 0) {\n    const first = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt8)(bytes, offset);\n    if (first < 0xfd) {\n        return first;\n    }\n    else if (first === 0xfd) {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt16LE)(bytes, offset + 1);\n    }\n    else if (first === 0xfe) {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt32LE)(bytes, offset + 1);\n    }\n    else {\n        const lo = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt32LE)(bytes, offset + 1);\n        const hi = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt32LE)(bytes, offset + 5);\n        const number = hi * 4294967296 + lo;\n        ensureUInt53(number);\n        return number;\n    }\n}\nfunction encodingLength(number) {\n    ensureUInt53(number);\n    return number < 0xfd ? 1 : number <= 65535 ? 3 : number <= 4294967295 ? 5 : 9;\n}\n//# sourceMappingURL=varuint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL2VuY3J5cHRpb24vZGlzdC9lc20vdmFydWludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtIO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwwREFBVTtBQUNsQjtBQUNBO0FBQ0EsUUFBUSwwREFBVTtBQUNsQixRQUFRLDZEQUFhO0FBQ3JCO0FBQ0E7QUFDQSxRQUFRLDBEQUFVO0FBQ2xCLFFBQVEsNkRBQWE7QUFDckI7QUFDQTtBQUNBLFFBQVEsMERBQVU7QUFDbEIsUUFBUSw2REFBYTtBQUNyQixRQUFRLDZEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLHlEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0REFBWTtBQUMzQjtBQUNBO0FBQ0EsZUFBZSw0REFBWTtBQUMzQjtBQUNBO0FBQ0EsbUJBQW1CLDREQUFZO0FBQy9CLG1CQUFtQiw0REFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9lbmNyeXB0aW9uL2Rpc3QvZXNtL3ZhcnVpbnQuanM/MWQ3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkVUludDE2TEUsIHJlYWRVSW50MzJMRSwgcmVhZFVJbnQ4LCB3cml0ZVVJbnQxNkxFLCB3cml0ZVVJbnQzMkxFLCB3cml0ZVVJbnQ4LCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmNvbnN0IE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuZnVuY3Rpb24gZW5zdXJlVUludDUzKG4pIHtcbiAgICBpZiAobiA8IDAgfHwgbiA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgbiAlIDEgIT09IDApXG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCd2YWx1ZSBvdXQgb2YgcmFuZ2UnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobnVtYmVyLCBieXRlcywgb2Zmc2V0ID0gMCkge1xuICAgIGVuc3VyZVVJbnQ1MyhudW1iZXIpO1xuICAgIGlmICghYnl0ZXMpXG4gICAgICAgIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoZW5jb2RpbmdMZW5ndGgobnVtYmVyKSk7XG4gICAgaWYgKG51bWJlciA8IDB4ZmQpIHtcbiAgICAgICAgd3JpdGVVSW50OChieXRlcywgbnVtYmVyLCBvZmZzZXQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChudW1iZXIgPD0gNjU1MzUpIHtcbiAgICAgICAgd3JpdGVVSW50OChieXRlcywgMHhmZCwgb2Zmc2V0KTtcbiAgICAgICAgd3JpdGVVSW50MTZMRShieXRlcywgbnVtYmVyLCBvZmZzZXQgKyAxKTtcbiAgICB9XG4gICAgZWxzZSBpZiAobnVtYmVyIDw9IDQyOTQ5NjcyOTUpIHtcbiAgICAgICAgd3JpdGVVSW50OChieXRlcywgMHhmZSwgb2Zmc2V0KTtcbiAgICAgICAgd3JpdGVVSW50MzJMRShieXRlcywgbnVtYmVyLCBvZmZzZXQgKyAxKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHdyaXRlVUludDgoYnl0ZXMsIDB4ZmYsIG9mZnNldCk7XG4gICAgICAgIHdyaXRlVUludDMyTEUoYnl0ZXMsIG51bWJlciA+Pj4gMCwgb2Zmc2V0ICsgMSk7XG4gICAgICAgIHdyaXRlVUludDMyTEUoYnl0ZXMsIChudW1iZXIgLyA0Mjk0OTY3Mjk2KSB8IDAsIG9mZnNldCArIDUpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ5dGVzLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgZmlyc3QgPSByZWFkVUludDgoYnl0ZXMsIG9mZnNldCk7XG4gICAgaWYgKGZpcnN0IDwgMHhmZCkge1xuICAgICAgICByZXR1cm4gZmlyc3Q7XG4gICAgfVxuICAgIGVsc2UgaWYgKGZpcnN0ID09PSAweGZkKSB7XG4gICAgICAgIHJldHVybiByZWFkVUludDE2TEUoYnl0ZXMsIG9mZnNldCArIDEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChmaXJzdCA9PT0gMHhmZSkge1xuICAgICAgICByZXR1cm4gcmVhZFVJbnQzMkxFKGJ5dGVzLCBvZmZzZXQgKyAxKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGxvID0gcmVhZFVJbnQzMkxFKGJ5dGVzLCBvZmZzZXQgKyAxKTtcbiAgICAgICAgY29uc3QgaGkgPSByZWFkVUludDMyTEUoYnl0ZXMsIG9mZnNldCArIDUpO1xuICAgICAgICBjb25zdCBudW1iZXIgPSBoaSAqIDQyOTQ5NjcyOTYgKyBsbztcbiAgICAgICAgZW5zdXJlVUludDUzKG51bWJlcik7XG4gICAgICAgIHJldHVybiBudW1iZXI7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKG51bWJlcikge1xuICAgIGVuc3VyZVVJbnQ1MyhudW1iZXIpO1xuICAgIHJldHVybiBudW1iZXIgPCAweGZkID8gMSA6IG51bWJlciA8PSA2NTUzNSA/IDMgOiBudW1iZXIgPD0gNDI5NDk2NzI5NSA/IDUgOiA5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFydWludC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/encryption/dist/esm/varuint.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/network/dist/esm/fetch.js":
/*!********************************************************!*\
  !*** ./node_modules/@stacks/network/dist/esm/fetch.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createApiKeyMiddleware: function() { return /* binding */ createApiKeyMiddleware; },\n/* harmony export */   createFetchFn: function() { return /* binding */ createFetchFn; },\n/* harmony export */   fetchWrapper: function() { return /* binding */ fetchWrapper; },\n/* harmony export */   getFetchOptions: function() { return /* binding */ getFetchOptions; },\n/* harmony export */   hostMatches: function() { return /* binding */ hostMatches; },\n/* harmony export */   setFetchOptions: function() { return /* binding */ setFetchOptions; }\n/* harmony export */ });\n/* harmony import */ var cross_fetch_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch/polyfill */ \"(app-pages-browser)/./node_modules/cross-fetch/dist/browser-polyfill.js\");\n/* harmony import */ var cross_fetch_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n\nconst defaultFetchOpts = {\n    referrerPolicy: 'origin',\n    headers: {\n        'x-hiro-product': 'stacksjs',\n    },\n};\nconst getFetchOptions = () => {\n    return defaultFetchOpts;\n};\nconst setFetchOptions = (ops) => {\n    return Object.assign(defaultFetchOpts, ops);\n};\nasync function fetchWrapper(input, init) {\n    const fetchOpts = {};\n    Object.assign(fetchOpts, defaultFetchOpts, init);\n    const fetchResult = await fetch(input, fetchOpts);\n    return fetchResult;\n}\nfunction hostMatches(host, pattern) {\n    if (typeof pattern === 'string')\n        return pattern === host;\n    return pattern.exec(host);\n}\nfunction createApiKeyMiddleware({ apiKey, host = /(.*)api(.*)\\.stacks\\.co$/i, httpHeader = 'x-api-key', }) {\n    return {\n        pre: context => {\n            const reqUrl = new URL(context.url);\n            if (!hostMatches(reqUrl.host, host))\n                return;\n            const headers = new Headers(context.init.headers);\n            headers.set(httpHeader, apiKey);\n            context.init.headers = headers;\n        },\n    };\n}\nfunction argsForCreateFetchFn(args) {\n    let fetchLib = fetchWrapper;\n    let middlewares = [];\n    if (args.length > 0 && typeof args[0] === 'function') {\n        fetchLib = args.shift();\n    }\n    if (args.length > 0) {\n        middlewares = args;\n    }\n    return { fetchLib, middlewares };\n}\nfunction createFetchFn(...args) {\n    const { fetchLib, middlewares } = argsForCreateFetchFn(args);\n    const fetchFn = async (url, init) => {\n        let fetchParams = { url, init: init ?? {} };\n        for (const middleware of middlewares) {\n            if (typeof middleware.pre === 'function') {\n                const result = await Promise.resolve(middleware.pre({\n                    fetch: fetchLib,\n                    ...fetchParams,\n                }));\n                fetchParams = result ?? fetchParams;\n            }\n        }\n        let response = await fetchLib(fetchParams.url, fetchParams.init);\n        for (const middleware of middlewares) {\n            if (typeof middleware.post === 'function') {\n                const result = await Promise.resolve(middleware.post({\n                    fetch: fetchLib,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response?.clone() ?? response,\n                }));\n                response = result ?? response;\n            }\n        }\n        return response;\n    };\n    return fetchFn;\n}\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL25ldHdvcmsvZGlzdC9lc20vZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLHVFQUF1RTtBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksd0JBQXdCO0FBQ3BDO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL25ldHdvcmsvZGlzdC9lc20vZmV0Y2guanM/YzViZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2Nyb3NzLWZldGNoL3BvbHlmaWxsJztcbmNvbnN0IGRlZmF1bHRGZXRjaE9wdHMgPSB7XG4gICAgcmVmZXJyZXJQb2xpY3k6ICdvcmlnaW4nLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ3gtaGlyby1wcm9kdWN0JzogJ3N0YWNrc2pzJyxcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBnZXRGZXRjaE9wdGlvbnMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGRlZmF1bHRGZXRjaE9wdHM7XG59O1xuZXhwb3J0IGNvbnN0IHNldEZldGNoT3B0aW9ucyA9IChvcHMpID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihkZWZhdWx0RmV0Y2hPcHRzLCBvcHMpO1xufTtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFdyYXBwZXIoaW5wdXQsIGluaXQpIHtcbiAgICBjb25zdCBmZXRjaE9wdHMgPSB7fTtcbiAgICBPYmplY3QuYXNzaWduKGZldGNoT3B0cywgZGVmYXVsdEZldGNoT3B0cywgaW5pdCk7XG4gICAgY29uc3QgZmV0Y2hSZXN1bHQgPSBhd2FpdCBmZXRjaChpbnB1dCwgZmV0Y2hPcHRzKTtcbiAgICByZXR1cm4gZmV0Y2hSZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaG9zdE1hdGNoZXMoaG9zdCwgcGF0dGVybikge1xuICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBwYXR0ZXJuID09PSBob3N0O1xuICAgIHJldHVybiBwYXR0ZXJuLmV4ZWMoaG9zdCk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXBpS2V5TWlkZGxld2FyZSh7IGFwaUtleSwgaG9zdCA9IC8oLiopYXBpKC4qKVxcLnN0YWNrc1xcLmNvJC9pLCBodHRwSGVhZGVyID0gJ3gtYXBpLWtleScsIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcmU6IGNvbnRleHQgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmVxVXJsID0gbmV3IFVSTChjb250ZXh0LnVybCk7XG4gICAgICAgICAgICBpZiAoIWhvc3RNYXRjaGVzKHJlcVVybC5ob3N0LCBob3N0KSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoY29udGV4dC5pbml0LmhlYWRlcnMpO1xuICAgICAgICAgICAgaGVhZGVycy5zZXQoaHR0cEhlYWRlciwgYXBpS2V5KTtcbiAgICAgICAgICAgIGNvbnRleHQuaW5pdC5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZnVuY3Rpb24gYXJnc0ZvckNyZWF0ZUZldGNoRm4oYXJncykge1xuICAgIGxldCBmZXRjaExpYiA9IGZldGNoV3JhcHBlcjtcbiAgICBsZXQgbWlkZGxld2FyZXMgPSBbXTtcbiAgICBpZiAoYXJncy5sZW5ndGggPiAwICYmIHR5cGVvZiBhcmdzWzBdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGZldGNoTGliID0gYXJncy5zaGlmdCgpO1xuICAgIH1cbiAgICBpZiAoYXJncy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG1pZGRsZXdhcmVzID0gYXJncztcbiAgICB9XG4gICAgcmV0dXJuIHsgZmV0Y2hMaWIsIG1pZGRsZXdhcmVzIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRmV0Y2hGbiguLi5hcmdzKSB7XG4gICAgY29uc3QgeyBmZXRjaExpYiwgbWlkZGxld2FyZXMgfSA9IGFyZ3NGb3JDcmVhdGVGZXRjaEZuKGFyZ3MpO1xuICAgIGNvbnN0IGZldGNoRm4gPSBhc3luYyAodXJsLCBpbml0KSA9PiB7XG4gICAgICAgIGxldCBmZXRjaFBhcmFtcyA9IHsgdXJsLCBpbml0OiBpbml0ID8/IHt9IH07XG4gICAgICAgIGZvciAoY29uc3QgbWlkZGxld2FyZSBvZiBtaWRkbGV3YXJlcykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBtaWRkbGV3YXJlLnByZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFByb21pc2UucmVzb2x2ZShtaWRkbGV3YXJlLnByZSh7XG4gICAgICAgICAgICAgICAgICAgIGZldGNoOiBmZXRjaExpYixcbiAgICAgICAgICAgICAgICAgICAgLi4uZmV0Y2hQYXJhbXMsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGZldGNoUGFyYW1zID0gcmVzdWx0ID8/IGZldGNoUGFyYW1zO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGZldGNoTGliKGZldGNoUGFyYW1zLnVybCwgZmV0Y2hQYXJhbXMuaW5pdCk7XG4gICAgICAgIGZvciAoY29uc3QgbWlkZGxld2FyZSBvZiBtaWRkbGV3YXJlcykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBtaWRkbGV3YXJlLnBvc3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBQcm9taXNlLnJlc29sdmUobWlkZGxld2FyZS5wb3N0KHtcbiAgICAgICAgICAgICAgICAgICAgZmV0Y2g6IGZldGNoTGliLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGZldGNoUGFyYW1zLnVybCxcbiAgICAgICAgICAgICAgICAgICAgaW5pdDogZmV0Y2hQYXJhbXMuaW5pdCxcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IHJlc3BvbnNlPy5jbG9uZSgpID8/IHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IHJlc3VsdCA/PyByZXNwb25zZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfTtcbiAgICByZXR1cm4gZmV0Y2hGbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/network/dist/esm/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/network/dist/esm/network.js":
/*!**********************************************************!*\
  !*** ./node_modules/@stacks/network/dist/esm/network.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HIRO_MAINNET_DEFAULT: function() { return /* binding */ HIRO_MAINNET_DEFAULT; },\n/* harmony export */   HIRO_MOCKNET_DEFAULT: function() { return /* binding */ HIRO_MOCKNET_DEFAULT; },\n/* harmony export */   HIRO_TESTNET_DEFAULT: function() { return /* binding */ HIRO_TESTNET_DEFAULT; },\n/* harmony export */   StacksDevnet: function() { return /* binding */ StacksDevnet; },\n/* harmony export */   StacksMainnet: function() { return /* binding */ StacksMainnet; },\n/* harmony export */   StacksMocknet: function() { return /* binding */ StacksMocknet; },\n/* harmony export */   StacksNetwork: function() { return /* binding */ StacksNetwork; },\n/* harmony export */   StacksNetworks: function() { return /* binding */ StacksNetworks; },\n/* harmony export */   StacksTestnet: function() { return /* binding */ StacksTestnet; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js\");\n/* harmony import */ var _fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fetch */ \"(app-pages-browser)/./node_modules/@stacks/network/dist/esm/fetch.js\");\n\n\nconst HIRO_MAINNET_DEFAULT = 'https://stacks-node-api.mainnet.stacks.co';\nconst HIRO_TESTNET_DEFAULT = 'https://stacks-node-api.testnet.stacks.co';\nconst HIRO_MOCKNET_DEFAULT = 'http://localhost:3999';\nconst StacksNetworks = ['mainnet', 'testnet', 'devnet', 'mocknet'];\nclass StacksNetwork {\n    constructor(networkConfig) {\n        this.version = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.TransactionVersion.Mainnet;\n        this.chainId = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.ChainID.Mainnet;\n        this.bnsLookupUrl = 'https://stacks-node-api.mainnet.stacks.co';\n        this.broadcastEndpoint = '/v2/transactions';\n        this.transferFeeEstimateEndpoint = '/v2/fees/transfer';\n        this.transactionFeeEstimateEndpoint = '/v2/fees/transaction';\n        this.accountEndpoint = '/v2/accounts';\n        this.contractAbiEndpoint = '/v2/contracts/interface';\n        this.readOnlyFunctionCallEndpoint = '/v2/contracts/call-read';\n        this.isMainnet = () => this.version === _stacks_common__WEBPACK_IMPORTED_MODULE_0__.TransactionVersion.Mainnet;\n        this.getBroadcastApiUrl = () => `${this.coreApiUrl}${this.broadcastEndpoint}`;\n        this.getTransferFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transferFeeEstimateEndpoint}`;\n        this.getTransactionFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transactionFeeEstimateEndpoint}`;\n        this.getAccountApiUrl = (address) => `${this.coreApiUrl}${this.accountEndpoint}/${address}?proof=0`;\n        this.getAccountExtendedBalancesApiUrl = (address) => `${this.coreApiUrl}/extended/v1/address/${address}/balances`;\n        this.getAbiApiUrl = (address, contract) => `${this.coreApiUrl}${this.contractAbiEndpoint}/${address}/${contract}`;\n        this.getReadOnlyFunctionCallApiUrl = (contractAddress, contractName, functionName) => `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}/${contractAddress}/${contractName}/${encodeURIComponent(functionName)}`;\n        this.getInfoUrl = () => `${this.coreApiUrl}/v2/info`;\n        this.getBlockTimeInfoUrl = () => `${this.coreApiUrl}/extended/v1/info/network_block_times`;\n        this.getPoxInfoUrl = () => `${this.coreApiUrl}/v2/pox`;\n        this.getRewardsUrl = (address, options) => {\n            let url = `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}`;\n            if (options) {\n                url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n            }\n            return url;\n        };\n        this.getRewardsTotalUrl = (address) => `${this.coreApiUrl}/extended/v1/burnchain/rewards/${address}/total`;\n        this.getRewardHoldersUrl = (address, options) => {\n            let url = `${this.coreApiUrl}/extended/v1/burnchain/reward_slot_holders/${address}`;\n            if (options) {\n                url = `${url}?limit=${options.limit}&offset=${options.offset}`;\n            }\n            return url;\n        };\n        this.getStackerInfoUrl = (contractAddress, contractName) => `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}\n    ${contractAddress}/${contractName}/get-stacker-info`;\n        this.getDataVarUrl = (contractAddress, contractName, dataVarName) => `${this.coreApiUrl}/v2/data_var/${contractAddress}/${contractName}/${dataVarName}?proof=0`;\n        this.getMapEntryUrl = (contractAddress, contractName, mapName) => `${this.coreApiUrl}/v2/map_entry/${contractAddress}/${contractName}/${mapName}?proof=0`;\n        this.coreApiUrl = networkConfig.url;\n        this.fetchFn = networkConfig.fetchFn ?? (0,_fetch__WEBPACK_IMPORTED_MODULE_1__.createFetchFn)();\n    }\n    getNameInfo(fullyQualifiedName) {\n        const nameLookupURL = `${this.bnsLookupUrl}/v1/names/${fullyQualifiedName}`;\n        return this.fetchFn(nameLookupURL)\n            .then(resp => {\n            if (resp.status === 404) {\n                throw new Error('Name not found');\n            }\n            else if (resp.status !== 200) {\n                throw new Error(`Bad response status: ${resp.status}`);\n            }\n            else {\n                return resp.json();\n            }\n        })\n            .then(nameInfo => {\n            if (nameInfo.address) {\n                return Object.assign({}, nameInfo, { address: nameInfo.address });\n            }\n            else {\n                return nameInfo;\n            }\n        });\n    }\n}\nStacksNetwork.fromName = (networkName) => {\n    switch (networkName) {\n        case 'mainnet':\n            return new StacksMainnet();\n        case 'testnet':\n            return new StacksTestnet();\n        case 'devnet':\n            return new StacksDevnet();\n        case 'mocknet':\n            return new StacksMocknet();\n        default:\n            throw new Error(`Invalid network name provided. Must be one of the following: ${StacksNetworks.join(', ')}`);\n    }\n};\nStacksNetwork.fromNameOrNetwork = (network) => {\n    if (typeof network !== 'string' && 'version' in network) {\n        return network;\n    }\n    return StacksNetwork.fromName(network);\n};\nclass StacksMainnet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_MAINNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.TransactionVersion.Mainnet;\n        this.chainId = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.ChainID.Mainnet;\n    }\n}\nclass StacksTestnet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_TESTNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.TransactionVersion.Testnet;\n        this.chainId = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.ChainID.Testnet;\n    }\n}\nclass StacksMocknet extends StacksNetwork {\n    constructor(opts) {\n        super({\n            url: opts?.url ?? HIRO_MOCKNET_DEFAULT,\n            fetchFn: opts?.fetchFn,\n        });\n        this.version = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.TransactionVersion.Testnet;\n        this.chainId = _stacks_common__WEBPACK_IMPORTED_MODULE_0__.ChainID.Testnet;\n    }\n}\nconst StacksDevnet = StacksMocknet;\n//# sourceMappingURL=network.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/network/dist/esm/network.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/profile/dist/esm/profileTokens.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stacks/profile/dist/esm/profileTokens.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractProfile: function() { return /* binding */ extractProfile; },\n/* harmony export */   signProfileToken: function() { return /* binding */ signProfileToken; },\n/* harmony export */   verifyProfileToken: function() { return /* binding */ verifyProfileToken; },\n/* harmony export */   wrapProfileToken: function() { return /* binding */ wrapProfileToken; }\n/* harmony export */ });\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsontokens */ \"(app-pages-browser)/./node_modules/jsontokens/lib/index.js\");\n/* harmony import */ var jsontokens__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsontokens__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_transactions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stacks/transactions */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/keys.js\");\n\n\n\nfunction signProfileToken(profile, privateKey, subject, issuer, signingAlgorithm = 'ES256K', issuedAt = new Date(), expiresAt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.nextYear)()) {\n    if (signingAlgorithm !== 'ES256K') {\n        throw new Error('Signing algorithm not supported');\n    }\n    const publicKey = jsontokens__WEBPACK_IMPORTED_MODULE_0__.SECP256K1Client.derivePublicKey(privateKey);\n    if (!subject) {\n        subject = { publicKey };\n    }\n    if (!issuer) {\n        issuer = { publicKey };\n    }\n    const tokenSigner = new jsontokens__WEBPACK_IMPORTED_MODULE_0__.TokenSigner(signingAlgorithm, privateKey);\n    const payload = {\n        jti: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.makeUUID4)(),\n        iat: issuedAt.toISOString(),\n        exp: expiresAt.toISOString(),\n        subject,\n        issuer,\n        claim: profile,\n    };\n    return tokenSigner.sign(payload);\n}\nfunction wrapProfileToken(token) {\n    return {\n        token,\n        decodedToken: (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token),\n    };\n}\nfunction verifyProfileToken(token, publicKeyOrAddress) {\n    const decodedToken = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token);\n    const payload = decodedToken.payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    if (payload.hasOwnProperty('subject') && payload.subject) {\n        if (!payload.subject.hasOwnProperty('publicKey')) {\n            throw new Error(\"Token doesn't have a subject public key\");\n        }\n    }\n    else {\n        throw new Error(\"Token doesn't have a subject\");\n    }\n    if (payload.hasOwnProperty('issuer') && payload.issuer) {\n        if (!payload.issuer.hasOwnProperty('publicKey')) {\n            throw new Error(\"Token doesn't have an issuer public key\");\n        }\n    }\n    else {\n        throw new Error(\"Token doesn't have an issuer\");\n    }\n    if (!payload.hasOwnProperty('claim')) {\n        throw new Error(\"Token doesn't have a claim\");\n    }\n    const issuerPublicKey = payload.issuer.publicKey;\n    const address = (0,_stacks_transactions__WEBPACK_IMPORTED_MODULE_2__.getAddressFromPublicKey)(issuerPublicKey);\n    if (publicKeyOrAddress === issuerPublicKey) {\n    }\n    else if (publicKeyOrAddress === address) {\n    }\n    else {\n        throw new Error('Token issuer public key does not match the verifying value');\n    }\n    const tokenVerifier = new jsontokens__WEBPACK_IMPORTED_MODULE_0__.TokenVerifier(decodedToken.header.alg, issuerPublicKey);\n    if (!tokenVerifier) {\n        throw new Error('Invalid token verifier');\n    }\n    const tokenVerified = tokenVerifier.verify(token);\n    if (!tokenVerified) {\n        throw new Error('Token verification failed');\n    }\n    return decodedToken;\n}\nfunction extractProfile(token, publicKeyOrAddress = null) {\n    let decodedToken;\n    if (publicKeyOrAddress) {\n        decodedToken = verifyProfileToken(token, publicKeyOrAddress);\n    }\n    else {\n        decodedToken = (0,jsontokens__WEBPACK_IMPORTED_MODULE_0__.decodeToken)(token);\n    }\n    let profile = {};\n    if (decodedToken.hasOwnProperty('payload')) {\n        const payload = decodedToken.payload;\n        if (typeof payload === 'string') {\n            throw new Error('Unexpected token payload type of string');\n        }\n        if (payload.hasOwnProperty('claim')) {\n            profile = payload.claim;\n        }\n    }\n    return profile;\n}\n//# sourceMappingURL=profileTokens.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3Byb2ZpbGUvZGlzdC9lc20vcHJvZmlsZVRva2Vucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRjtBQUNqQztBQUNVO0FBQ3hELGdJQUFnSSx3REFBUTtBQUMvSTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdURBQWU7QUFDckM7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLDRCQUE0QixtREFBVztBQUN2QztBQUNBLGFBQWEseURBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQix1REFBVztBQUNqQztBQUNBO0FBQ087QUFDUCx5QkFBeUIsdURBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZFQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxREFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy9wcm9maWxlL2Rpc3QvZXNtL3Byb2ZpbGVUb2tlbnMuanM/OGNkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVUb2tlbiwgU0VDUDI1NksxQ2xpZW50LCBUb2tlblNpZ25lciwgVG9rZW5WZXJpZmllciB9IGZyb20gJ2pzb250b2tlbnMnO1xuaW1wb3J0IHsgbmV4dFllYXIsIG1ha2VVVUlENCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmltcG9ydCB7IGdldEFkZHJlc3NGcm9tUHVibGljS2V5IH0gZnJvbSAnQHN0YWNrcy90cmFuc2FjdGlvbnMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25Qcm9maWxlVG9rZW4ocHJvZmlsZSwgcHJpdmF0ZUtleSwgc3ViamVjdCwgaXNzdWVyLCBzaWduaW5nQWxnb3JpdGhtID0gJ0VTMjU2SycsIGlzc3VlZEF0ID0gbmV3IERhdGUoKSwgZXhwaXJlc0F0ID0gbmV4dFllYXIoKSkge1xuICAgIGlmIChzaWduaW5nQWxnb3JpdGhtICE9PSAnRVMyNTZLJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NpZ25pbmcgYWxnb3JpdGhtIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5ID0gU0VDUDI1NksxQ2xpZW50LmRlcml2ZVB1YmxpY0tleShwcml2YXRlS2V5KTtcbiAgICBpZiAoIXN1YmplY3QpIHtcbiAgICAgICAgc3ViamVjdCA9IHsgcHVibGljS2V5IH07XG4gICAgfVxuICAgIGlmICghaXNzdWVyKSB7XG4gICAgICAgIGlzc3VlciA9IHsgcHVibGljS2V5IH07XG4gICAgfVxuICAgIGNvbnN0IHRva2VuU2lnbmVyID0gbmV3IFRva2VuU2lnbmVyKHNpZ25pbmdBbGdvcml0aG0sIHByaXZhdGVLZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIGp0aTogbWFrZVVVSUQ0KCksXG4gICAgICAgIGlhdDogaXNzdWVkQXQudG9JU09TdHJpbmcoKSxcbiAgICAgICAgZXhwOiBleHBpcmVzQXQudG9JU09TdHJpbmcoKSxcbiAgICAgICAgc3ViamVjdCxcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICBjbGFpbTogcHJvZmlsZSxcbiAgICB9O1xuICAgIHJldHVybiB0b2tlblNpZ25lci5zaWduKHBheWxvYWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBQcm9maWxlVG9rZW4odG9rZW4pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0b2tlbixcbiAgICAgICAgZGVjb2RlZFRva2VuOiBkZWNvZGVUb2tlbih0b2tlbiksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlQcm9maWxlVG9rZW4odG9rZW4sIHB1YmxpY0tleU9yQWRkcmVzcykge1xuICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IGRlY29kZVRva2VuKHRva2VuKTtcbiAgICBjb25zdCBwYXlsb2FkID0gZGVjb2RlZFRva2VuLnBheWxvYWQ7XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gcGF5bG9hZCB0eXBlIG9mIHN0cmluZycpO1xuICAgIH1cbiAgICBpZiAocGF5bG9hZC5oYXNPd25Qcm9wZXJ0eSgnc3ViamVjdCcpICYmIHBheWxvYWQuc3ViamVjdCkge1xuICAgICAgICBpZiAoIXBheWxvYWQuc3ViamVjdC5oYXNPd25Qcm9wZXJ0eSgncHVibGljS2V5JykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRva2VuIGRvZXNuJ3QgaGF2ZSBhIHN1YmplY3QgcHVibGljIGtleVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVG9rZW4gZG9lc24ndCBoYXZlIGEgc3ViamVjdFwiKTtcbiAgICB9XG4gICAgaWYgKHBheWxvYWQuaGFzT3duUHJvcGVydHkoJ2lzc3VlcicpICYmIHBheWxvYWQuaXNzdWVyKSB7XG4gICAgICAgIGlmICghcGF5bG9hZC5pc3N1ZXIuaGFzT3duUHJvcGVydHkoJ3B1YmxpY0tleScpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb2tlbiBkb2Vzbid0IGhhdmUgYW4gaXNzdWVyIHB1YmxpYyBrZXlcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRva2VuIGRvZXNuJ3QgaGF2ZSBhbiBpc3N1ZXJcIik7XG4gICAgfVxuICAgIGlmICghcGF5bG9hZC5oYXNPd25Qcm9wZXJ0eSgnY2xhaW0nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb2tlbiBkb2Vzbid0IGhhdmUgYSBjbGFpbVwiKTtcbiAgICB9XG4gICAgY29uc3QgaXNzdWVyUHVibGljS2V5ID0gcGF5bG9hZC5pc3N1ZXIucHVibGljS2V5O1xuICAgIGNvbnN0IGFkZHJlc3MgPSBnZXRBZGRyZXNzRnJvbVB1YmxpY0tleShpc3N1ZXJQdWJsaWNLZXkpO1xuICAgIGlmIChwdWJsaWNLZXlPckFkZHJlc3MgPT09IGlzc3VlclB1YmxpY0tleSkge1xuICAgIH1cbiAgICBlbHNlIGlmIChwdWJsaWNLZXlPckFkZHJlc3MgPT09IGFkZHJlc3MpIHtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9rZW4gaXNzdWVyIHB1YmxpYyBrZXkgZG9lcyBub3QgbWF0Y2ggdGhlIHZlcmlmeWluZyB2YWx1ZScpO1xuICAgIH1cbiAgICBjb25zdCB0b2tlblZlcmlmaWVyID0gbmV3IFRva2VuVmVyaWZpZXIoZGVjb2RlZFRva2VuLmhlYWRlci5hbGcsIGlzc3VlclB1YmxpY0tleSk7XG4gICAgaWYgKCF0b2tlblZlcmlmaWVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbiB2ZXJpZmllcicpO1xuICAgIH1cbiAgICBjb25zdCB0b2tlblZlcmlmaWVkID0gdG9rZW5WZXJpZmllci52ZXJpZnkodG9rZW4pO1xuICAgIGlmICghdG9rZW5WZXJpZmllZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Rva2VuIHZlcmlmaWNhdGlvbiBmYWlsZWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlY29kZWRUb2tlbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0UHJvZmlsZSh0b2tlbiwgcHVibGljS2V5T3JBZGRyZXNzID0gbnVsbCkge1xuICAgIGxldCBkZWNvZGVkVG9rZW47XG4gICAgaWYgKHB1YmxpY0tleU9yQWRkcmVzcykge1xuICAgICAgICBkZWNvZGVkVG9rZW4gPSB2ZXJpZnlQcm9maWxlVG9rZW4odG9rZW4sIHB1YmxpY0tleU9yQWRkcmVzcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkZWNvZGVkVG9rZW4gPSBkZWNvZGVUb2tlbih0b2tlbik7XG4gICAgfVxuICAgIGxldCBwcm9maWxlID0ge307XG4gICAgaWYgKGRlY29kZWRUb2tlbi5oYXNPd25Qcm9wZXJ0eSgncGF5bG9hZCcpKSB7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBkZWNvZGVkVG9rZW4ucGF5bG9hZDtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIHRva2VuIHBheWxvYWQgdHlwZSBvZiBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGF5bG9hZC5oYXNPd25Qcm9wZXJ0eSgnY2xhaW0nKSkge1xuICAgICAgICAgICAgcHJvZmlsZSA9IHBheWxvYWQuY2xhaW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb2ZpbGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9maWxlVG9rZW5zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/profile/dist/esm/profileTokens.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/bytesReader.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/bytesReader.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BytesReader: function() { return /* binding */ BytesReader; },\n/* harmony export */   isEnum: function() { return /* binding */ isEnum; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\nfunction createEnumChecker(enumVariable) {\n    const enumValues = Object.values(enumVariable).filter(v => typeof v === 'number');\n    const enumValueSet = new Set(enumValues);\n    return (value) => enumValueSet.has(value);\n}\nconst enumCheckFunctions = new Map();\nfunction isEnum(enumVariable, value) {\n    const checker = enumCheckFunctions.get(enumVariable);\n    if (checker !== undefined) {\n        return checker(value);\n    }\n    const newChecker = createEnumChecker(enumVariable);\n    enumCheckFunctions.set(enumVariable, newChecker);\n    return isEnum(enumVariable, value);\n}\nclass BytesReader {\n    constructor(arr) {\n        this.consumed = 0;\n        this.source = arr;\n    }\n    readBytes(length) {\n        const view = this.source.subarray(this.consumed, this.consumed + length);\n        this.consumed += length;\n        return view;\n    }\n    readUInt32BE() {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt32BE)(this.readBytes(4), 0);\n    }\n    readUInt8() {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt8)(this.readBytes(1), 0);\n    }\n    readUInt16BE() {\n        return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.readUInt16BE)(this.readBytes(2), 0);\n    }\n    readBigUIntLE(length) {\n        const bytes = this.readBytes(length).slice().reverse();\n        const hex = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(bytes);\n        return BigInt(`0x${hex}`);\n    }\n    readBigUIntBE(length) {\n        const bytes = this.readBytes(length);\n        const hex = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(bytes);\n        return BigInt(`0x${hex}`);\n    }\n    get readOffset() {\n        return this.consumed;\n    }\n    set readOffset(val) {\n        this.consumed = val;\n    }\n    get internalBytes() {\n        return this.source;\n    }\n    readUInt8Enum(enumVariable, invalidEnumErrorFormatter) {\n        const num = this.readUInt8();\n        if (isEnum(enumVariable, num)) {\n            return num;\n        }\n        throw invalidEnumErrorFormatter(num);\n    }\n}\n//# sourceMappingURL=bytesReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9ieXRlc1JlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1GO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDREQUFZO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLHlEQUFTO0FBQ3hCO0FBQ0E7QUFDQSxlQUFlLDREQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwREFBVTtBQUM5QiwyQkFBMkIsSUFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMERBQVU7QUFDOUIsMkJBQTJCLElBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2J5dGVzUmVhZGVyLmpzPzUwN2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnl0ZXNUb0hleCwgcmVhZFVJbnQxNkJFLCByZWFkVUludDMyQkUsIHJlYWRVSW50OCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmZ1bmN0aW9uIGNyZWF0ZUVudW1DaGVja2VyKGVudW1WYXJpYWJsZSkge1xuICAgIGNvbnN0IGVudW1WYWx1ZXMgPSBPYmplY3QudmFsdWVzKGVudW1WYXJpYWJsZSkuZmlsdGVyKHYgPT4gdHlwZW9mIHYgPT09ICdudW1iZXInKTtcbiAgICBjb25zdCBlbnVtVmFsdWVTZXQgPSBuZXcgU2V0KGVudW1WYWx1ZXMpO1xuICAgIHJldHVybiAodmFsdWUpID0+IGVudW1WYWx1ZVNldC5oYXModmFsdWUpO1xufVxuY29uc3QgZW51bUNoZWNrRnVuY3Rpb25zID0gbmV3IE1hcCgpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRW51bShlbnVtVmFyaWFibGUsIHZhbHVlKSB7XG4gICAgY29uc3QgY2hlY2tlciA9IGVudW1DaGVja0Z1bmN0aW9ucy5nZXQoZW51bVZhcmlhYmxlKTtcbiAgICBpZiAoY2hlY2tlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBjaGVja2VyKHZhbHVlKTtcbiAgICB9XG4gICAgY29uc3QgbmV3Q2hlY2tlciA9IGNyZWF0ZUVudW1DaGVja2VyKGVudW1WYXJpYWJsZSk7XG4gICAgZW51bUNoZWNrRnVuY3Rpb25zLnNldChlbnVtVmFyaWFibGUsIG5ld0NoZWNrZXIpO1xuICAgIHJldHVybiBpc0VudW0oZW51bVZhcmlhYmxlLCB2YWx1ZSk7XG59XG5leHBvcnQgY2xhc3MgQnl0ZXNSZWFkZXIge1xuICAgIGNvbnN0cnVjdG9yKGFycikge1xuICAgICAgICB0aGlzLmNvbnN1bWVkID0gMDtcbiAgICAgICAgdGhpcy5zb3VyY2UgPSBhcnI7XG4gICAgfVxuICAgIHJlYWRCeXRlcyhsZW5ndGgpIHtcbiAgICAgICAgY29uc3QgdmlldyA9IHRoaXMuc291cmNlLnN1YmFycmF5KHRoaXMuY29uc3VtZWQsIHRoaXMuY29uc3VtZWQgKyBsZW5ndGgpO1xuICAgICAgICB0aGlzLmNvbnN1bWVkICs9IGxlbmd0aDtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxuICAgIHJlYWRVSW50MzJCRSgpIHtcbiAgICAgICAgcmV0dXJuIHJlYWRVSW50MzJCRSh0aGlzLnJlYWRCeXRlcyg0KSwgMCk7XG4gICAgfVxuICAgIHJlYWRVSW50OCgpIHtcbiAgICAgICAgcmV0dXJuIHJlYWRVSW50OCh0aGlzLnJlYWRCeXRlcygxKSwgMCk7XG4gICAgfVxuICAgIHJlYWRVSW50MTZCRSgpIHtcbiAgICAgICAgcmV0dXJuIHJlYWRVSW50MTZCRSh0aGlzLnJlYWRCeXRlcygyKSwgMCk7XG4gICAgfVxuICAgIHJlYWRCaWdVSW50TEUobGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gdGhpcy5yZWFkQnl0ZXMobGVuZ3RoKS5zbGljZSgpLnJldmVyc2UoKTtcbiAgICAgICAgY29uc3QgaGV4ID0gYnl0ZXNUb0hleChieXRlcyk7XG4gICAgICAgIHJldHVybiBCaWdJbnQoYDB4JHtoZXh9YCk7XG4gICAgfVxuICAgIHJlYWRCaWdVSW50QkUobGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gdGhpcy5yZWFkQnl0ZXMobGVuZ3RoKTtcbiAgICAgICAgY29uc3QgaGV4ID0gYnl0ZXNUb0hleChieXRlcyk7XG4gICAgICAgIHJldHVybiBCaWdJbnQoYDB4JHtoZXh9YCk7XG4gICAgfVxuICAgIGdldCByZWFkT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25zdW1lZDtcbiAgICB9XG4gICAgc2V0IHJlYWRPZmZzZXQodmFsKSB7XG4gICAgICAgIHRoaXMuY29uc3VtZWQgPSB2YWw7XG4gICAgfVxuICAgIGdldCBpbnRlcm5hbEJ5dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zb3VyY2U7XG4gICAgfVxuICAgIHJlYWRVSW50OEVudW0oZW51bVZhcmlhYmxlLCBpbnZhbGlkRW51bUVycm9yRm9ybWF0dGVyKSB7XG4gICAgICAgIGNvbnN0IG51bSA9IHRoaXMucmVhZFVJbnQ4KCk7XG4gICAgICAgIGlmIChpc0VudW0oZW51bVZhcmlhYmxlLCBudW0pKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVtO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGludmFsaWRFbnVtRXJyb3JGb3JtYXR0ZXIobnVtKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlc1JlYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/bytesReader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClarityType: function() { return /* binding */ ClarityType; }\n/* harmony export */ });\nvar ClarityType;\n(function (ClarityType) {\n    ClarityType[ClarityType[\"Int\"] = 0] = \"Int\";\n    ClarityType[ClarityType[\"UInt\"] = 1] = \"UInt\";\n    ClarityType[ClarityType[\"Buffer\"] = 2] = \"Buffer\";\n    ClarityType[ClarityType[\"BoolTrue\"] = 3] = \"BoolTrue\";\n    ClarityType[ClarityType[\"BoolFalse\"] = 4] = \"BoolFalse\";\n    ClarityType[ClarityType[\"PrincipalStandard\"] = 5] = \"PrincipalStandard\";\n    ClarityType[ClarityType[\"PrincipalContract\"] = 6] = \"PrincipalContract\";\n    ClarityType[ClarityType[\"ResponseOk\"] = 7] = \"ResponseOk\";\n    ClarityType[ClarityType[\"ResponseErr\"] = 8] = \"ResponseErr\";\n    ClarityType[ClarityType[\"OptionalNone\"] = 9] = \"OptionalNone\";\n    ClarityType[ClarityType[\"OptionalSome\"] = 10] = \"OptionalSome\";\n    ClarityType[ClarityType[\"List\"] = 11] = \"List\";\n    ClarityType[ClarityType[\"Tuple\"] = 12] = \"Tuple\";\n    ClarityType[ClarityType[\"StringASCII\"] = 13] = \"StringASCII\";\n    ClarityType[ClarityType[\"StringUTF8\"] = 14] = \"StringUTF8\";\n})(ClarityType || (ClarityType = {}));\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L2NvbnN0YW50cy5qcz8yYzIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQ2xhcml0eVR5cGU7XG4oZnVuY3Rpb24gKENsYXJpdHlUeXBlKSB7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJJbnRcIl0gPSAwXSA9IFwiSW50XCI7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJVSW50XCJdID0gMV0gPSBcIlVJbnRcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIkJ1ZmZlclwiXSA9IDJdID0gXCJCdWZmZXJcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIkJvb2xUcnVlXCJdID0gM10gPSBcIkJvb2xUcnVlXCI7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJCb29sRmFsc2VcIl0gPSA0XSA9IFwiQm9vbEZhbHNlXCI7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJQcmluY2lwYWxTdGFuZGFyZFwiXSA9IDVdID0gXCJQcmluY2lwYWxTdGFuZGFyZFwiO1xuICAgIENsYXJpdHlUeXBlW0NsYXJpdHlUeXBlW1wiUHJpbmNpcGFsQ29udHJhY3RcIl0gPSA2XSA9IFwiUHJpbmNpcGFsQ29udHJhY3RcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIlJlc3BvbnNlT2tcIl0gPSA3XSA9IFwiUmVzcG9uc2VPa1wiO1xuICAgIENsYXJpdHlUeXBlW0NsYXJpdHlUeXBlW1wiUmVzcG9uc2VFcnJcIl0gPSA4XSA9IFwiUmVzcG9uc2VFcnJcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIk9wdGlvbmFsTm9uZVwiXSA9IDldID0gXCJPcHRpb25hbE5vbmVcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIk9wdGlvbmFsU29tZVwiXSA9IDEwXSA9IFwiT3B0aW9uYWxTb21lXCI7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJMaXN0XCJdID0gMTFdID0gXCJMaXN0XCI7XG4gICAgQ2xhcml0eVR5cGVbQ2xhcml0eVR5cGVbXCJUdXBsZVwiXSA9IDEyXSA9IFwiVHVwbGVcIjtcbiAgICBDbGFyaXR5VHlwZVtDbGFyaXR5VHlwZVtcIlN0cmluZ0FTQ0lJXCJdID0gMTNdID0gXCJTdHJpbmdBU0NJSVwiO1xuICAgIENsYXJpdHlUeXBlW0NsYXJpdHlUeXBlW1wiU3RyaW5nVVRGOFwiXSA9IDE0XSA9IFwiU3RyaW5nVVRGOFwiO1xufSkoQ2xhcml0eVR5cGUgfHwgKENsYXJpdHlUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ deserializeCV; }\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/intCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/bufferCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/booleanCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/principalCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/responseCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/optionalCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/listCV.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/tupleCV.js\");\n/* harmony import */ var _bytesReader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytesReader */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/bytesReader.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/types.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js\");\n/* harmony import */ var _types_stringCV__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./types/stringCV */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/stringCV.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\n\n\n\n\n\nfunction deserializeCV(serializedClarityValue) {\n    let bytesReader;\n    if (typeof serializedClarityValue === 'string') {\n        const hasHexPrefix = serializedClarityValue.slice(0, 2).toLowerCase() === '0x';\n        bytesReader = new _bytesReader__WEBPACK_IMPORTED_MODULE_0__.BytesReader((0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(hasHexPrefix ? serializedClarityValue.slice(2) : serializedClarityValue));\n    }\n    else if (serializedClarityValue instanceof Uint8Array) {\n        bytesReader = new _bytesReader__WEBPACK_IMPORTED_MODULE_0__.BytesReader(serializedClarityValue);\n    }\n    else {\n        bytesReader = serializedClarityValue;\n    }\n    const type = bytesReader.readUInt8Enum(___WEBPACK_IMPORTED_MODULE_2__.ClarityType, n => {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_3__.DeserializationError(`Cannot recognize Clarity Type: ${n}`);\n    });\n    switch (type) {\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.Int:\n            return (0,___WEBPACK_IMPORTED_MODULE_4__.intCV)(bytesReader.readBytes(16));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.UInt:\n            return (0,___WEBPACK_IMPORTED_MODULE_4__.uintCV)(bytesReader.readBytes(16));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.Buffer:\n            const bufferLength = bytesReader.readUInt32BE();\n            return (0,___WEBPACK_IMPORTED_MODULE_5__.bufferCV)(bytesReader.readBytes(bufferLength));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.BoolTrue:\n            return (0,___WEBPACK_IMPORTED_MODULE_6__.trueCV)();\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.BoolFalse:\n            return (0,___WEBPACK_IMPORTED_MODULE_6__.falseCV)();\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.PrincipalStandard:\n            const sAddress = (0,_types__WEBPACK_IMPORTED_MODULE_7__.deserializeAddress)(bytesReader);\n            return (0,___WEBPACK_IMPORTED_MODULE_8__.standardPrincipalCVFromAddress)(sAddress);\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.PrincipalContract:\n            const cAddress = (0,_types__WEBPACK_IMPORTED_MODULE_7__.deserializeAddress)(bytesReader);\n            const contractName = (0,_types__WEBPACK_IMPORTED_MODULE_7__.deserializeLPString)(bytesReader);\n            return (0,___WEBPACK_IMPORTED_MODULE_8__.contractPrincipalCVFromAddress)(cAddress, contractName);\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.ResponseOk:\n            return (0,___WEBPACK_IMPORTED_MODULE_9__.responseOkCV)(deserializeCV(bytesReader));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.ResponseErr:\n            return (0,___WEBPACK_IMPORTED_MODULE_9__.responseErrorCV)(deserializeCV(bytesReader));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.OptionalNone:\n            return (0,___WEBPACK_IMPORTED_MODULE_10__.noneCV)();\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.OptionalSome:\n            return (0,___WEBPACK_IMPORTED_MODULE_10__.someCV)(deserializeCV(bytesReader));\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.List:\n            const listLength = bytesReader.readUInt32BE();\n            const listContents = [];\n            for (let i = 0; i < listLength; i++) {\n                listContents.push(deserializeCV(bytesReader));\n            }\n            return (0,___WEBPACK_IMPORTED_MODULE_11__.listCV)(listContents);\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.Tuple:\n            const tupleLength = bytesReader.readUInt32BE();\n            const tupleContents = {};\n            for (let i = 0; i < tupleLength; i++) {\n                const clarityName = (0,_types__WEBPACK_IMPORTED_MODULE_7__.deserializeLPString)(bytesReader).content;\n                if (clarityName === undefined) {\n                    throw new _errors__WEBPACK_IMPORTED_MODULE_3__.DeserializationError('\"content\" is undefined');\n                }\n                tupleContents[clarityName] = deserializeCV(bytesReader);\n            }\n            return (0,___WEBPACK_IMPORTED_MODULE_12__.tupleCV)(tupleContents);\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.StringASCII:\n            const asciiStrLen = bytesReader.readUInt32BE();\n            const asciiStr = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.bytesToAscii)(bytesReader.readBytes(asciiStrLen));\n            return (0,_types_stringCV__WEBPACK_IMPORTED_MODULE_13__.stringAsciiCV)(asciiStr);\n        case ___WEBPACK_IMPORTED_MODULE_2__.ClarityType.StringUTF8:\n            const utf8StrLen = bytesReader.readUInt32BE();\n            const utf8Str = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(bytesReader.readBytes(utf8StrLen));\n            return (0,_types_stringCV__WEBPACK_IMPORTED_MODULE_13__.stringUtf8CV)(utf8Str);\n        default:\n            throw new _errors__WEBPACK_IMPORTED_MODULE_3__.DeserializationError('Unable to deserialize Clarity Value from Uint8Array. Could not find valid Clarity Type.');\n    }\n}\n//# sourceMappingURL=deserialize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L2Rlc2VyaWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEyTTtBQUMvSTtBQUNPO0FBQ2xCO0FBQ2M7QUFDUTtBQUN4RDtBQUNmO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixxREFBVyxDQUFDLDBEQUFVO0FBQ2hEO0FBQ0E7QUFDQSwwQkFBMEIscURBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsMENBQVc7QUFDdEQsa0JBQWtCLHlEQUFvQixtQ0FBbUMsRUFBRTtBQUMzRSxLQUFLO0FBQ0w7QUFDQSxhQUFhLDBDQUFXO0FBQ3hCLG1CQUFtQix3Q0FBSztBQUN4QixhQUFhLDBDQUFXO0FBQ3hCLG1CQUFtQix5Q0FBTTtBQUN6QixhQUFhLDBDQUFXO0FBQ3hCO0FBQ0EsbUJBQW1CLDJDQUFRO0FBQzNCLGFBQWEsMENBQVc7QUFDeEIsbUJBQW1CLHlDQUFNO0FBQ3pCLGFBQWEsMENBQVc7QUFDeEIsbUJBQW1CLDBDQUFPO0FBQzFCLGFBQWEsMENBQVc7QUFDeEIsNkJBQTZCLDBEQUFrQjtBQUMvQyxtQkFBbUIsaUVBQThCO0FBQ2pELGFBQWEsMENBQVc7QUFDeEIsNkJBQTZCLDBEQUFrQjtBQUMvQyxpQ0FBaUMsMkRBQW1CO0FBQ3BELG1CQUFtQixpRUFBOEI7QUFDakQsYUFBYSwwQ0FBVztBQUN4QixtQkFBbUIsK0NBQVk7QUFDL0IsYUFBYSwwQ0FBVztBQUN4QixtQkFBbUIsa0RBQWU7QUFDbEMsYUFBYSwwQ0FBVztBQUN4QixtQkFBbUIsMENBQU07QUFDekIsYUFBYSwwQ0FBVztBQUN4QixtQkFBbUIsMENBQU07QUFDekIsYUFBYSwwQ0FBVztBQUN4QjtBQUNBO0FBQ0EsNEJBQTRCLGdCQUFnQjtBQUM1QztBQUNBO0FBQ0EsbUJBQW1CLDBDQUFNO0FBQ3pCLGFBQWEsMENBQVc7QUFDeEI7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0Msb0NBQW9DLDJEQUFtQjtBQUN2RDtBQUNBLDhCQUE4Qix5REFBb0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJDQUFPO0FBQzFCLGFBQWEsMENBQVc7QUFDeEI7QUFDQSw2QkFBNkIsNERBQVk7QUFDekMsbUJBQW1CLCtEQUFhO0FBQ2hDLGFBQWEsMENBQVc7QUFDeEI7QUFDQSw0QkFBNEIsMkRBQVc7QUFDdkMsbUJBQW1CLDhEQUFZO0FBQy9CO0FBQ0Esc0JBQXNCLHlEQUFvQjtBQUMxQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2NsYXJpdHkvZGVzZXJpYWxpemUuanM/NDdjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGFyaXR5VHlwZSwgaW50Q1YsIHVpbnRDViwgYnVmZmVyQ1YsIHRydWVDViwgZmFsc2VDViwgc3RhbmRhcmRQcmluY2lwYWxDVkZyb21BZGRyZXNzLCBjb250cmFjdFByaW5jaXBhbENWRnJvbUFkZHJlc3MsIHJlc3BvbnNlT2tDViwgcmVzcG9uc2VFcnJvckNWLCBub25lQ1YsIHNvbWVDViwgbGlzdENWLCB0dXBsZUNWLCB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQnl0ZXNSZWFkZXIgYXMgQnl0ZXNSZWFkZXIgfSBmcm9tICcuLi9ieXRlc1JlYWRlcic7XG5pbXBvcnQgeyBkZXNlcmlhbGl6ZUFkZHJlc3MsIGRlc2VyaWFsaXplTFBTdHJpbmcgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBEZXNlcmlhbGl6YXRpb25FcnJvciB9IGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgeyBzdHJpbmdBc2NpaUNWLCBzdHJpbmdVdGY4Q1YgfSBmcm9tICcuL3R5cGVzL3N0cmluZ0NWJztcbmltcG9ydCB7IGJ5dGVzVG9Bc2NpaSwgYnl0ZXNUb1V0ZjgsIGhleFRvQnl0ZXMgfSBmcm9tICdAc3RhY2tzL2NvbW1vbic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZXNlcmlhbGl6ZUNWKHNlcmlhbGl6ZWRDbGFyaXR5VmFsdWUpIHtcbiAgICBsZXQgYnl0ZXNSZWFkZXI7XG4gICAgaWYgKHR5cGVvZiBzZXJpYWxpemVkQ2xhcml0eVZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBoYXNIZXhQcmVmaXggPSBzZXJpYWxpemVkQ2xhcml0eVZhbHVlLnNsaWNlKDAsIDIpLnRvTG93ZXJDYXNlKCkgPT09ICcweCc7XG4gICAgICAgIGJ5dGVzUmVhZGVyID0gbmV3IEJ5dGVzUmVhZGVyKGhleFRvQnl0ZXMoaGFzSGV4UHJlZml4ID8gc2VyaWFsaXplZENsYXJpdHlWYWx1ZS5zbGljZSgyKSA6IHNlcmlhbGl6ZWRDbGFyaXR5VmFsdWUpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2VyaWFsaXplZENsYXJpdHlWYWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgYnl0ZXNSZWFkZXIgPSBuZXcgQnl0ZXNSZWFkZXIoc2VyaWFsaXplZENsYXJpdHlWYWx1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBieXRlc1JlYWRlciA9IHNlcmlhbGl6ZWRDbGFyaXR5VmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IHR5cGUgPSBieXRlc1JlYWRlci5yZWFkVUludDhFbnVtKENsYXJpdHlUeXBlLCBuID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IERlc2VyaWFsaXphdGlvbkVycm9yKGBDYW5ub3QgcmVjb2duaXplIENsYXJpdHkgVHlwZTogJHtufWApO1xuICAgIH0pO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLkludDpcbiAgICAgICAgICAgIHJldHVybiBpbnRDVihieXRlc1JlYWRlci5yZWFkQnl0ZXMoMTYpKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5VSW50OlxuICAgICAgICAgICAgcmV0dXJuIHVpbnRDVihieXRlc1JlYWRlci5yZWFkQnl0ZXMoMTYpKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5CdWZmZXI6XG4gICAgICAgICAgICBjb25zdCBidWZmZXJMZW5ndGggPSBieXRlc1JlYWRlci5yZWFkVUludDMyQkUoKTtcbiAgICAgICAgICAgIHJldHVybiBidWZmZXJDVihieXRlc1JlYWRlci5yZWFkQnl0ZXMoYnVmZmVyTGVuZ3RoKSk7XG4gICAgICAgIGNhc2UgQ2xhcml0eVR5cGUuQm9vbFRydWU6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZUNWKCk7XG4gICAgICAgIGNhc2UgQ2xhcml0eVR5cGUuQm9vbEZhbHNlOlxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlQ1YoKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5QcmluY2lwYWxTdGFuZGFyZDpcbiAgICAgICAgICAgIGNvbnN0IHNBZGRyZXNzID0gZGVzZXJpYWxpemVBZGRyZXNzKGJ5dGVzUmVhZGVyKTtcbiAgICAgICAgICAgIHJldHVybiBzdGFuZGFyZFByaW5jaXBhbENWRnJvbUFkZHJlc3Moc0FkZHJlc3MpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLlByaW5jaXBhbENvbnRyYWN0OlxuICAgICAgICAgICAgY29uc3QgY0FkZHJlc3MgPSBkZXNlcmlhbGl6ZUFkZHJlc3MoYnl0ZXNSZWFkZXIpO1xuICAgICAgICAgICAgY29uc3QgY29udHJhY3ROYW1lID0gZGVzZXJpYWxpemVMUFN0cmluZyhieXRlc1JlYWRlcik7XG4gICAgICAgICAgICByZXR1cm4gY29udHJhY3RQcmluY2lwYWxDVkZyb21BZGRyZXNzKGNBZGRyZXNzLCBjb250cmFjdE5hbWUpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLlJlc3BvbnNlT2s6XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2VPa0NWKGRlc2VyaWFsaXplQ1YoYnl0ZXNSZWFkZXIpKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5SZXNwb25zZUVycjpcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZUVycm9yQ1YoZGVzZXJpYWxpemVDVihieXRlc1JlYWRlcikpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLk9wdGlvbmFsTm9uZTpcbiAgICAgICAgICAgIHJldHVybiBub25lQ1YoKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5PcHRpb25hbFNvbWU6XG4gICAgICAgICAgICByZXR1cm4gc29tZUNWKGRlc2VyaWFsaXplQ1YoYnl0ZXNSZWFkZXIpKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5MaXN0OlxuICAgICAgICAgICAgY29uc3QgbGlzdExlbmd0aCA9IGJ5dGVzUmVhZGVyLnJlYWRVSW50MzJCRSgpO1xuICAgICAgICAgICAgY29uc3QgbGlzdENvbnRlbnRzID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGxpc3RDb250ZW50cy5wdXNoKGRlc2VyaWFsaXplQ1YoYnl0ZXNSZWFkZXIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBsaXN0Q1YobGlzdENvbnRlbnRzKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5UdXBsZTpcbiAgICAgICAgICAgIGNvbnN0IHR1cGxlTGVuZ3RoID0gYnl0ZXNSZWFkZXIucmVhZFVJbnQzMkJFKCk7XG4gICAgICAgICAgICBjb25zdCB0dXBsZUNvbnRlbnRzID0ge307XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHR1cGxlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjbGFyaXR5TmFtZSA9IGRlc2VyaWFsaXplTFBTdHJpbmcoYnl0ZXNSZWFkZXIpLmNvbnRlbnQ7XG4gICAgICAgICAgICAgICAgaWYgKGNsYXJpdHlOYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IERlc2VyaWFsaXphdGlvbkVycm9yKCdcImNvbnRlbnRcIiBpcyB1bmRlZmluZWQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHVwbGVDb250ZW50c1tjbGFyaXR5TmFtZV0gPSBkZXNlcmlhbGl6ZUNWKGJ5dGVzUmVhZGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0dXBsZUNWKHR1cGxlQ29udGVudHMpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLlN0cmluZ0FTQ0lJOlxuICAgICAgICAgICAgY29uc3QgYXNjaWlTdHJMZW4gPSBieXRlc1JlYWRlci5yZWFkVUludDMyQkUoKTtcbiAgICAgICAgICAgIGNvbnN0IGFzY2lpU3RyID0gYnl0ZXNUb0FzY2lpKGJ5dGVzUmVhZGVyLnJlYWRCeXRlcyhhc2NpaVN0ckxlbikpO1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZ0FzY2lpQ1YoYXNjaWlTdHIpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLlN0cmluZ1VURjg6XG4gICAgICAgICAgICBjb25zdCB1dGY4U3RyTGVuID0gYnl0ZXNSZWFkZXIucmVhZFVJbnQzMkJFKCk7XG4gICAgICAgICAgICBjb25zdCB1dGY4U3RyID0gYnl0ZXNUb1V0ZjgoYnl0ZXNSZWFkZXIucmVhZEJ5dGVzKHV0ZjhTdHJMZW4pKTtcbiAgICAgICAgICAgIHJldHVybiBzdHJpbmdVdGY4Q1YodXRmOFN0cik7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRGVzZXJpYWxpemF0aW9uRXJyb3IoJ1VuYWJsZSB0byBkZXNlcmlhbGl6ZSBDbGFyaXR5IFZhbHVlIGZyb20gVWludDhBcnJheS4gQ291bGQgbm90IGZpbmQgdmFsaWQgQ2xhcml0eSBUeXBlLicpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlc2VyaWFsaXplLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeCV: function() { return /* binding */ serializeCV; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/types.js\");\n/* harmony import */ var _postcondition_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../postcondition-types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n\n\n\n\n\n\nfunction bytesWithTypeID(typeId, bytes) {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatArray)([typeId, bytes]);\n}\nfunction serializeBoolCV(value) {\n    return new Uint8Array([value.type]);\n}\nfunction serializeOptionalCV(cv) {\n    if (cv.type === _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.OptionalNone) {\n        return new Uint8Array([cv.type]);\n    }\n    else {\n        return bytesWithTypeID(cv.type, serializeCV(cv.value));\n    }\n}\nfunction serializeBufferCV(cv) {\n    const length = new Uint8Array(4);\n    (0,_stacks_common__WEBPACK_IMPORTED_MODULE_2__.writeUInt32BE)(length, cv.buffer.length, 0);\n    return bytesWithTypeID(cv.type, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(length, cv.buffer));\n}\nfunction serializeIntCV(cv) {\n    const bytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.bigIntToBytes)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.toTwos)(cv.value, BigInt(_constants__WEBPACK_IMPORTED_MODULE_3__.CLARITY_INT_SIZE)), _constants__WEBPACK_IMPORTED_MODULE_3__.CLARITY_INT_BYTE_SIZE);\n    return bytesWithTypeID(cv.type, bytes);\n}\nfunction serializeUIntCV(cv) {\n    const bytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.bigIntToBytes)(cv.value, _constants__WEBPACK_IMPORTED_MODULE_3__.CLARITY_INT_BYTE_SIZE);\n    return bytesWithTypeID(cv.type, bytes);\n}\nfunction serializeStandardPrincipalCV(cv) {\n    return bytesWithTypeID(cv.type, (0,_types__WEBPACK_IMPORTED_MODULE_4__.serializeAddress)(cv.address));\n}\nfunction serializeContractPrincipalCV(cv) {\n    return bytesWithTypeID(cv.type, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatBytes)((0,_types__WEBPACK_IMPORTED_MODULE_4__.serializeAddress)(cv.address), (0,_types__WEBPACK_IMPORTED_MODULE_4__.serializeLPString)(cv.contractName)));\n}\nfunction serializeResponseCV(cv) {\n    return bytesWithTypeID(cv.type, serializeCV(cv.value));\n}\nfunction serializeListCV(cv) {\n    const bytesArray = [];\n    const length = new Uint8Array(4);\n    (0,_stacks_common__WEBPACK_IMPORTED_MODULE_2__.writeUInt32BE)(length, cv.list.length, 0);\n    bytesArray.push(length);\n    for (const value of cv.list) {\n        const serializedValue = serializeCV(value);\n        bytesArray.push(serializedValue);\n    }\n    return bytesWithTypeID(cv.type, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatArray)(bytesArray));\n}\nfunction serializeTupleCV(cv) {\n    const bytesArray = [];\n    const length = new Uint8Array(4);\n    (0,_stacks_common__WEBPACK_IMPORTED_MODULE_2__.writeUInt32BE)(length, Object.keys(cv.data).length, 0);\n    bytesArray.push(length);\n    const lexicographicOrder = Object.keys(cv.data).sort((a, b) => a.localeCompare(b));\n    for (const key of lexicographicOrder) {\n        const nameWithLength = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_5__.createLPString)(key);\n        bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_4__.serializeLPString)(nameWithLength));\n        const serializedValue = serializeCV(cv.data[key]);\n        bytesArray.push(serializedValue);\n    }\n    return bytesWithTypeID(cv.type, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatArray)(bytesArray));\n}\nfunction serializeStringCV(cv, encoding) {\n    const bytesArray = [];\n    const str = encoding == 'ascii' ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.asciiToBytes)(cv.data) : (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(cv.data);\n    const len = new Uint8Array(4);\n    (0,_stacks_common__WEBPACK_IMPORTED_MODULE_2__.writeUInt32BE)(len, str.length, 0);\n    bytesArray.push(len);\n    bytesArray.push(str);\n    return bytesWithTypeID(cv.type, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.concatArray)(bytesArray));\n}\nfunction serializeStringAsciiCV(cv) {\n    return serializeStringCV(cv, 'ascii');\n}\nfunction serializeStringUtf8CV(cv) {\n    return serializeStringCV(cv, 'utf8');\n}\nfunction serializeCV(value) {\n    switch (value.type) {\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.BoolTrue:\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.BoolFalse:\n            return serializeBoolCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.OptionalNone:\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.OptionalSome:\n            return serializeOptionalCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.Buffer:\n            return serializeBufferCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.UInt:\n            return serializeUIntCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.Int:\n            return serializeIntCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.PrincipalStandard:\n            return serializeStandardPrincipalCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.PrincipalContract:\n            return serializeContractPrincipalCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.ResponseOk:\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.ResponseErr:\n            return serializeResponseCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.List:\n            return serializeListCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.Tuple:\n            return serializeTupleCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.StringASCII:\n            return serializeStringAsciiCV(value);\n        case _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.StringUTF8:\n            return serializeStringUtf8CV(value);\n        default:\n            throw new _errors__WEBPACK_IMPORTED_MODULE_6__.SerializationError('Unable to serialize. Invalid Clarity Value.');\n    }\n}\n//# sourceMappingURL=serialize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3NlcmlhbGl6ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE0SDtBQUM3RDtBQUNQO0FBQ2Q7QUFDSztBQUN3QjtBQUN2RTtBQUNBLFdBQVcsMkRBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQixvQ0FBb0MsMkRBQVc7QUFDL0M7QUFDQTtBQUNBLGtCQUFrQiw2REFBYSxDQUFDLHNEQUFNLGtCQUFrQix3REFBZ0IsSUFBSSw2REFBcUI7QUFDakc7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZEQUFhLFdBQVcsNkRBQXFCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx3REFBZ0I7QUFDcEQ7QUFDQTtBQUNBLG9DQUFvQywyREFBVyxDQUFDLHdEQUFnQixjQUFjLHlEQUFpQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkRBQWE7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywyREFBVztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkRBQWE7QUFDakI7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG9FQUFjO0FBQzdDLHdCQUF3Qix5REFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDJEQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw0REFBWSxZQUFZLDJEQUFXO0FBQ3pFO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0Esb0NBQW9DLDJEQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsbURBQVc7QUFDeEIsYUFBYSxtREFBVztBQUN4QjtBQUNBLGFBQWEsbURBQVc7QUFDeEIsYUFBYSxtREFBVztBQUN4QjtBQUNBLGFBQWEsbURBQVc7QUFDeEI7QUFDQSxhQUFhLG1EQUFXO0FBQ3hCO0FBQ0EsYUFBYSxtREFBVztBQUN4QjtBQUNBLGFBQWEsbURBQVc7QUFDeEI7QUFDQSxhQUFhLG1EQUFXO0FBQ3hCO0FBQ0EsYUFBYSxtREFBVztBQUN4QixhQUFhLG1EQUFXO0FBQ3hCO0FBQ0EsYUFBYSxtREFBVztBQUN4QjtBQUNBLGFBQWEsbURBQVc7QUFDeEI7QUFDQSxhQUFhLG1EQUFXO0FBQ3hCO0FBQ0EsYUFBYSxtREFBVztBQUN4QjtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFrQjtBQUN4QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2NsYXJpdHkvc2VyaWFsaXplLmpzP2UyN2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uY2F0QXJyYXksIGNvbmNhdEJ5dGVzLCBiaWdJbnRUb0J5dGVzLCB0b1R3b3MsIHdyaXRlVUludDMyQkUsIHV0ZjhUb0J5dGVzLCBhc2NpaVRvQnl0ZXMsIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgc2VyaWFsaXplQWRkcmVzcywgc2VyaWFsaXplTFBTdHJpbmcgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVMUFN0cmluZyB9IGZyb20gJy4uL3Bvc3Rjb25kaXRpb24tdHlwZXMnO1xuaW1wb3J0IHsgQ2xhcml0eVR5cGUgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBTZXJpYWxpemF0aW9uRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMnO1xuaW1wb3J0IHsgQ0xBUklUWV9JTlRfQllURV9TSVpFLCBDTEFSSVRZX0lOVF9TSVpFIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmZ1bmN0aW9uIGJ5dGVzV2l0aFR5cGVJRCh0eXBlSWQsIGJ5dGVzKSB7XG4gICAgcmV0dXJuIGNvbmNhdEFycmF5KFt0eXBlSWQsIGJ5dGVzXSk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVCb29sQ1YodmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW3ZhbHVlLnR5cGVdKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZU9wdGlvbmFsQ1YoY3YpIHtcbiAgICBpZiAoY3YudHlwZSA9PT0gQ2xhcml0eVR5cGUuT3B0aW9uYWxOb25lKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShbY3YudHlwZV0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzV2l0aFR5cGVJRChjdi50eXBlLCBzZXJpYWxpemVDVihjdi52YWx1ZSkpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUJ1ZmZlckNWKGN2KSB7XG4gICAgY29uc3QgbGVuZ3RoID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgd3JpdGVVSW50MzJCRShsZW5ndGgsIGN2LmJ1ZmZlci5sZW5ndGgsIDApO1xuICAgIHJldHVybiBieXRlc1dpdGhUeXBlSUQoY3YudHlwZSwgY29uY2F0Qnl0ZXMobGVuZ3RoLCBjdi5idWZmZXIpKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUludENWKGN2KSB7XG4gICAgY29uc3QgYnl0ZXMgPSBiaWdJbnRUb0J5dGVzKHRvVHdvcyhjdi52YWx1ZSwgQmlnSW50KENMQVJJVFlfSU5UX1NJWkUpKSwgQ0xBUklUWV9JTlRfQllURV9TSVpFKTtcbiAgICByZXR1cm4gYnl0ZXNXaXRoVHlwZUlEKGN2LnR5cGUsIGJ5dGVzKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZVVJbnRDVihjdikge1xuICAgIGNvbnN0IGJ5dGVzID0gYmlnSW50VG9CeXRlcyhjdi52YWx1ZSwgQ0xBUklUWV9JTlRfQllURV9TSVpFKTtcbiAgICByZXR1cm4gYnl0ZXNXaXRoVHlwZUlEKGN2LnR5cGUsIGJ5dGVzKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZVN0YW5kYXJkUHJpbmNpcGFsQ1YoY3YpIHtcbiAgICByZXR1cm4gYnl0ZXNXaXRoVHlwZUlEKGN2LnR5cGUsIHNlcmlhbGl6ZUFkZHJlc3MoY3YuYWRkcmVzcykpO1xufVxuZnVuY3Rpb24gc2VyaWFsaXplQ29udHJhY3RQcmluY2lwYWxDVihjdikge1xuICAgIHJldHVybiBieXRlc1dpdGhUeXBlSUQoY3YudHlwZSwgY29uY2F0Qnl0ZXMoc2VyaWFsaXplQWRkcmVzcyhjdi5hZGRyZXNzKSwgc2VyaWFsaXplTFBTdHJpbmcoY3YuY29udHJhY3ROYW1lKSkpO1xufVxuZnVuY3Rpb24gc2VyaWFsaXplUmVzcG9uc2VDVihjdikge1xuICAgIHJldHVybiBieXRlc1dpdGhUeXBlSUQoY3YudHlwZSwgc2VyaWFsaXplQ1YoY3YudmFsdWUpKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUxpc3RDVihjdikge1xuICAgIGNvbnN0IGJ5dGVzQXJyYXkgPSBbXTtcbiAgICBjb25zdCBsZW5ndGggPSBuZXcgVWludDhBcnJheSg0KTtcbiAgICB3cml0ZVVJbnQzMkJFKGxlbmd0aCwgY3YubGlzdC5sZW5ndGgsIDApO1xuICAgIGJ5dGVzQXJyYXkucHVzaChsZW5ndGgpO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgY3YubGlzdCkge1xuICAgICAgICBjb25zdCBzZXJpYWxpemVkVmFsdWUgPSBzZXJpYWxpemVDVih2YWx1ZSk7XG4gICAgICAgIGJ5dGVzQXJyYXkucHVzaChzZXJpYWxpemVkVmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXNXaXRoVHlwZUlEKGN2LnR5cGUsIGNvbmNhdEFycmF5KGJ5dGVzQXJyYXkpKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZVR1cGxlQ1YoY3YpIHtcbiAgICBjb25zdCBieXRlc0FycmF5ID0gW107XG4gICAgY29uc3QgbGVuZ3RoID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgd3JpdGVVSW50MzJCRShsZW5ndGgsIE9iamVjdC5rZXlzKGN2LmRhdGEpLmxlbmd0aCwgMCk7XG4gICAgYnl0ZXNBcnJheS5wdXNoKGxlbmd0aCk7XG4gICAgY29uc3QgbGV4aWNvZ3JhcGhpY09yZGVyID0gT2JqZWN0LmtleXMoY3YuZGF0YSkuc29ydCgoYSwgYikgPT4gYS5sb2NhbGVDb21wYXJlKGIpKTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBsZXhpY29ncmFwaGljT3JkZXIpIHtcbiAgICAgICAgY29uc3QgbmFtZVdpdGhMZW5ndGggPSBjcmVhdGVMUFN0cmluZyhrZXkpO1xuICAgICAgICBieXRlc0FycmF5LnB1c2goc2VyaWFsaXplTFBTdHJpbmcobmFtZVdpdGhMZW5ndGgpKTtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZFZhbHVlID0gc2VyaWFsaXplQ1YoY3YuZGF0YVtrZXldKTtcbiAgICAgICAgYnl0ZXNBcnJheS5wdXNoKHNlcmlhbGl6ZWRWYWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBieXRlc1dpdGhUeXBlSUQoY3YudHlwZSwgY29uY2F0QXJyYXkoYnl0ZXNBcnJheSkpO1xufVxuZnVuY3Rpb24gc2VyaWFsaXplU3RyaW5nQ1YoY3YsIGVuY29kaW5nKSB7XG4gICAgY29uc3QgYnl0ZXNBcnJheSA9IFtdO1xuICAgIGNvbnN0IHN0ciA9IGVuY29kaW5nID09ICdhc2NpaScgPyBhc2NpaVRvQnl0ZXMoY3YuZGF0YSkgOiB1dGY4VG9CeXRlcyhjdi5kYXRhKTtcbiAgICBjb25zdCBsZW4gPSBuZXcgVWludDhBcnJheSg0KTtcbiAgICB3cml0ZVVJbnQzMkJFKGxlbiwgc3RyLmxlbmd0aCwgMCk7XG4gICAgYnl0ZXNBcnJheS5wdXNoKGxlbik7XG4gICAgYnl0ZXNBcnJheS5wdXNoKHN0cik7XG4gICAgcmV0dXJuIGJ5dGVzV2l0aFR5cGVJRChjdi50eXBlLCBjb25jYXRBcnJheShieXRlc0FycmF5KSk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVTdHJpbmdBc2NpaUNWKGN2KSB7XG4gICAgcmV0dXJuIHNlcmlhbGl6ZVN0cmluZ0NWKGN2LCAnYXNjaWknKTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZVN0cmluZ1V0ZjhDVihjdikge1xuICAgIHJldHVybiBzZXJpYWxpemVTdHJpbmdDVihjdiwgJ3V0ZjgnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVDVih2YWx1ZSkge1xuICAgIHN3aXRjaCAodmFsdWUudHlwZSkge1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLkJvb2xUcnVlOlxuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLkJvb2xGYWxzZTpcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVCb29sQ1YodmFsdWUpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLk9wdGlvbmFsTm9uZTpcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5PcHRpb25hbFNvbWU6XG4gICAgICAgICAgICByZXR1cm4gc2VyaWFsaXplT3B0aW9uYWxDVih2YWx1ZSk7XG4gICAgICAgIGNhc2UgQ2xhcml0eVR5cGUuQnVmZmVyOlxuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZUJ1ZmZlckNWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5VSW50OlxuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZVVJbnRDVih2YWx1ZSk7XG4gICAgICAgIGNhc2UgQ2xhcml0eVR5cGUuSW50OlxuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZUludENWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5QcmluY2lwYWxTdGFuZGFyZDpcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVTdGFuZGFyZFByaW5jaXBhbENWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5QcmluY2lwYWxDb250cmFjdDpcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVDb250cmFjdFByaW5jaXBhbENWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5SZXNwb25zZU9rOlxuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLlJlc3BvbnNlRXJyOlxuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZVJlc3BvbnNlQ1YodmFsdWUpO1xuICAgICAgICBjYXNlIENsYXJpdHlUeXBlLkxpc3Q6XG4gICAgICAgICAgICByZXR1cm4gc2VyaWFsaXplTGlzdENWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5UdXBsZTpcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVUdXBsZUNWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5TdHJpbmdBU0NJSTpcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVTdHJpbmdBc2NpaUNWKHZhbHVlKTtcbiAgICAgICAgY2FzZSBDbGFyaXR5VHlwZS5TdHJpbmdVVEY4OlxuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZVN0cmluZ1V0ZjhDVih2YWx1ZSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VyaWFsaXphdGlvbkVycm9yKCdVbmFibGUgdG8gc2VyaWFsaXplLiBJbnZhbGlkIENsYXJpdHkgVmFsdWUuJyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/booleanCV.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/booleanCV.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boolCV: function() { return /* binding */ boolCV; },\n/* harmony export */   falseCV: function() { return /* binding */ falseCV; },\n/* harmony export */   trueCV: function() { return /* binding */ trueCV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\nconst trueCV = () => ({ type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.BoolTrue });\nconst falseCV = () => ({ type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.BoolFalse });\nconst boolCV = (bool) => (bool ? trueCV() : falseCV());\n\n//# sourceMappingURL=booleanCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL2Jvb2xlYW5DVi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQzNDLHdCQUF3QixNQUFNLG1EQUFXLFdBQVc7QUFDcEQseUJBQXlCLE1BQU0sbURBQVcsWUFBWTtBQUN0RDtBQUNtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9ib29sZWFuQ1YuanM/ZTBjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGFyaXR5VHlwZSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5jb25zdCB0cnVlQ1YgPSAoKSA9PiAoeyB0eXBlOiBDbGFyaXR5VHlwZS5Cb29sVHJ1ZSB9KTtcbmNvbnN0IGZhbHNlQ1YgPSAoKSA9PiAoeyB0eXBlOiBDbGFyaXR5VHlwZS5Cb29sRmFsc2UgfSk7XG5jb25zdCBib29sQ1YgPSAoYm9vbCkgPT4gKGJvb2wgPyB0cnVlQ1YoKSA6IGZhbHNlQ1YoKSk7XG5leHBvcnQgeyBib29sQ1YsIHRydWVDViwgZmFsc2VDViB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ym9vbGVhbkNWLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/booleanCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/bufferCV.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/bufferCV.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferCV: function() { return /* binding */ bufferCV; },\n/* harmony export */   bufferCVFromString: function() { return /* binding */ bufferCVFromString; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\n\nconst bufferCV = (buffer) => {\n    if (buffer.length > 1000000) {\n        throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.Buffer, buffer };\n};\nconst bufferCVFromString = (str) => bufferCV((0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(str));\n\n//# sourceMappingURL=bufferCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL2J1ZmZlckNWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFDRjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNBLDZDQUE2QywyREFBVztBQUNoQjtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9idWZmZXJDVi5qcz8wN2I2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHV0ZjhUb0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgQ2xhcml0eVR5cGUgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuY29uc3QgYnVmZmVyQ1YgPSAoYnVmZmVyKSA9PiB7XG4gICAgaWYgKGJ1ZmZlci5sZW5ndGggPiAxMDAwMDAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBjbGFyaXR5IGJ1ZmZlciB0aGF0IGlzIGdyZWF0ZXIgdGhhbiAxTUInKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuQnVmZmVyLCBidWZmZXIgfTtcbn07XG5jb25zdCBidWZmZXJDVkZyb21TdHJpbmcgPSAoc3RyKSA9PiBidWZmZXJDVih1dGY4VG9CeXRlcyhzdHIpKTtcbmV4cG9ydCB7IGJ1ZmZlckNWLCBidWZmZXJDVkZyb21TdHJpbmcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1ZmZlckNWLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/bufferCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/intCV.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/intCV.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   intCV: function() { return /* binding */ intCV; },\n/* harmony export */   uintCV: function() { return /* binding */ uintCV; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\n\nconst MAX_U128 = BigInt('0xffffffffffffffffffffffffffffffff');\nconst MIN_U128 = BigInt(0);\nconst MAX_I128 = BigInt('0x7fffffffffffffffffffffffffffffff');\nconst MIN_I128 = BigInt('-170141183460469231731687303715884105728');\nconst intCV = (value) => {\n    const bigInt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.intToBigInt)(value, true);\n    if (bigInt > MAX_I128) {\n        throw new RangeError(`Cannot construct clarity integer from value greater than ${MAX_I128}`);\n    }\n    else if (bigInt < MIN_I128) {\n        throw new RangeError(`Cannot construct clarity integer form value less than ${MIN_I128}`);\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.Int, value: bigInt };\n};\nconst uintCV = (value) => {\n    const bigInt = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_0__.intToBigInt)(value, false);\n    if (bigInt < MIN_U128) {\n        throw new RangeError('Cannot construct unsigned clarity integer from negative value');\n    }\n    else if (bigInt > MAX_U128) {\n        throw new RangeError(`Cannot construct unsigned clarity integer greater than ${MAX_U128}`);\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.UInt, value: bigInt };\n};\n\n//# sourceMappingURL=intCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL2ludENWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFDRjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJEQUFXO0FBQzlCO0FBQ0EseUZBQXlGLFNBQVM7QUFDbEc7QUFDQTtBQUNBLHNGQUFzRixTQUFTO0FBQy9GO0FBQ0EsYUFBYSxNQUFNLG1EQUFXO0FBQzlCO0FBQ0E7QUFDQSxtQkFBbUIsMkRBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUYsU0FBUztBQUNoRztBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUN5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9pbnRDVi5qcz8yN2U0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludFRvQmlnSW50IH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgQ2xhcml0eVR5cGUgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuY29uc3QgTUFYX1UxMjggPSBCaWdJbnQoJzB4ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnKTtcbmNvbnN0IE1JTl9VMTI4ID0gQmlnSW50KDApO1xuY29uc3QgTUFYX0kxMjggPSBCaWdJbnQoJzB4N2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnKTtcbmNvbnN0IE1JTl9JMTI4ID0gQmlnSW50KCctMTcwMTQxMTgzNDYwNDY5MjMxNzMxNjg3MzAzNzE1ODg0MTA1NzI4Jyk7XG5jb25zdCBpbnRDViA9ICh2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IGJpZ0ludCA9IGludFRvQmlnSW50KHZhbHVlLCB0cnVlKTtcbiAgICBpZiAoYmlnSW50ID4gTUFYX0kxMjgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoYENhbm5vdCBjb25zdHJ1Y3QgY2xhcml0eSBpbnRlZ2VyIGZyb20gdmFsdWUgZ3JlYXRlciB0aGFuICR7TUFYX0kxMjh9YCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGJpZ0ludCA8IE1JTl9JMTI4KSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGBDYW5ub3QgY29uc3RydWN0IGNsYXJpdHkgaW50ZWdlciBmb3JtIHZhbHVlIGxlc3MgdGhhbiAke01JTl9JMTI4fWApO1xuICAgIH1cbiAgICByZXR1cm4geyB0eXBlOiBDbGFyaXR5VHlwZS5JbnQsIHZhbHVlOiBiaWdJbnQgfTtcbn07XG5jb25zdCB1aW50Q1YgPSAodmFsdWUpID0+IHtcbiAgICBjb25zdCBiaWdJbnQgPSBpbnRUb0JpZ0ludCh2YWx1ZSwgZmFsc2UpO1xuICAgIGlmIChiaWdJbnQgPCBNSU5fVTEyOCkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ2Fubm90IGNvbnN0cnVjdCB1bnNpZ25lZCBjbGFyaXR5IGludGVnZXIgZnJvbSBuZWdhdGl2ZSB2YWx1ZScpO1xuICAgIH1cbiAgICBlbHNlIGlmIChiaWdJbnQgPiBNQVhfVTEyOCkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgQ2Fubm90IGNvbnN0cnVjdCB1bnNpZ25lZCBjbGFyaXR5IGludGVnZXIgZ3JlYXRlciB0aGFuICR7TUFYX1UxMjh9YCk7XG4gICAgfVxuICAgIHJldHVybiB7IHR5cGU6IENsYXJpdHlUeXBlLlVJbnQsIHZhbHVlOiBiaWdJbnQgfTtcbn07XG5leHBvcnQgeyBpbnRDViwgdWludENWIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRDVi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/intCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/listCV.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/listCV.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listCV: function() { return /* binding */ listCV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\nfunction listCV(values) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.List, list: values };\n}\n\n//# sourceMappingURL=listCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL2xpc3RDVi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUMzQztBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9saXN0Q1YuanM/NzIwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGFyaXR5VHlwZSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5mdW5jdGlvbiBsaXN0Q1YodmFsdWVzKSB7XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuTGlzdCwgbGlzdDogdmFsdWVzIH07XG59XG5leHBvcnQgeyBsaXN0Q1YgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpc3RDVi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/listCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/optionalCV.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/optionalCV.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noneCV: function() { return /* binding */ noneCV; },\n/* harmony export */   optionalCVOf: function() { return /* binding */ optionalCVOf; },\n/* harmony export */   someCV: function() { return /* binding */ someCV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\nfunction noneCV() {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.OptionalNone };\n}\nfunction someCV(value) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.OptionalSome, value };\n}\nfunction optionalCVOf(value) {\n    if (value) {\n        return someCV(value);\n    }\n    else {\n        return noneCV();\n    }\n}\n\n//# sourceMappingURL=optionalCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL29wdGlvbmFsQ1YuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUMzQztBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNBO0FBQ0EsYUFBYSxNQUFNLG1EQUFXO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9vcHRpb25hbENWLmpzP2RkZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xhcml0eVR5cGUgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuZnVuY3Rpb24gbm9uZUNWKCkge1xuICAgIHJldHVybiB7IHR5cGU6IENsYXJpdHlUeXBlLk9wdGlvbmFsTm9uZSB9O1xufVxuZnVuY3Rpb24gc29tZUNWKHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuT3B0aW9uYWxTb21lLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gb3B0aW9uYWxDVk9mKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBzb21lQ1YodmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5vbmVDVigpO1xuICAgIH1cbn1cbmV4cG9ydCB7IG5vbmVDViwgc29tZUNWLCBvcHRpb25hbENWT2YgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wdGlvbmFsQ1YuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/optionalCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/principalCV.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/principalCV.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contractPrincipalCV: function() { return /* binding */ contractPrincipalCV; },\n/* harmony export */   contractPrincipalCVFromAddress: function() { return /* binding */ contractPrincipalCVFromAddress; },\n/* harmony export */   contractPrincipalCVFromStandard: function() { return /* binding */ contractPrincipalCVFromStandard; },\n/* harmony export */   principalCV: function() { return /* binding */ principalCV; },\n/* harmony export */   principalToString: function() { return /* binding */ principalToString; },\n/* harmony export */   standardPrincipalCV: function() { return /* binding */ standardPrincipalCV; },\n/* harmony export */   standardPrincipalCVFromAddress: function() { return /* binding */ standardPrincipalCVFromAddress; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js\");\n/* harmony import */ var _postcondition_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../postcondition-types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\n\n\n\nfunction principalToString(principal) {\n    if (principal.type === _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalStandard) {\n        return (0,_common__WEBPACK_IMPORTED_MODULE_1__.addressToString)(principal.address);\n    }\n    else if (principal.type === _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalContract) {\n        const address = (0,_common__WEBPACK_IMPORTED_MODULE_1__.addressToString)(principal.address);\n        return `${address}.${principal.contractName.content}`;\n    }\n    else {\n        throw new Error(`Unexpected principal data: ${JSON.stringify(principal)}`);\n    }\n}\nfunction principalCV(principal) {\n    if (principal.includes('.')) {\n        const [address, contractName] = principal.split('.');\n        return contractPrincipalCV(address, contractName);\n    }\n    else {\n        return standardPrincipalCV(principal);\n    }\n}\nfunction standardPrincipalCV(addressString) {\n    const addr = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_2__.createAddress)(addressString);\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalStandard, address: addr };\n}\nfunction standardPrincipalCVFromAddress(address) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalStandard, address };\n}\nfunction contractPrincipalCV(addressString, contractName) {\n    const addr = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_2__.createAddress)(addressString);\n    const lengthPrefixedContractName = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_2__.createLPString)(contractName);\n    return contractPrincipalCVFromAddress(addr, lengthPrefixedContractName);\n}\nfunction contractPrincipalCVFromAddress(address, contractName) {\n    if ((0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.utf8ToBytes)(contractName.content).byteLength >= 128) {\n        throw new Error('Contract name must be less than 128 bytes');\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalContract, address, contractName };\n}\nfunction contractPrincipalCVFromStandard(sp, contractName) {\n    const lengthPrefixedContractName = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_2__.createLPString)(contractName);\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.PrincipalContract,\n        address: sp.address,\n        contractName: lengthPrefixedContractName,\n    };\n}\n\n//# sourceMappingURL=principalCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL3ByaW5jaXBhbENWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTZDO0FBQ0U7QUFDMkI7QUFDL0I7QUFDM0M7QUFDQSwyQkFBMkIsbURBQVc7QUFDdEMsZUFBZSx3REFBZTtBQUM5QjtBQUNBLGdDQUFnQyxtREFBVztBQUMzQyx3QkFBd0Isd0RBQWU7QUFDdkMsa0JBQWtCLFFBQVEsR0FBRywrQkFBK0I7QUFDNUQ7QUFDQTtBQUNBLHNEQUFzRCwwQkFBMEI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1FQUFhO0FBQzlCLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNBO0FBQ0EsYUFBYSxNQUFNLG1EQUFXO0FBQzlCO0FBQ0E7QUFDQSxpQkFBaUIsbUVBQWE7QUFDOUIsdUNBQXVDLG9FQUFjO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkRBQVc7QUFDbkI7QUFDQTtBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNBO0FBQ0EsdUNBQXVDLG9FQUFjO0FBQ3JEO0FBQ0EsY0FBYyxtREFBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNzTDtBQUN0TCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy9wcmluY2lwYWxDVi5qcz9kODMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHV0ZjhUb0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgYWRkcmVzc1RvU3RyaW5nIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IGNyZWF0ZUFkZHJlc3MsIGNyZWF0ZUxQU3RyaW5nIH0gZnJvbSAnLi4vLi4vcG9zdGNvbmRpdGlvbi10eXBlcyc7XG5pbXBvcnQgeyBDbGFyaXR5VHlwZSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5mdW5jdGlvbiBwcmluY2lwYWxUb1N0cmluZyhwcmluY2lwYWwpIHtcbiAgICBpZiAocHJpbmNpcGFsLnR5cGUgPT09IENsYXJpdHlUeXBlLlByaW5jaXBhbFN0YW5kYXJkKSB7XG4gICAgICAgIHJldHVybiBhZGRyZXNzVG9TdHJpbmcocHJpbmNpcGFsLmFkZHJlc3MpO1xuICAgIH1cbiAgICBlbHNlIGlmIChwcmluY2lwYWwudHlwZSA9PT0gQ2xhcml0eVR5cGUuUHJpbmNpcGFsQ29udHJhY3QpIHtcbiAgICAgICAgY29uc3QgYWRkcmVzcyA9IGFkZHJlc3NUb1N0cmluZyhwcmluY2lwYWwuYWRkcmVzcyk7XG4gICAgICAgIHJldHVybiBgJHthZGRyZXNzfS4ke3ByaW5jaXBhbC5jb250cmFjdE5hbWUuY29udGVudH1gO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHByaW5jaXBhbCBkYXRhOiAke0pTT04uc3RyaW5naWZ5KHByaW5jaXBhbCl9YCk7XG4gICAgfVxufVxuZnVuY3Rpb24gcHJpbmNpcGFsQ1YocHJpbmNpcGFsKSB7XG4gICAgaWYgKHByaW5jaXBhbC5pbmNsdWRlcygnLicpKSB7XG4gICAgICAgIGNvbnN0IFthZGRyZXNzLCBjb250cmFjdE5hbWVdID0gcHJpbmNpcGFsLnNwbGl0KCcuJyk7XG4gICAgICAgIHJldHVybiBjb250cmFjdFByaW5jaXBhbENWKGFkZHJlc3MsIGNvbnRyYWN0TmFtZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gc3RhbmRhcmRQcmluY2lwYWxDVihwcmluY2lwYWwpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN0YW5kYXJkUHJpbmNpcGFsQ1YoYWRkcmVzc1N0cmluZykge1xuICAgIGNvbnN0IGFkZHIgPSBjcmVhdGVBZGRyZXNzKGFkZHJlc3NTdHJpbmcpO1xuICAgIHJldHVybiB7IHR5cGU6IENsYXJpdHlUeXBlLlByaW5jaXBhbFN0YW5kYXJkLCBhZGRyZXNzOiBhZGRyIH07XG59XG5mdW5jdGlvbiBzdGFuZGFyZFByaW5jaXBhbENWRnJvbUFkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiB7IHR5cGU6IENsYXJpdHlUeXBlLlByaW5jaXBhbFN0YW5kYXJkLCBhZGRyZXNzIH07XG59XG5mdW5jdGlvbiBjb250cmFjdFByaW5jaXBhbENWKGFkZHJlc3NTdHJpbmcsIGNvbnRyYWN0TmFtZSkge1xuICAgIGNvbnN0IGFkZHIgPSBjcmVhdGVBZGRyZXNzKGFkZHJlc3NTdHJpbmcpO1xuICAgIGNvbnN0IGxlbmd0aFByZWZpeGVkQ29udHJhY3ROYW1lID0gY3JlYXRlTFBTdHJpbmcoY29udHJhY3ROYW1lKTtcbiAgICByZXR1cm4gY29udHJhY3RQcmluY2lwYWxDVkZyb21BZGRyZXNzKGFkZHIsIGxlbmd0aFByZWZpeGVkQ29udHJhY3ROYW1lKTtcbn1cbmZ1bmN0aW9uIGNvbnRyYWN0UHJpbmNpcGFsQ1ZGcm9tQWRkcmVzcyhhZGRyZXNzLCBjb250cmFjdE5hbWUpIHtcbiAgICBpZiAodXRmOFRvQnl0ZXMoY29udHJhY3ROYW1lLmNvbnRlbnQpLmJ5dGVMZW5ndGggPj0gMTI4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ29udHJhY3QgbmFtZSBtdXN0IGJlIGxlc3MgdGhhbiAxMjggYnl0ZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuUHJpbmNpcGFsQ29udHJhY3QsIGFkZHJlc3MsIGNvbnRyYWN0TmFtZSB9O1xufVxuZnVuY3Rpb24gY29udHJhY3RQcmluY2lwYWxDVkZyb21TdGFuZGFyZChzcCwgY29udHJhY3ROYW1lKSB7XG4gICAgY29uc3QgbGVuZ3RoUHJlZml4ZWRDb250cmFjdE5hbWUgPSBjcmVhdGVMUFN0cmluZyhjb250cmFjdE5hbWUpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IENsYXJpdHlUeXBlLlByaW5jaXBhbENvbnRyYWN0LFxuICAgICAgICBhZGRyZXNzOiBzcC5hZGRyZXNzLFxuICAgICAgICBjb250cmFjdE5hbWU6IGxlbmd0aFByZWZpeGVkQ29udHJhY3ROYW1lLFxuICAgIH07XG59XG5leHBvcnQgeyBwcmluY2lwYWxDViwgcHJpbmNpcGFsVG9TdHJpbmcsIHN0YW5kYXJkUHJpbmNpcGFsQ1YsIHN0YW5kYXJkUHJpbmNpcGFsQ1ZGcm9tQWRkcmVzcywgY29udHJhY3RQcmluY2lwYWxDViwgY29udHJhY3RQcmluY2lwYWxDVkZyb21BZGRyZXNzLCBjb250cmFjdFByaW5jaXBhbENWRnJvbVN0YW5kYXJkLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJpbmNpcGFsQ1YuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/principalCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/responseCV.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/responseCV.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   responseErrorCV: function() { return /* binding */ responseErrorCV; },\n/* harmony export */   responseOkCV: function() { return /* binding */ responseOkCV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\nfunction responseErrorCV(value) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.ResponseErr, value };\n}\nfunction responseOkCV(value) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.ResponseOk, value };\n}\n\n//# sourceMappingURL=responseCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL3Jlc3BvbnNlQ1YuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQzNDO0FBQ0EsYUFBYSxNQUFNLG1EQUFXO0FBQzlCO0FBQ0E7QUFDQSxhQUFhLE1BQU0sbURBQVc7QUFDOUI7QUFDeUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2NsYXJpdHkvdHlwZXMvcmVzcG9uc2VDVi5qcz8wZmE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsYXJpdHlUeXBlIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmZ1bmN0aW9uIHJlc3BvbnNlRXJyb3JDVih2YWx1ZSkge1xuICAgIHJldHVybiB7IHR5cGU6IENsYXJpdHlUeXBlLlJlc3BvbnNlRXJyLCB2YWx1ZSB9O1xufVxuZnVuY3Rpb24gcmVzcG9uc2VPa0NWKHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuUmVzcG9uc2VPaywgdmFsdWUgfTtcbn1cbmV4cG9ydCB7IHJlc3BvbnNlRXJyb3JDViwgcmVzcG9uc2VPa0NWIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZUNWLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/responseCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/stringCV.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/stringCV.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringAsciiCV: function() { return /* binding */ stringAsciiCV; },\n/* harmony export */   stringCV: function() { return /* binding */ stringCV; },\n/* harmony export */   stringUtf8CV: function() { return /* binding */ stringUtf8CV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n\nconst stringAsciiCV = (data) => {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.StringASCII, data };\n};\nconst stringUtf8CV = (data) => {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.ClarityType.StringUTF8, data };\n};\nconst stringCV = (data, encoding) => {\n    switch (encoding) {\n        case 'ascii':\n            return stringAsciiCV(data);\n        case 'utf8':\n            return stringUtf8CV(data);\n    }\n};\n\n//# sourceMappingURL=stringCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL3N0cmluZ0NWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDM0M7QUFDQSxhQUFhLE1BQU0sbURBQVc7QUFDOUI7QUFDQTtBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2NsYXJpdHkvdHlwZXMvc3RyaW5nQ1YuanM/YjFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGFyaXR5VHlwZSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5jb25zdCBzdHJpbmdBc2NpaUNWID0gKGRhdGEpID0+IHtcbiAgICByZXR1cm4geyB0eXBlOiBDbGFyaXR5VHlwZS5TdHJpbmdBU0NJSSwgZGF0YSB9O1xufTtcbmNvbnN0IHN0cmluZ1V0ZjhDViA9IChkYXRhKSA9PiB7XG4gICAgcmV0dXJuIHsgdHlwZTogQ2xhcml0eVR5cGUuU3RyaW5nVVRGOCwgZGF0YSB9O1xufTtcbmNvbnN0IHN0cmluZ0NWID0gKGRhdGEsIGVuY29kaW5nKSA9PiB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgICBjYXNlICdhc2NpaSc6XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nQXNjaWlDVihkYXRhKTtcbiAgICAgICAgY2FzZSAndXRmOCc6XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nVXRmOENWKGRhdGEpO1xuICAgIH1cbn07XG5leHBvcnQgeyBzdHJpbmdBc2NpaUNWLCBzdHJpbmdVdGY4Q1YsIHN0cmluZ0NWIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmdDVi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/stringCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/tupleCV.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/clarity/types/tupleCV.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tupleCV: function() { return /* binding */ tupleCV; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js\");\n\n\nfunction tupleCV(data) {\n    for (const key in data) {\n        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_0__.isClarityName)(key)) {\n            throw new Error(`\"${key}\" is not a valid Clarity name`);\n        }\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_1__.ClarityType.Tuple, data };\n}\n\n//# sourceMappingURL=tupleCV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jbGFyaXR5L3R5cGVzL3R1cGxlQ1YuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ0M7QUFDNUM7QUFDQTtBQUNBLGFBQWEscURBQWE7QUFDMUIsZ0NBQWdDLElBQUk7QUFDcEM7QUFDQTtBQUNBLGFBQWEsTUFBTSxtREFBVztBQUM5QjtBQUNtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY2xhcml0eS90eXBlcy90dXBsZUNWLmpzPzU0NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xhcml0eVR5cGUgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgaXNDbGFyaXR5TmFtZSB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmZ1bmN0aW9uIHR1cGxlQ1YoZGF0YSkge1xuICAgIGZvciAoY29uc3Qga2V5IGluIGRhdGEpIHtcbiAgICAgICAgaWYgKCFpc0NsYXJpdHlOYW1lKGtleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCIke2tleX1cIiBpcyBub3QgYSB2YWxpZCBDbGFyaXR5IG5hbWVgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyB0eXBlOiBDbGFyaXR5VHlwZS5UdXBsZSwgZGF0YSB9O1xufVxuZXhwb3J0IHsgdHVwbGVDViB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHVwbGVDVi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/tupleCV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/common.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressFromVersionHash: function() { return /* binding */ addressFromVersionHash; },\n/* harmony export */   addressHashModeToVersion: function() { return /* binding */ addressHashModeToVersion; },\n/* harmony export */   addressToString: function() { return /* binding */ addressToString; },\n/* harmony export */   createMessageSignature: function() { return /* binding */ createMessageSignature; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var c32check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! c32check */ \"(app-pages-browser)/./node_modules/c32check/lib/index.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\n\n\nfunction createMessageSignature(signature) {\n    const length = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(signature).byteLength;\n    if (length != _constants__WEBPACK_IMPORTED_MODULE_2__.RECOVERABLE_ECDSA_SIG_LENGTH_BYTES) {\n        throw Error('Invalid signature');\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_2__.StacksMessageType.MessageSignature,\n        data: signature,\n    };\n}\nfunction addressHashModeToVersion(hashMode, txVersion) {\n    switch (hashMode) {\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.AddressHashMode.SerializeP2PKH:\n            switch (txVersion) {\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.TransactionVersion.Mainnet:\n                    return _constants__WEBPACK_IMPORTED_MODULE_2__.AddressVersion.MainnetSingleSig;\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.TransactionVersion.Testnet:\n                    return _constants__WEBPACK_IMPORTED_MODULE_2__.AddressVersion.TestnetSingleSig;\n                default:\n                    throw new Error(`Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`);\n            }\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.AddressHashMode.SerializeP2SH:\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.AddressHashMode.SerializeP2WPKH:\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.AddressHashMode.SerializeP2WSH:\n            switch (txVersion) {\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.TransactionVersion.Mainnet:\n                    return _constants__WEBPACK_IMPORTED_MODULE_2__.AddressVersion.MainnetMultiSig;\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.TransactionVersion.Testnet:\n                    return _constants__WEBPACK_IMPORTED_MODULE_2__.AddressVersion.TestnetMultiSig;\n                default:\n                    throw new Error(`Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`);\n            }\n        default:\n            throw new Error(`Unexpected hashMode ${JSON.stringify(hashMode)}`);\n    }\n}\nfunction addressFromVersionHash(version, hash) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_2__.StacksMessageType.Address, version, hash160: hash };\n}\nfunction addressToString(address) {\n    return (0,c32check__WEBPACK_IMPORTED_MODULE_0__.c32address)(address.version, address.hash160);\n}\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwSTtBQUNwRztBQUNNO0FBQ3JDO0FBQ1AsbUJBQW1CLDBEQUFVO0FBQzdCLGtCQUFrQiwwRUFBa0M7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5REFBaUI7QUFDL0I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsdURBQWU7QUFDNUI7QUFDQSxxQkFBcUIsMERBQWtCO0FBQ3ZDLDJCQUEyQixzREFBYztBQUN6QyxxQkFBcUIsMERBQWtCO0FBQ3ZDLDJCQUEyQixzREFBYztBQUN6QztBQUNBLDREQUE0RCwyQkFBMkIsZUFBZSxTQUFTO0FBQy9HO0FBQ0EsYUFBYSx1REFBZTtBQUM1QixhQUFhLHVEQUFlO0FBQzVCLGFBQWEsdURBQWU7QUFDNUI7QUFDQSxxQkFBcUIsMERBQWtCO0FBQ3ZDLDJCQUEyQixzREFBYztBQUN6QyxxQkFBcUIsMERBQWtCO0FBQ3ZDLDJCQUEyQixzREFBYztBQUN6QztBQUNBLDREQUE0RCwyQkFBMkIsZUFBZSxTQUFTO0FBQy9HO0FBQ0E7QUFDQSxtREFBbUQseUJBQXlCO0FBQzVFO0FBQ0E7QUFDTztBQUNQLGFBQWEsTUFBTSx5REFBaUI7QUFDcEM7QUFDTztBQUNQLFdBQVcsb0RBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vY29tbW9uLmpzPzEyNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWRkcmVzc0hhc2hNb2RlLCBBZGRyZXNzVmVyc2lvbiwgUkVDT1ZFUkFCTEVfRUNEU0FfU0lHX0xFTkdUSF9CWVRFUywgU3RhY2tzTWVzc2FnZVR5cGUsIFRyYW5zYWN0aW9uVmVyc2lvbiwgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjMzJhZGRyZXNzIH0gZnJvbSAnYzMyY2hlY2snO1xuaW1wb3J0IHsgaGV4VG9CeXRlcyB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZXNzYWdlU2lnbmF0dXJlKHNpZ25hdHVyZSkge1xuICAgIGNvbnN0IGxlbmd0aCA9IGhleFRvQnl0ZXMoc2lnbmF0dXJlKS5ieXRlTGVuZ3RoO1xuICAgIGlmIChsZW5ndGggIT0gUkVDT1ZFUkFCTEVfRUNEU0FfU0lHX0xFTkdUSF9CWVRFUykge1xuICAgICAgICB0aHJvdyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUnKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogU3RhY2tzTWVzc2FnZVR5cGUuTWVzc2FnZVNpZ25hdHVyZSxcbiAgICAgICAgZGF0YTogc2lnbmF0dXJlLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkcmVzc0hhc2hNb2RlVG9WZXJzaW9uKGhhc2hNb2RlLCB0eFZlcnNpb24pIHtcbiAgICBzd2l0Y2ggKGhhc2hNb2RlKSB7XG4gICAgICAgIGNhc2UgQWRkcmVzc0hhc2hNb2RlLlNlcmlhbGl6ZVAyUEtIOlxuICAgICAgICAgICAgc3dpdGNoICh0eFZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICBjYXNlIFRyYW5zYWN0aW9uVmVyc2lvbi5NYWlubmV0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQWRkcmVzc1ZlcnNpb24uTWFpbm5ldFNpbmdsZVNpZztcbiAgICAgICAgICAgICAgICBjYXNlIFRyYW5zYWN0aW9uVmVyc2lvbi5UZXN0bmV0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQWRkcmVzc1ZlcnNpb24uVGVzdG5ldFNpbmdsZVNpZztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHhWZXJzaW9uICR7SlNPTi5zdHJpbmdpZnkodHhWZXJzaW9uKX0gZm9yIGhhc2hNb2RlICR7aGFzaE1vZGV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGNhc2UgQWRkcmVzc0hhc2hNb2RlLlNlcmlhbGl6ZVAyU0g6XG4gICAgICAgIGNhc2UgQWRkcmVzc0hhc2hNb2RlLlNlcmlhbGl6ZVAyV1BLSDpcbiAgICAgICAgY2FzZSBBZGRyZXNzSGFzaE1vZGUuU2VyaWFsaXplUDJXU0g6XG4gICAgICAgICAgICBzd2l0Y2ggKHR4VmVyc2lvbikge1xuICAgICAgICAgICAgICAgIGNhc2UgVHJhbnNhY3Rpb25WZXJzaW9uLk1haW5uZXQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBBZGRyZXNzVmVyc2lvbi5NYWlubmV0TXVsdGlTaWc7XG4gICAgICAgICAgICAgICAgY2FzZSBUcmFuc2FjdGlvblZlcnNpb24uVGVzdG5ldDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFkZHJlc3NWZXJzaW9uLlRlc3RuZXRNdWx0aVNpZztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHhWZXJzaW9uICR7SlNPTi5zdHJpbmdpZnkodHhWZXJzaW9uKX0gZm9yIGhhc2hNb2RlICR7aGFzaE1vZGV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgaGFzaE1vZGUgJHtKU09OLnN0cmluZ2lmeShoYXNoTW9kZSl9YCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZHJlc3NGcm9tVmVyc2lvbkhhc2godmVyc2lvbiwgaGFzaCkge1xuICAgIHJldHVybiB7IHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLkFkZHJlc3MsIHZlcnNpb24sIGhhc2gxNjA6IGhhc2ggfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRyZXNzVG9TdHJpbmcoYWRkcmVzcykge1xuICAgIHJldHVybiBjMzJhZGRyZXNzKGFkZHJlc3MudmVyc2lvbiwgYWRkcmVzcy5oYXNoMTYwKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/constants.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddressHashMode: function() { return /* binding */ AddressHashMode; },\n/* harmony export */   AddressVersion: function() { return /* binding */ AddressVersion; },\n/* harmony export */   AnchorMode: function() { return /* binding */ AnchorMode; },\n/* harmony export */   AnchorModeNames: function() { return /* binding */ AnchorModeNames; },\n/* harmony export */   AssetType: function() { return /* binding */ AssetType; },\n/* harmony export */   AuthType: function() { return /* binding */ AuthType; },\n/* harmony export */   CLARITY_INT_BYTE_SIZE: function() { return /* binding */ CLARITY_INT_BYTE_SIZE; },\n/* harmony export */   CLARITY_INT_SIZE: function() { return /* binding */ CLARITY_INT_SIZE; },\n/* harmony export */   COINBASE_BYTES_LENGTH: function() { return /* binding */ COINBASE_LENGTH_BYTES; },\n/* harmony export */   COMPRESSED_PUBKEY_LENGTH_BYTES: function() { return /* binding */ COMPRESSED_PUBKEY_LENGTH_BYTES; },\n/* harmony export */   ChainID: function() { return /* binding */ ChainID; },\n/* harmony export */   ClarityVersion: function() { return /* binding */ ClarityVersion; },\n/* harmony export */   DEFAULT_CHAIN_ID: function() { return /* binding */ DEFAULT_CHAIN_ID; },\n/* harmony export */   DEFAULT_CORE_NODE_API_URL: function() { return /* binding */ DEFAULT_CORE_NODE_API_URL; },\n/* harmony export */   DEFAULT_TRANSACTION_VERSION: function() { return /* binding */ DEFAULT_TRANSACTION_VERSION; },\n/* harmony export */   FungibleConditionCode: function() { return /* binding */ FungibleConditionCode; },\n/* harmony export */   MAX_STRING_LENGTH_BYTES: function() { return /* binding */ MAX_STRING_LENGTH_BYTES; },\n/* harmony export */   MEMO_MAX_LENGTH_BYTES: function() { return /* binding */ MEMO_MAX_LENGTH_BYTES; },\n/* harmony export */   NonFungibleConditionCode: function() { return /* binding */ NonFungibleConditionCode; },\n/* harmony export */   PayloadType: function() { return /* binding */ PayloadType; },\n/* harmony export */   PostConditionMode: function() { return /* binding */ PostConditionMode; },\n/* harmony export */   PostConditionPrincipalID: function() { return /* binding */ PostConditionPrincipalID; },\n/* harmony export */   PostConditionType: function() { return /* binding */ PostConditionType; },\n/* harmony export */   PubKeyEncoding: function() { return /* binding */ PubKeyEncoding; },\n/* harmony export */   RECOVERABLE_ECDSA_SIG_LENGTH_BYTES: function() { return /* binding */ RECOVERABLE_ECDSA_SIG_LENGTH_BYTES; },\n/* harmony export */   StacksMessageType: function() { return /* binding */ StacksMessageType; },\n/* harmony export */   TransactionVersion: function() { return /* binding */ TransactionVersion; },\n/* harmony export */   TxRejectedReason: function() { return /* binding */ TxRejectedReason; },\n/* harmony export */   UNCOMPRESSED_PUBKEY_LENGTH_BYTES: function() { return /* binding */ UNCOMPRESSED_PUBKEY_LENGTH_BYTES; },\n/* harmony export */   anchorModeFromNameOrValue: function() { return /* binding */ anchorModeFromNameOrValue; },\n/* harmony export */   whenMessageType: function() { return /* binding */ whenMessageType; }\n/* harmony export */ });\nvar ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst CLARITY_INT_BYTE_SIZE = 16;\nconst COINBASE_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\nvar StacksMessageType;\n(function (StacksMessageType) {\n    StacksMessageType[StacksMessageType[\"Address\"] = 0] = \"Address\";\n    StacksMessageType[StacksMessageType[\"Principal\"] = 1] = \"Principal\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedString\"] = 2] = \"LengthPrefixedString\";\n    StacksMessageType[StacksMessageType[\"MemoString\"] = 3] = \"MemoString\";\n    StacksMessageType[StacksMessageType[\"AssetInfo\"] = 4] = \"AssetInfo\";\n    StacksMessageType[StacksMessageType[\"PostCondition\"] = 5] = \"PostCondition\";\n    StacksMessageType[StacksMessageType[\"PublicKey\"] = 6] = \"PublicKey\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedList\"] = 7] = \"LengthPrefixedList\";\n    StacksMessageType[StacksMessageType[\"Payload\"] = 8] = \"Payload\";\n    StacksMessageType[StacksMessageType[\"MessageSignature\"] = 9] = \"MessageSignature\";\n    StacksMessageType[StacksMessageType[\"StructuredDataSignature\"] = 10] = \"StructuredDataSignature\";\n    StacksMessageType[StacksMessageType[\"TransactionAuthField\"] = 11] = \"TransactionAuthField\";\n})(StacksMessageType || (StacksMessageType = {}));\nfunction whenMessageType(messageType) {\n    return (messageTypeMap) => messageTypeMap[messageType];\n}\nvar PayloadType;\n(function (PayloadType) {\n    PayloadType[PayloadType[\"TokenTransfer\"] = 0] = \"TokenTransfer\";\n    PayloadType[PayloadType[\"SmartContract\"] = 1] = \"SmartContract\";\n    PayloadType[PayloadType[\"VersionedSmartContract\"] = 6] = \"VersionedSmartContract\";\n    PayloadType[PayloadType[\"ContractCall\"] = 2] = \"ContractCall\";\n    PayloadType[PayloadType[\"PoisonMicroblock\"] = 3] = \"PoisonMicroblock\";\n    PayloadType[PayloadType[\"Coinbase\"] = 4] = \"Coinbase\";\n    PayloadType[PayloadType[\"CoinbaseToAltRecipient\"] = 5] = \"CoinbaseToAltRecipient\";\n})(PayloadType || (PayloadType = {}));\nvar ClarityVersion;\n(function (ClarityVersion) {\n    ClarityVersion[ClarityVersion[\"Clarity1\"] = 1] = \"Clarity1\";\n    ClarityVersion[ClarityVersion[\"Clarity2\"] = 2] = \"Clarity2\";\n})(ClarityVersion || (ClarityVersion = {}));\nvar AnchorMode;\n(function (AnchorMode) {\n    AnchorMode[AnchorMode[\"OnChainOnly\"] = 1] = \"OnChainOnly\";\n    AnchorMode[AnchorMode[\"OffChainOnly\"] = 2] = \"OffChainOnly\";\n    AnchorMode[AnchorMode[\"Any\"] = 3] = \"Any\";\n})(AnchorMode || (AnchorMode = {}));\nconst AnchorModeNames = ['onChainOnly', 'offChainOnly', 'any'];\nconst AnchorModeMap = {\n    [AnchorModeNames[0]]: AnchorMode.OnChainOnly,\n    [AnchorModeNames[1]]: AnchorMode.OffChainOnly,\n    [AnchorModeNames[2]]: AnchorMode.Any,\n    [AnchorMode.OnChainOnly]: AnchorMode.OnChainOnly,\n    [AnchorMode.OffChainOnly]: AnchorMode.OffChainOnly,\n    [AnchorMode.Any]: AnchorMode.Any,\n};\nfunction anchorModeFromNameOrValue(mode) {\n    if (mode in AnchorModeMap) {\n        return AnchorModeMap[mode];\n    }\n    throw new Error(`Invalid anchor mode \"${mode}\", must be one of: ${AnchorModeNames.join(', ')}`);\n}\nvar TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\nvar PostConditionMode;\n(function (PostConditionMode) {\n    PostConditionMode[PostConditionMode[\"Allow\"] = 1] = \"Allow\";\n    PostConditionMode[PostConditionMode[\"Deny\"] = 2] = \"Deny\";\n})(PostConditionMode || (PostConditionMode = {}));\nvar PostConditionType;\n(function (PostConditionType) {\n    PostConditionType[PostConditionType[\"STX\"] = 0] = \"STX\";\n    PostConditionType[PostConditionType[\"Fungible\"] = 1] = \"Fungible\";\n    PostConditionType[PostConditionType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(PostConditionType || (PostConditionType = {}));\nvar AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"Standard\"] = 4] = \"Standard\";\n    AuthType[AuthType[\"Sponsored\"] = 5] = \"Sponsored\";\n})(AuthType || (AuthType = {}));\nvar AddressHashMode;\n(function (AddressHashMode) {\n    AddressHashMode[AddressHashMode[\"SerializeP2PKH\"] = 0] = \"SerializeP2PKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2SH\"] = 1] = \"SerializeP2SH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WPKH\"] = 2] = \"SerializeP2WPKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WSH\"] = 3] = \"SerializeP2WSH\";\n})(AddressHashMode || (AddressHashMode = {}));\nvar AddressVersion;\n(function (AddressVersion) {\n    AddressVersion[AddressVersion[\"MainnetSingleSig\"] = 22] = \"MainnetSingleSig\";\n    AddressVersion[AddressVersion[\"MainnetMultiSig\"] = 20] = \"MainnetMultiSig\";\n    AddressVersion[AddressVersion[\"TestnetSingleSig\"] = 26] = \"TestnetSingleSig\";\n    AddressVersion[AddressVersion[\"TestnetMultiSig\"] = 21] = \"TestnetMultiSig\";\n})(AddressVersion || (AddressVersion = {}));\nvar PubKeyEncoding;\n(function (PubKeyEncoding) {\n    PubKeyEncoding[PubKeyEncoding[\"Compressed\"] = 0] = \"Compressed\";\n    PubKeyEncoding[PubKeyEncoding[\"Uncompressed\"] = 1] = \"Uncompressed\";\n})(PubKeyEncoding || (PubKeyEncoding = {}));\nvar FungibleConditionCode;\n(function (FungibleConditionCode) {\n    FungibleConditionCode[FungibleConditionCode[\"Equal\"] = 1] = \"Equal\";\n    FungibleConditionCode[FungibleConditionCode[\"Greater\"] = 2] = \"Greater\";\n    FungibleConditionCode[FungibleConditionCode[\"GreaterEqual\"] = 3] = \"GreaterEqual\";\n    FungibleConditionCode[FungibleConditionCode[\"Less\"] = 4] = \"Less\";\n    FungibleConditionCode[FungibleConditionCode[\"LessEqual\"] = 5] = \"LessEqual\";\n})(FungibleConditionCode || (FungibleConditionCode = {}));\nvar NonFungibleConditionCode;\n(function (NonFungibleConditionCode) {\n    NonFungibleConditionCode[NonFungibleConditionCode[\"Sends\"] = 16] = \"Sends\";\n    NonFungibleConditionCode[NonFungibleConditionCode[\"DoesNotSend\"] = 17] = \"DoesNotSend\";\n})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));\nvar PostConditionPrincipalID;\n(function (PostConditionPrincipalID) {\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Origin\"] = 1] = \"Origin\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Standard\"] = 2] = \"Standard\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Contract\"] = 3] = \"Contract\";\n})(PostConditionPrincipalID || (PostConditionPrincipalID = {}));\nvar AssetType;\n(function (AssetType) {\n    AssetType[AssetType[\"STX\"] = 0] = \"STX\";\n    AssetType[AssetType[\"Fungible\"] = 1] = \"Fungible\";\n    AssetType[AssetType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(AssetType || (AssetType = {}));\nvar TxRejectedReason;\n(function (TxRejectedReason) {\n    TxRejectedReason[\"Serialization\"] = \"Serialization\";\n    TxRejectedReason[\"Deserialization\"] = \"Deserialization\";\n    TxRejectedReason[\"SignatureValidation\"] = \"SignatureValidation\";\n    TxRejectedReason[\"FeeTooLow\"] = \"FeeTooLow\";\n    TxRejectedReason[\"BadNonce\"] = \"BadNonce\";\n    TxRejectedReason[\"NotEnoughFunds\"] = \"NotEnoughFunds\";\n    TxRejectedReason[\"NoSuchContract\"] = \"NoSuchContract\";\n    TxRejectedReason[\"NoSuchPublicFunction\"] = \"NoSuchPublicFunction\";\n    TxRejectedReason[\"BadFunctionArgument\"] = \"BadFunctionArgument\";\n    TxRejectedReason[\"ContractAlreadyExists\"] = \"ContractAlreadyExists\";\n    TxRejectedReason[\"PoisonMicroblocksDoNotConflict\"] = \"PoisonMicroblocksDoNotConflict\";\n    TxRejectedReason[\"PoisonMicroblockHasUnknownPubKeyHash\"] = \"PoisonMicroblockHasUnknownPubKeyHash\";\n    TxRejectedReason[\"PoisonMicroblockIsInvalid\"] = \"PoisonMicroblockIsInvalid\";\n    TxRejectedReason[\"BadAddressVersionByte\"] = \"BadAddressVersionByte\";\n    TxRejectedReason[\"NoCoinbaseViaMempool\"] = \"NoCoinbaseViaMempool\";\n    TxRejectedReason[\"ServerFailureNoSuchChainTip\"] = \"ServerFailureNoSuchChainTip\";\n    TxRejectedReason[\"ServerFailureDatabase\"] = \"ServerFailureDatabase\";\n    TxRejectedReason[\"ServerFailureOther\"] = \"ServerFailureOther\";\n})(TxRejectedReason || (TxRejectedReason = {}));\n\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/errors.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeserializationError: function() { return /* binding */ DeserializationError; },\n/* harmony export */   NoEstimateAvailableError: function() { return /* binding */ NoEstimateAvailableError; },\n/* harmony export */   NotImplementedError: function() { return /* binding */ NotImplementedError; },\n/* harmony export */   SerializationError: function() { return /* binding */ SerializationError; },\n/* harmony export */   SigningError: function() { return /* binding */ SigningError; },\n/* harmony export */   VerificationError: function() { return /* binding */ VerificationError; }\n/* harmony export */ });\nclass TransactionError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.name = this.constructor.name;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nclass SerializationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nclass DeserializationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nclass NoEstimateAvailableError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nclass NotImplementedError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nclass SigningError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\nclass VerificationError extends TransactionError {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vZXJyb3JzLmpzPzE4NDIiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHJhbnNhY3Rpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgY2xhc3MgU2VyaWFsaXphdGlvbkVycm9yIGV4dGVuZHMgVHJhbnNhY3Rpb25FcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRGVzZXJpYWxpemF0aW9uRXJyb3IgZXh0ZW5kcyBUcmFuc2FjdGlvbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOb0VzdGltYXRlQXZhaWxhYmxlRXJyb3IgZXh0ZW5kcyBUcmFuc2FjdGlvbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOb3RJbXBsZW1lbnRlZEVycm9yIGV4dGVuZHMgVHJhbnNhY3Rpb25FcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgU2lnbmluZ0Vycm9yIGV4dGVuZHMgVHJhbnNhY3Rpb25FcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVmVyaWZpY2F0aW9uRXJyb3IgZXh0ZW5kcyBUcmFuc2FjdGlvbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/keys.js":
/*!************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/keys.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressPublicKey: function() { return /* binding */ compressPublicKey; },\n/* harmony export */   createStacksPrivateKey: function() { return /* binding */ createStacksPrivateKey; },\n/* harmony export */   createStacksPublicKey: function() { return /* binding */ createStacksPublicKey; },\n/* harmony export */   deserializePublicKey: function() { return /* binding */ deserializePublicKey; },\n/* harmony export */   getAddressFromPrivateKey: function() { return /* binding */ getAddressFromPrivateKey; },\n/* harmony export */   getAddressFromPublicKey: function() { return /* binding */ getAddressFromPublicKey; },\n/* harmony export */   getPublicKey: function() { return /* binding */ getPublicKey; },\n/* harmony export */   isCompressed: function() { return /* binding */ isCompressed; },\n/* harmony export */   makeRandomPrivKey: function() { return /* binding */ makeRandomPrivKey; },\n/* harmony export */   privateKeyToString: function() { return /* binding */ privateKeyToString; },\n/* harmony export */   pubKeyfromPrivKey: function() { return /* binding */ pubKeyfromPrivKey; },\n/* harmony export */   publicKeyFromBytes: function() { return /* binding */ publicKeyFromBytes; },\n/* harmony export */   publicKeyFromSignatureRsv: function() { return /* binding */ publicKeyFromSignatureRsv; },\n/* harmony export */   publicKeyFromSignatureVrs: function() { return /* binding */ publicKeyFromSignatureVrs; },\n/* harmony export */   publicKeyToAddress: function() { return /* binding */ publicKeyToAddress; },\n/* harmony export */   publicKeyToString: function() { return /* binding */ publicKeyToString; },\n/* harmony export */   serializePublicKey: function() { return /* binding */ serializePublicKey; },\n/* harmony export */   signMessageHashRsv: function() { return /* binding */ signMessageHashRsv; },\n/* harmony export */   signWithKey: function() { return /* binding */ signWithKey; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/signatures.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/keys.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/constants.js\");\n/* harmony import */ var c32check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! c32check */ \"(app-pages-browser)/./node_modules/c32check/lib/index.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js\");\n\n\n\n\n\n\n\n\n_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac.create(_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nfunction getAddressFromPrivateKey(privateKey, transactionVersion = _constants__WEBPACK_IMPORTED_MODULE_4__.TransactionVersion.Mainnet) {\n    const pubKey = pubKeyfromPrivKey(privateKey);\n    return getAddressFromPublicKey(pubKey.data, transactionVersion);\n}\nfunction getAddressFromPublicKey(publicKey, transactionVersion = _constants__WEBPACK_IMPORTED_MODULE_4__.TransactionVersion.Mainnet) {\n    publicKey = typeof publicKey === 'string' ? publicKey : (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(publicKey);\n    const addrVer = (0,_common__WEBPACK_IMPORTED_MODULE_6__.addressHashModeToVersion)(_constants__WEBPACK_IMPORTED_MODULE_4__.AddressHashMode.SerializeP2PKH, transactionVersion);\n    const addr = (0,_common__WEBPACK_IMPORTED_MODULE_6__.addressFromVersionHash)(addrVer, (0,_utils__WEBPACK_IMPORTED_MODULE_7__.hashP2PKH)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.hexToBytes)(publicKey)));\n    const addrString = (0,_common__WEBPACK_IMPORTED_MODULE_6__.addressToString)(addr);\n    return addrString;\n}\nfunction createStacksPublicKey(key) {\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_4__.StacksMessageType.PublicKey,\n        data: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.hexToBytes)(key),\n    };\n}\nfunction publicKeyFromSignatureVrs(messageHash, messageSignature, pubKeyEncoding = _constants__WEBPACK_IMPORTED_MODULE_4__.PubKeyEncoding.Compressed) {\n    const parsedSignature = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.parseRecoverableSignatureVrs)(messageSignature.data);\n    const signature = new _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Signature((0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.hexToBigInt)(parsedSignature.r), (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.hexToBigInt)(parsedSignature.s));\n    const point = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Point.fromSignature(messageHash, signature, parsedSignature.recoveryId);\n    const compressed = pubKeyEncoding === _constants__WEBPACK_IMPORTED_MODULE_4__.PubKeyEncoding.Compressed;\n    return point.toHex(compressed);\n}\nfunction publicKeyFromSignatureRsv(messageHash, messageSignature, pubKeyEncoding = _constants__WEBPACK_IMPORTED_MODULE_4__.PubKeyEncoding.Compressed) {\n    return publicKeyFromSignatureVrs(messageHash, { ...messageSignature, data: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.signatureRsvToVrs)(messageSignature.data) }, pubKeyEncoding);\n}\nfunction publicKeyFromBytes(data) {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_4__.StacksMessageType.PublicKey, data };\n}\nfunction isCompressed(key) {\n    return !(0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(key.data).startsWith('04');\n}\nfunction publicKeyToString(key) {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(key.data);\n}\nfunction serializePublicKey(key) {\n    return key.data.slice();\n}\nfunction pubKeyfromPrivKey(privateKey) {\n    const privKey = createStacksPrivateKey(privateKey);\n    const publicKey = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.getPublicKey)(privKey.data.slice(0, 32), privKey.compressed);\n    return createStacksPublicKey((0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(publicKey));\n}\nfunction compressPublicKey(publicKey) {\n    const hex = typeof publicKey === 'string' ? publicKey : (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(publicKey);\n    const compressed = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Point.fromHex(hex).toHex(true);\n    return createStacksPublicKey(compressed);\n}\nfunction deserializePublicKey(bytesReader) {\n    const fieldId = bytesReader.readUInt8();\n    const keyLength = fieldId === 4 ? _constants__WEBPACK_IMPORTED_MODULE_4__.UNCOMPRESSED_PUBKEY_LENGTH_BYTES : _constants__WEBPACK_IMPORTED_MODULE_4__.COMPRESSED_PUBKEY_LENGTH_BYTES;\n    return publicKeyFromBytes((0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.concatArray)([fieldId, bytesReader.readBytes(keyLength)]));\n}\nfunction createStacksPrivateKey(key) {\n    const data = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_9__.privateKeyToBytes)(key);\n    const compressed = data.length == _stacks_common__WEBPACK_IMPORTED_MODULE_10__.PRIVATE_KEY_COMPRESSED_LENGTH;\n    return { data, compressed };\n}\nfunction makeRandomPrivKey() {\n    return createStacksPrivateKey(_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.utils.randomPrivateKey());\n}\nfunction signWithKey(privateKey, messageHash) {\n    const [rawSignature, recoveryId] = (0,_noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.signSync)(messageHash, privateKey.data.slice(0, 32), {\n        canonical: true,\n        recovered: true,\n    });\n    if (recoveryId == null) {\n        throw new Error('No signature recoveryId received');\n    }\n    const recoveryIdHex = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.intToHex)(recoveryId, 1);\n    const recoverableSignatureString = recoveryIdHex + _noble_secp256k1__WEBPACK_IMPORTED_MODULE_2__.Signature.fromHex(rawSignature).toCompactHex();\n    return (0,_common__WEBPACK_IMPORTED_MODULE_6__.createMessageSignature)(recoverableSignatureString);\n}\nfunction signMessageHashRsv({ messageHash, privateKey, }) {\n    const messageSignature = signWithKey(privateKey, messageHash);\n    return { ...messageSignature, data: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_8__.signatureVrsToRsv)(messageSignature.data) };\n}\nfunction getPublicKey(privateKey) {\n    return pubKeyfromPrivKey(privateKey.data);\n}\nfunction privateKeyToString(privateKey) {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(privateKey.data);\n}\nfunction publicKeyToAddress(version, publicKey) {\n    return (0,c32check__WEBPACK_IMPORTED_MODULE_3__.c32address)(version, (0,_stacks_common__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)((0,_utils__WEBPACK_IMPORTED_MODULE_7__.hash160)(publicKey.data)));\n}\n//# sourceMappingURL=keys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9rZXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUNJO0FBQzJEO0FBQzBHO0FBQzdLO0FBQ2dGO0FBQ2tEO0FBQzNIO0FBQzdDLG1EQUFLO0FBQ0wsY0FBYyxvREFBSSxRQUFRLHdEQUFNO0FBQ2hDO0FBQ0E7QUFDQTtBQUNPLG1FQUFtRSwwREFBa0I7QUFDNUY7QUFDQTtBQUNBO0FBQ08saUVBQWlFLDBEQUFrQjtBQUMxRiw0REFBNEQsMERBQVU7QUFDdEUsb0JBQW9CLGlFQUF3QixDQUFDLHVEQUFlO0FBQzVELGlCQUFpQiwrREFBc0IsVUFBVSxpREFBUyxDQUFDLDBEQUFVO0FBQ3JFLHVCQUF1Qix3REFBZTtBQUN0QztBQUNBO0FBQ087QUFDUDtBQUNBLGNBQWMseURBQWlCO0FBQy9CLGNBQWMsMERBQVU7QUFDeEI7QUFDQTtBQUNPLG1GQUFtRixzREFBYztBQUN4Ryw0QkFBNEIsNEVBQTRCO0FBQ3hELDBCQUEwQix1REFBUyxDQUFDLDJEQUFXLHFCQUFxQiwyREFBVztBQUMvRSxrQkFBa0IsbURBQUs7QUFDdkIsMENBQTBDLHNEQUFjO0FBQ3hEO0FBQ0E7QUFDTyxtRkFBbUYsc0RBQWM7QUFDeEcsb0RBQW9ELDJCQUEyQixpRUFBaUIseUJBQXlCO0FBQ3pIO0FBQ087QUFDUCxhQUFhLE1BQU0seURBQWlCO0FBQ3BDO0FBQ087QUFDUCxZQUFZLDBEQUFVO0FBQ3RCO0FBQ087QUFDUCxXQUFXLDBEQUFVO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQiw4REFBaUI7QUFDdkMsaUNBQWlDLDBEQUFVO0FBQzNDO0FBQ087QUFDUCw0REFBNEQsMERBQVU7QUFDdEUsdUJBQXVCLG1EQUFLO0FBQzVCO0FBQ0E7QUFDTztBQUNQO0FBQ0Esc0NBQXNDLHdFQUFnQyxHQUFHLHNFQUE4QjtBQUN2Ryw4QkFBOEIsMkRBQVc7QUFDekM7QUFDTztBQUNQLGlCQUFpQixpRUFBaUI7QUFDbEMsc0NBQXNDLDBFQUE2QjtBQUNuRSxhQUFhO0FBQ2I7QUFDTztBQUNQLGtDQUFrQyxtREFBSztBQUN2QztBQUNPO0FBQ1AsdUNBQXVDLDBEQUFRO0FBQy9DO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFRO0FBQ2xDLHVEQUF1RCx1REFBUztBQUNoRSxXQUFXLCtEQUFzQjtBQUNqQztBQUNPLDhCQUE4QiwwQkFBMEI7QUFDL0Q7QUFDQSxhQUFhLDJCQUEyQixpRUFBaUI7QUFDekQ7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQLFdBQVcsMERBQVU7QUFDckI7QUFDTztBQUNQLFdBQVcsb0RBQVUsVUFBVSwwREFBVSxDQUFDLCtDQUFPO0FBQ2pEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdGFja3MvdHJhbnNhY3Rpb25zL2Rpc3QvZXNtL2tleXMuanM/YzBlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBobWFjIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9obWFjJztcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhMjU2JztcbmltcG9ydCB7IGdldFB1YmxpY0tleSBhcyBub2JsZUdldFB1YmxpY0tleSwgUG9pbnQsIFNpZ25hdHVyZSwgc2lnblN5bmMsIHV0aWxzLCB9IGZyb20gJ0Bub2JsZS9zZWNwMjU2azEnO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCwgY29uY2F0QXJyYXksIGhleFRvQmlnSW50LCBoZXhUb0J5dGVzLCBpbnRUb0hleCwgcGFyc2VSZWNvdmVyYWJsZVNpZ25hdHVyZVZycywgcHJpdmF0ZUtleVRvQnl0ZXMsIFBSSVZBVEVfS0VZX0NPTVBSRVNTRURfTEVOR1RILCBzaWduYXR1cmVSc3ZUb1Zycywgc2lnbmF0dXJlVnJzVG9Sc3YsIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuaW1wb3J0IHsgYzMyYWRkcmVzcyB9IGZyb20gJ2MzMmNoZWNrJztcbmltcG9ydCB7IGFkZHJlc3NGcm9tVmVyc2lvbkhhc2gsIGFkZHJlc3NIYXNoTW9kZVRvVmVyc2lvbiwgYWRkcmVzc1RvU3RyaW5nLCBjcmVhdGVNZXNzYWdlU2lnbmF0dXJlLCB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCB7IEFkZHJlc3NIYXNoTW9kZSwgQ09NUFJFU1NFRF9QVUJLRVlfTEVOR1RIX0JZVEVTLCBQdWJLZXlFbmNvZGluZywgU3RhY2tzTWVzc2FnZVR5cGUsIFRyYW5zYWN0aW9uVmVyc2lvbiwgVU5DT01QUkVTU0VEX1BVQktFWV9MRU5HVEhfQllURVMsIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgaGFzaDE2MCwgaGFzaFAyUEtIIH0gZnJvbSAnLi91dGlscyc7XG51dGlscy5obWFjU2hhMjU2U3luYyA9IChrZXksIC4uLm1zZ3MpID0+IHtcbiAgICBjb25zdCBoID0gaG1hYy5jcmVhdGUoc2hhMjU2LCBrZXkpO1xuICAgIG1zZ3MuZm9yRWFjaChtc2cgPT4gaC51cGRhdGUobXNnKSk7XG4gICAgcmV0dXJuIGguZGlnZXN0KCk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFkZHJlc3NGcm9tUHJpdmF0ZUtleShwcml2YXRlS2V5LCB0cmFuc2FjdGlvblZlcnNpb24gPSBUcmFuc2FjdGlvblZlcnNpb24uTWFpbm5ldCkge1xuICAgIGNvbnN0IHB1YktleSA9IHB1YktleWZyb21Qcml2S2V5KHByaXZhdGVLZXkpO1xuICAgIHJldHVybiBnZXRBZGRyZXNzRnJvbVB1YmxpY0tleShwdWJLZXkuZGF0YSwgdHJhbnNhY3Rpb25WZXJzaW9uKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRBZGRyZXNzRnJvbVB1YmxpY0tleShwdWJsaWNLZXksIHRyYW5zYWN0aW9uVmVyc2lvbiA9IFRyYW5zYWN0aW9uVmVyc2lvbi5NYWlubmV0KSB7XG4gICAgcHVibGljS2V5ID0gdHlwZW9mIHB1YmxpY0tleSA9PT0gJ3N0cmluZycgPyBwdWJsaWNLZXkgOiBieXRlc1RvSGV4KHB1YmxpY0tleSk7XG4gICAgY29uc3QgYWRkclZlciA9IGFkZHJlc3NIYXNoTW9kZVRvVmVyc2lvbihBZGRyZXNzSGFzaE1vZGUuU2VyaWFsaXplUDJQS0gsIHRyYW5zYWN0aW9uVmVyc2lvbik7XG4gICAgY29uc3QgYWRkciA9IGFkZHJlc3NGcm9tVmVyc2lvbkhhc2goYWRkclZlciwgaGFzaFAyUEtIKGhleFRvQnl0ZXMocHVibGljS2V5KSkpO1xuICAgIGNvbnN0IGFkZHJTdHJpbmcgPSBhZGRyZXNzVG9TdHJpbmcoYWRkcik7XG4gICAgcmV0dXJuIGFkZHJTdHJpbmc7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhY2tzUHVibGljS2V5KGtleSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLlB1YmxpY0tleSxcbiAgICAgICAgZGF0YTogaGV4VG9CeXRlcyhrZXkpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcHVibGljS2V5RnJvbVNpZ25hdHVyZVZycyhtZXNzYWdlSGFzaCwgbWVzc2FnZVNpZ25hdHVyZSwgcHViS2V5RW5jb2RpbmcgPSBQdWJLZXlFbmNvZGluZy5Db21wcmVzc2VkKSB7XG4gICAgY29uc3QgcGFyc2VkU2lnbmF0dXJlID0gcGFyc2VSZWNvdmVyYWJsZVNpZ25hdHVyZVZycyhtZXNzYWdlU2lnbmF0dXJlLmRhdGEpO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IG5ldyBTaWduYXR1cmUoaGV4VG9CaWdJbnQocGFyc2VkU2lnbmF0dXJlLnIpLCBoZXhUb0JpZ0ludChwYXJzZWRTaWduYXR1cmUucykpO1xuICAgIGNvbnN0IHBvaW50ID0gUG9pbnQuZnJvbVNpZ25hdHVyZShtZXNzYWdlSGFzaCwgc2lnbmF0dXJlLCBwYXJzZWRTaWduYXR1cmUucmVjb3ZlcnlJZCk7XG4gICAgY29uc3QgY29tcHJlc3NlZCA9IHB1YktleUVuY29kaW5nID09PSBQdWJLZXlFbmNvZGluZy5Db21wcmVzc2VkO1xuICAgIHJldHVybiBwb2ludC50b0hleChjb21wcmVzc2VkKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdWJsaWNLZXlGcm9tU2lnbmF0dXJlUnN2KG1lc3NhZ2VIYXNoLCBtZXNzYWdlU2lnbmF0dXJlLCBwdWJLZXlFbmNvZGluZyA9IFB1YktleUVuY29kaW5nLkNvbXByZXNzZWQpIHtcbiAgICByZXR1cm4gcHVibGljS2V5RnJvbVNpZ25hdHVyZVZycyhtZXNzYWdlSGFzaCwgeyAuLi5tZXNzYWdlU2lnbmF0dXJlLCBkYXRhOiBzaWduYXR1cmVSc3ZUb1ZycyhtZXNzYWdlU2lnbmF0dXJlLmRhdGEpIH0sIHB1YktleUVuY29kaW5nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdWJsaWNLZXlGcm9tQnl0ZXMoZGF0YSkge1xuICAgIHJldHVybiB7IHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLlB1YmxpY0tleSwgZGF0YSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcHJlc3NlZChrZXkpIHtcbiAgICByZXR1cm4gIWJ5dGVzVG9IZXgoa2V5LmRhdGEpLnN0YXJ0c1dpdGgoJzA0Jyk7XG59XG5leHBvcnQgZnVuY3Rpb24gcHVibGljS2V5VG9TdHJpbmcoa2V5KSB7XG4gICAgcmV0dXJuIGJ5dGVzVG9IZXgoa2V5LmRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVB1YmxpY0tleShrZXkpIHtcbiAgICByZXR1cm4ga2V5LmRhdGEuc2xpY2UoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdWJLZXlmcm9tUHJpdktleShwcml2YXRlS2V5KSB7XG4gICAgY29uc3QgcHJpdktleSA9IGNyZWF0ZVN0YWNrc1ByaXZhdGVLZXkocHJpdmF0ZUtleSk7XG4gICAgY29uc3QgcHVibGljS2V5ID0gbm9ibGVHZXRQdWJsaWNLZXkocHJpdktleS5kYXRhLnNsaWNlKDAsIDMyKSwgcHJpdktleS5jb21wcmVzc2VkKTtcbiAgICByZXR1cm4gY3JlYXRlU3RhY2tzUHVibGljS2V5KGJ5dGVzVG9IZXgocHVibGljS2V5KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3NQdWJsaWNLZXkocHVibGljS2V5KSB7XG4gICAgY29uc3QgaGV4ID0gdHlwZW9mIHB1YmxpY0tleSA9PT0gJ3N0cmluZycgPyBwdWJsaWNLZXkgOiBieXRlc1RvSGV4KHB1YmxpY0tleSk7XG4gICAgY29uc3QgY29tcHJlc3NlZCA9IFBvaW50LmZyb21IZXgoaGV4KS50b0hleCh0cnVlKTtcbiAgICByZXR1cm4gY3JlYXRlU3RhY2tzUHVibGljS2V5KGNvbXByZXNzZWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplUHVibGljS2V5KGJ5dGVzUmVhZGVyKSB7XG4gICAgY29uc3QgZmllbGRJZCA9IGJ5dGVzUmVhZGVyLnJlYWRVSW50OCgpO1xuICAgIGNvbnN0IGtleUxlbmd0aCA9IGZpZWxkSWQgPT09IDQgPyBVTkNPTVBSRVNTRURfUFVCS0VZX0xFTkdUSF9CWVRFUyA6IENPTVBSRVNTRURfUFVCS0VZX0xFTkdUSF9CWVRFUztcbiAgICByZXR1cm4gcHVibGljS2V5RnJvbUJ5dGVzKGNvbmNhdEFycmF5KFtmaWVsZElkLCBieXRlc1JlYWRlci5yZWFkQnl0ZXMoa2V5TGVuZ3RoKV0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGFja3NQcml2YXRlS2V5KGtleSkge1xuICAgIGNvbnN0IGRhdGEgPSBwcml2YXRlS2V5VG9CeXRlcyhrZXkpO1xuICAgIGNvbnN0IGNvbXByZXNzZWQgPSBkYXRhLmxlbmd0aCA9PSBQUklWQVRFX0tFWV9DT01QUkVTU0VEX0xFTkdUSDtcbiAgICByZXR1cm4geyBkYXRhLCBjb21wcmVzc2VkIH07XG59XG5leHBvcnQgZnVuY3Rpb24gbWFrZVJhbmRvbVByaXZLZXkoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVN0YWNrc1ByaXZhdGVLZXkodXRpbHMucmFuZG9tUHJpdmF0ZUtleSgpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzaWduV2l0aEtleShwcml2YXRlS2V5LCBtZXNzYWdlSGFzaCkge1xuICAgIGNvbnN0IFtyYXdTaWduYXR1cmUsIHJlY292ZXJ5SWRdID0gc2lnblN5bmMobWVzc2FnZUhhc2gsIHByaXZhdGVLZXkuZGF0YS5zbGljZSgwLCAzMiksIHtcbiAgICAgICAgY2Fub25pY2FsOiB0cnVlLFxuICAgICAgICByZWNvdmVyZWQ6IHRydWUsXG4gICAgfSk7XG4gICAgaWYgKHJlY292ZXJ5SWQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHNpZ25hdHVyZSByZWNvdmVyeUlkIHJlY2VpdmVkJyk7XG4gICAgfVxuICAgIGNvbnN0IHJlY292ZXJ5SWRIZXggPSBpbnRUb0hleChyZWNvdmVyeUlkLCAxKTtcbiAgICBjb25zdCByZWNvdmVyYWJsZVNpZ25hdHVyZVN0cmluZyA9IHJlY292ZXJ5SWRIZXggKyBTaWduYXR1cmUuZnJvbUhleChyYXdTaWduYXR1cmUpLnRvQ29tcGFjdEhleCgpO1xuICAgIHJldHVybiBjcmVhdGVNZXNzYWdlU2lnbmF0dXJlKHJlY292ZXJhYmxlU2lnbmF0dXJlU3RyaW5nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzaWduTWVzc2FnZUhhc2hSc3YoeyBtZXNzYWdlSGFzaCwgcHJpdmF0ZUtleSwgfSkge1xuICAgIGNvbnN0IG1lc3NhZ2VTaWduYXR1cmUgPSBzaWduV2l0aEtleShwcml2YXRlS2V5LCBtZXNzYWdlSGFzaCk7XG4gICAgcmV0dXJuIHsgLi4ubWVzc2FnZVNpZ25hdHVyZSwgZGF0YTogc2lnbmF0dXJlVnJzVG9Sc3YobWVzc2FnZVNpZ25hdHVyZS5kYXRhKSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFB1YmxpY0tleShwcml2YXRlS2V5KSB7XG4gICAgcmV0dXJuIHB1YktleWZyb21Qcml2S2V5KHByaXZhdGVLZXkuZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJpdmF0ZUtleVRvU3RyaW5nKHByaXZhdGVLZXkpIHtcbiAgICByZXR1cm4gYnl0ZXNUb0hleChwcml2YXRlS2V5LmRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHB1YmxpY0tleVRvQWRkcmVzcyh2ZXJzaW9uLCBwdWJsaWNLZXkpIHtcbiAgICByZXR1cm4gYzMyYWRkcmVzcyh2ZXJzaW9uLCBieXRlc1RvSGV4KGhhc2gxNjAocHVibGljS2V5LmRhdGEpKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/payload.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/payload.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCoinbasePayload: function() { return /* binding */ createCoinbasePayload; },\n/* harmony export */   createContractCallPayload: function() { return /* binding */ createContractCallPayload; },\n/* harmony export */   createPoisonPayload: function() { return /* binding */ createPoisonPayload; },\n/* harmony export */   createSmartContractPayload: function() { return /* binding */ createSmartContractPayload; },\n/* harmony export */   createTokenTransferPayload: function() { return /* binding */ createTokenTransferPayload; },\n/* harmony export */   deserializePayload: function() { return /* binding */ deserializePayload; },\n/* harmony export */   isCoinbasePayload: function() { return /* binding */ isCoinbasePayload; },\n/* harmony export */   isContractCallPayload: function() { return /* binding */ isContractCallPayload; },\n/* harmony export */   isPoisonPayload: function() { return /* binding */ isPoisonPayload; },\n/* harmony export */   isSmartContractPayload: function() { return /* binding */ isSmartContractPayload; },\n/* harmony export */   isTokenTransferPayload: function() { return /* binding */ isTokenTransferPayload; },\n/* harmony export */   serializePayload: function() { return /* binding */ serializePayload; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/buffer.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var _clarity___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clarity/ */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js\");\n/* harmony import */ var _clarity___WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clarity/ */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js\");\n/* harmony import */ var _clarity_types_principalCV__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clarity/types/principalCV */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/types/principalCV.js\");\n/* harmony import */ var _postcondition_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./postcondition-types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/types.js\");\n\n\n\n\n\n\nfunction isTokenTransferPayload(p) {\n    return p.payloadType === _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.TokenTransfer;\n}\nfunction isContractCallPayload(p) {\n    return p.payloadType === _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.ContractCall;\n}\nfunction isSmartContractPayload(p) {\n    return p.payloadType === _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.SmartContract;\n}\nfunction isPoisonPayload(p) {\n    return p.payloadType === _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.PoisonMicroblock;\n}\nfunction isCoinbasePayload(p) {\n    return p.payloadType === _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.Coinbase;\n}\nfunction createTokenTransferPayload(recipient, amount, memo) {\n    if (typeof recipient === 'string') {\n        recipient = (0,_clarity_types_principalCV__WEBPACK_IMPORTED_MODULE_1__.principalCV)(recipient);\n    }\n    if (typeof memo === 'string') {\n        memo = (0,_types__WEBPACK_IMPORTED_MODULE_2__.createMemoString)(memo);\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n        payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.TokenTransfer,\n        recipient,\n        amount: (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.intToBigInt)(amount, false),\n        memo: memo ?? (0,_types__WEBPACK_IMPORTED_MODULE_2__.createMemoString)(''),\n    };\n}\nfunction createContractCallPayload(contractAddress, contractName, functionName, functionArgs) {\n    if (typeof contractAddress === 'string') {\n        contractAddress = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_4__.createAddress)(contractAddress);\n    }\n    if (typeof contractName === 'string') {\n        contractName = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_4__.createLPString)(contractName);\n    }\n    if (typeof functionName === 'string') {\n        functionName = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_4__.createLPString)(functionName);\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n        payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.ContractCall,\n        contractAddress,\n        contractName,\n        functionName,\n        functionArgs,\n    };\n}\nfunction createSmartContractPayload(contractName, codeBody, clarityVersion) {\n    if (typeof contractName === 'string') {\n        contractName = (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_4__.createLPString)(contractName);\n    }\n    if (typeof codeBody === 'string') {\n        codeBody = (0,_types__WEBPACK_IMPORTED_MODULE_2__.codeBodyString)(codeBody);\n    }\n    if (typeof clarityVersion === 'number') {\n        return {\n            type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n            payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.VersionedSmartContract,\n            clarityVersion,\n            contractName,\n            codeBody,\n        };\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n        payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.SmartContract,\n        contractName,\n        codeBody,\n    };\n}\nfunction createPoisonPayload() {\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload, payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.PoisonMicroblock };\n}\nfunction createCoinbasePayload(coinbaseBytes, altRecipient) {\n    if (coinbaseBytes.byteLength != _constants__WEBPACK_IMPORTED_MODULE_0__.COINBASE_BYTES_LENGTH) {\n        throw Error(`Coinbase buffer size must be ${_constants__WEBPACK_IMPORTED_MODULE_0__.COINBASE_BYTES_LENGTH} bytes`);\n    }\n    if (altRecipient != undefined) {\n        return {\n            type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n            payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.CoinbaseToAltRecipient,\n            coinbaseBytes,\n            recipient: altRecipient,\n        };\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload,\n        payloadType: _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.Coinbase,\n        coinbaseBytes,\n    };\n}\nfunction serializePayload(payload) {\n    const bytesArray = [];\n    bytesArray.push(payload.payloadType);\n    switch (payload.payloadType) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.TokenTransfer:\n            bytesArray.push((0,_clarity___WEBPACK_IMPORTED_MODULE_5__.serializeCV)(payload.recipient));\n            bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.intToBytes)(payload.amount, false, 8));\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.memo));\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.ContractCall:\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.contractAddress));\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.contractName));\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.functionName));\n            const numArgs = new Uint8Array(4);\n            (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.writeUInt32BE)(numArgs, payload.functionArgs.length, 0);\n            bytesArray.push(numArgs);\n            payload.functionArgs.forEach(arg => {\n                bytesArray.push((0,_clarity___WEBPACK_IMPORTED_MODULE_5__.serializeCV)(arg));\n            });\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.SmartContract:\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.contractName));\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.codeBody));\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.VersionedSmartContract:\n            bytesArray.push(payload.clarityVersion);\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.contractName));\n            bytesArray.push((0,_types__WEBPACK_IMPORTED_MODULE_2__.serializeStacksMessage)(payload.codeBody));\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.PoisonMicroblock:\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.Coinbase:\n            bytesArray.push(payload.coinbaseBytes);\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.CoinbaseToAltRecipient:\n            bytesArray.push(payload.coinbaseBytes);\n            bytesArray.push((0,_clarity___WEBPACK_IMPORTED_MODULE_5__.serializeCV)(payload.recipient));\n            break;\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.concatArray)(bytesArray);\n}\nfunction deserializePayload(bytesReader) {\n    const payloadType = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType, n => {\n        throw new Error(`Cannot recognize PayloadType: ${n}`);\n    });\n    switch (payloadType) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.TokenTransfer:\n            const recipient = (0,_clarity___WEBPACK_IMPORTED_MODULE_7__[\"default\"])(bytesReader);\n            const amount = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_3__.intToBigInt)(bytesReader.readBytes(8), false);\n            const memo = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeMemoString)(bytesReader);\n            return createTokenTransferPayload(recipient, amount, memo);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.ContractCall:\n            const contractAddress = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeAddress)(bytesReader);\n            const contractCallName = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader);\n            const functionName = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader);\n            const functionArgs = [];\n            const numberOfArgs = bytesReader.readUInt32BE();\n            for (let i = 0; i < numberOfArgs; i++) {\n                const clarityValue = (0,_clarity___WEBPACK_IMPORTED_MODULE_7__[\"default\"])(bytesReader);\n                functionArgs.push(clarityValue);\n            }\n            return createContractCallPayload(contractAddress, contractCallName, functionName, functionArgs);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.SmartContract:\n            const smartContractName = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader);\n            const codeBody = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader, 4, 100000);\n            return createSmartContractPayload(smartContractName, codeBody);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.VersionedSmartContract: {\n            const clarityVersion = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.ClarityVersion, n => {\n                throw new Error(`Cannot recognize ClarityVersion: ${n}`);\n            });\n            const smartContractName = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader);\n            const codeBody = (0,_types__WEBPACK_IMPORTED_MODULE_2__.deserializeLPString)(bytesReader, 4, 100000);\n            return createSmartContractPayload(smartContractName, codeBody, clarityVersion);\n        }\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.PoisonMicroblock:\n            return createPoisonPayload();\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.Coinbase:\n            const coinbaseBytes = bytesReader.readBytes(_constants__WEBPACK_IMPORTED_MODULE_0__.COINBASE_BYTES_LENGTH);\n            return createCoinbasePayload(coinbaseBytes);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PayloadType.CoinbaseToAltRecipient:\n            const coinbaseToAltRecipientBuffer = bytesReader.readBytes(_constants__WEBPACK_IMPORTED_MODULE_0__.COINBASE_BYTES_LENGTH);\n            const altRecipient = (0,_clarity___WEBPACK_IMPORTED_MODULE_7__[\"default\"])(bytesReader);\n            return createCoinbasePayload(coinbaseToAltRecipientBuffer, altRecipient);\n    }\n}\n//# sourceMappingURL=payload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/payload.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/postcondition-types.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAddress: function() { return /* binding */ createAddress; },\n/* harmony export */   createAssetInfo: function() { return /* binding */ createAssetInfo; },\n/* harmony export */   createContractPrincipal: function() { return /* binding */ createContractPrincipal; },\n/* harmony export */   createLPString: function() { return /* binding */ createLPString; },\n/* harmony export */   createStandardPrincipal: function() { return /* binding */ createStandardPrincipal; },\n/* harmony export */   parseAssetInfoString: function() { return /* binding */ parseAssetInfoString; },\n/* harmony export */   parsePrincipalString: function() { return /* binding */ parsePrincipalString; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var c32check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! c32check */ \"(app-pages-browser)/./node_modules/c32check/lib/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js\");\n\n\n\nfunction parseAssetInfoString(id) {\n    const [assetAddress, assetContractName, assetTokenName] = id.split(/\\.|::/);\n    const assetInfo = createAssetInfo(assetAddress, assetContractName, assetTokenName);\n    return assetInfo;\n}\nfunction createLPString(content, lengthPrefixBytes, maxLengthBytes) {\n    const prefixLength = lengthPrefixBytes || 1;\n    const maxLength = maxLengthBytes || _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_STRING_LENGTH_BYTES;\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_2__.exceedsMaxLengthBytes)(content, maxLength)) {\n        throw new Error(`String length exceeds maximum bytes ${maxLength}`);\n    }\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_1__.StacksMessageType.LengthPrefixedString,\n        content,\n        lengthPrefixBytes: prefixLength,\n        maxLengthBytes: maxLength,\n    };\n}\nfunction createAssetInfo(addressString, contractName, assetName) {\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_1__.StacksMessageType.AssetInfo,\n        address: createAddress(addressString),\n        contractName: createLPString(contractName),\n        assetName: createLPString(assetName),\n    };\n}\nfunction createAddress(c32AddressString) {\n    const addressData = (0,c32check__WEBPACK_IMPORTED_MODULE_0__.c32addressDecode)(c32AddressString);\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_1__.StacksMessageType.Address,\n        version: addressData[0],\n        hash160: addressData[1],\n    };\n}\nfunction parsePrincipalString(principalString) {\n    if (principalString.includes('.')) {\n        const [address, contractName] = principalString.split('.');\n        return createContractPrincipal(address, contractName);\n    }\n    else {\n        return createStandardPrincipal(principalString);\n    }\n}\nfunction createContractPrincipal(addressString, contractName) {\n    const addr = createAddress(addressString);\n    const name = createLPString(contractName);\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_1__.StacksMessageType.Principal,\n        prefix: _constants__WEBPACK_IMPORTED_MODULE_1__.PostConditionPrincipalID.Contract,\n        address: addr,\n        contractName: name,\n    };\n}\nfunction createStandardPrincipal(addressString) {\n    const addr = createAddress(addressString);\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_1__.StacksMessageType.Principal,\n        prefix: _constants__WEBPACK_IMPORTED_MODULE_1__.PostConditionPrincipalID.Standard,\n        address: addr,\n    };\n}\n//# sourceMappingURL=postcondition-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9wb3N0Y29uZGl0aW9uLXR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0c7QUFDeEQ7QUFDSTtBQUN6QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHdDQUF3QywrREFBdUI7QUFDL0QsUUFBUSw2REFBcUI7QUFDN0IsK0RBQStELFVBQVU7QUFDekU7QUFDQTtBQUNBLGNBQWMseURBQWlCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsY0FBYyx5REFBaUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLDBEQUFnQjtBQUN4QztBQUNBLGNBQWMseURBQWlCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlEQUFpQjtBQUMvQixnQkFBZ0IsZ0VBQXdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsY0FBYyx5REFBaUI7QUFDL0IsZ0JBQWdCLGdFQUF3QjtBQUN4QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vcG9zdGNvbmRpdGlvbi10eXBlcy5qcz8yOGRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1BWF9TVFJJTkdfTEVOR1RIX0JZVEVTLCBQb3N0Q29uZGl0aW9uUHJpbmNpcGFsSUQsIFN0YWNrc01lc3NhZ2VUeXBlLCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGMzMmFkZHJlc3NEZWNvZGUgfSBmcm9tICdjMzJjaGVjayc7XG5pbXBvcnQgeyBleGNlZWRzTWF4TGVuZ3RoQnl0ZXMgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUFzc2V0SW5mb1N0cmluZyhpZCkge1xuICAgIGNvbnN0IFthc3NldEFkZHJlc3MsIGFzc2V0Q29udHJhY3ROYW1lLCBhc3NldFRva2VuTmFtZV0gPSBpZC5zcGxpdCgvXFwufDo6Lyk7XG4gICAgY29uc3QgYXNzZXRJbmZvID0gY3JlYXRlQXNzZXRJbmZvKGFzc2V0QWRkcmVzcywgYXNzZXRDb250cmFjdE5hbWUsIGFzc2V0VG9rZW5OYW1lKTtcbiAgICByZXR1cm4gYXNzZXRJbmZvO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxQU3RyaW5nKGNvbnRlbnQsIGxlbmd0aFByZWZpeEJ5dGVzLCBtYXhMZW5ndGhCeXRlcykge1xuICAgIGNvbnN0IHByZWZpeExlbmd0aCA9IGxlbmd0aFByZWZpeEJ5dGVzIHx8IDE7XG4gICAgY29uc3QgbWF4TGVuZ3RoID0gbWF4TGVuZ3RoQnl0ZXMgfHwgTUFYX1NUUklOR19MRU5HVEhfQllURVM7XG4gICAgaWYgKGV4Y2VlZHNNYXhMZW5ndGhCeXRlcyhjb250ZW50LCBtYXhMZW5ndGgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU3RyaW5nIGxlbmd0aCBleGNlZWRzIG1heGltdW0gYnl0ZXMgJHttYXhMZW5ndGh9YCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLkxlbmd0aFByZWZpeGVkU3RyaW5nLFxuICAgICAgICBjb250ZW50LFxuICAgICAgICBsZW5ndGhQcmVmaXhCeXRlczogcHJlZml4TGVuZ3RoLFxuICAgICAgICBtYXhMZW5ndGhCeXRlczogbWF4TGVuZ3RoLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXNzZXRJbmZvKGFkZHJlc3NTdHJpbmcsIGNvbnRyYWN0TmFtZSwgYXNzZXROYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogU3RhY2tzTWVzc2FnZVR5cGUuQXNzZXRJbmZvLFxuICAgICAgICBhZGRyZXNzOiBjcmVhdGVBZGRyZXNzKGFkZHJlc3NTdHJpbmcpLFxuICAgICAgICBjb250cmFjdE5hbWU6IGNyZWF0ZUxQU3RyaW5nKGNvbnRyYWN0TmFtZSksXG4gICAgICAgIGFzc2V0TmFtZTogY3JlYXRlTFBTdHJpbmcoYXNzZXROYW1lKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFkZHJlc3MoYzMyQWRkcmVzc1N0cmluZykge1xuICAgIGNvbnN0IGFkZHJlc3NEYXRhID0gYzMyYWRkcmVzc0RlY29kZShjMzJBZGRyZXNzU3RyaW5nKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBTdGFja3NNZXNzYWdlVHlwZS5BZGRyZXNzLFxuICAgICAgICB2ZXJzaW9uOiBhZGRyZXNzRGF0YVswXSxcbiAgICAgICAgaGFzaDE2MDogYWRkcmVzc0RhdGFbMV0sXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVByaW5jaXBhbFN0cmluZyhwcmluY2lwYWxTdHJpbmcpIHtcbiAgICBpZiAocHJpbmNpcGFsU3RyaW5nLmluY2x1ZGVzKCcuJykpIHtcbiAgICAgICAgY29uc3QgW2FkZHJlc3MsIGNvbnRyYWN0TmFtZV0gPSBwcmluY2lwYWxTdHJpbmcuc3BsaXQoJy4nKTtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbnRyYWN0UHJpbmNpcGFsKGFkZHJlc3MsIGNvbnRyYWN0TmFtZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gY3JlYXRlU3RhbmRhcmRQcmluY2lwYWwocHJpbmNpcGFsU3RyaW5nKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udHJhY3RQcmluY2lwYWwoYWRkcmVzc1N0cmluZywgY29udHJhY3ROYW1lKSB7XG4gICAgY29uc3QgYWRkciA9IGNyZWF0ZUFkZHJlc3MoYWRkcmVzc1N0cmluZyk7XG4gICAgY29uc3QgbmFtZSA9IGNyZWF0ZUxQU3RyaW5nKGNvbnRyYWN0TmFtZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogU3RhY2tzTWVzc2FnZVR5cGUuUHJpbmNpcGFsLFxuICAgICAgICBwcmVmaXg6IFBvc3RDb25kaXRpb25QcmluY2lwYWxJRC5Db250cmFjdCxcbiAgICAgICAgYWRkcmVzczogYWRkcixcbiAgICAgICAgY29udHJhY3ROYW1lOiBuYW1lLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhbmRhcmRQcmluY2lwYWwoYWRkcmVzc1N0cmluZykge1xuICAgIGNvbnN0IGFkZHIgPSBjcmVhdGVBZGRyZXNzKGFkZHJlc3NTdHJpbmcpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLlByaW5jaXBhbCxcbiAgICAgICAgcHJlZml4OiBQb3N0Q29uZGl0aW9uUHJpbmNpcGFsSUQuU3RhbmRhcmQsXG4gICAgICAgIGFkZHJlc3M6IGFkZHIsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvc3Rjb25kaXRpb24tdHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/signature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/signature.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthFieldType: function() { return /* binding */ AuthFieldType; },\n/* harmony export */   createTransactionAuthField: function() { return /* binding */ createTransactionAuthField; },\n/* harmony export */   deserializeMessageSignature: function() { return /* binding */ deserializeMessageSignature; },\n/* harmony export */   deserializeTransactionAuthField: function() { return /* binding */ deserializeTransactionAuthField; },\n/* harmony export */   serializeMessageSignature: function() { return /* binding */ serializeMessageSignature; },\n/* harmony export */   serializeTransactionAuthField: function() { return /* binding */ serializeTransactionAuthField; }\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/keys.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n\n\n\n\n\nvar AuthFieldType;\n(function (AuthFieldType) {\n    AuthFieldType[AuthFieldType[\"PublicKeyCompressed\"] = 0] = \"PublicKeyCompressed\";\n    AuthFieldType[AuthFieldType[\"PublicKeyUncompressed\"] = 1] = \"PublicKeyUncompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureCompressed\"] = 2] = \"SignatureCompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureUncompressed\"] = 3] = \"SignatureUncompressed\";\n})(AuthFieldType || (AuthFieldType = {}));\nfunction deserializeMessageSignature(bytesReader) {\n    return (0,_common__WEBPACK_IMPORTED_MODULE_0__.createMessageSignature)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(bytesReader.readBytes(_constants__WEBPACK_IMPORTED_MODULE_2__.RECOVERABLE_ECDSA_SIG_LENGTH_BYTES)));\n}\nfunction createTransactionAuthField(pubKeyEncoding, contents) {\n    return {\n        pubKeyEncoding,\n        type: _constants__WEBPACK_IMPORTED_MODULE_2__.StacksMessageType.TransactionAuthField,\n        contents,\n    };\n}\nfunction deserializeTransactionAuthField(bytesReader) {\n    const authFieldType = bytesReader.readUInt8Enum(AuthFieldType, n => {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_3__.DeserializationError(`Could not read ${n} as AuthFieldType`);\n    });\n    switch (authFieldType) {\n        case AuthFieldType.PublicKeyCompressed:\n            return createTransactionAuthField(_constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Compressed, (0,_keys__WEBPACK_IMPORTED_MODULE_4__.deserializePublicKey)(bytesReader));\n        case AuthFieldType.PublicKeyUncompressed:\n            return createTransactionAuthField(_constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Uncompressed, (0,_keys__WEBPACK_IMPORTED_MODULE_4__.deserializePublicKey)(bytesReader));\n        case AuthFieldType.SignatureCompressed:\n            return createTransactionAuthField(_constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Compressed, deserializeMessageSignature(bytesReader));\n        case AuthFieldType.SignatureUncompressed:\n            return createTransactionAuthField(_constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Uncompressed, deserializeMessageSignature(bytesReader));\n        default:\n            throw new Error(`Unknown auth field type: ${JSON.stringify(authFieldType)}`);\n    }\n}\nfunction serializeMessageSignature(messageSignature) {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(messageSignature.data);\n}\nfunction serializeTransactionAuthField(field) {\n    const bytesArray = [];\n    switch (field.contents.type) {\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.StacksMessageType.PublicKey:\n            if (field.pubKeyEncoding == _constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Compressed) {\n                bytesArray.push(AuthFieldType.PublicKeyCompressed);\n                bytesArray.push((0,_keys__WEBPACK_IMPORTED_MODULE_4__.serializePublicKey)(field.contents));\n            }\n            else {\n                bytesArray.push(AuthFieldType.PublicKeyUncompressed);\n                bytesArray.push((0,_keys__WEBPACK_IMPORTED_MODULE_4__.serializePublicKey)((0,_keys__WEBPACK_IMPORTED_MODULE_4__.compressPublicKey)(field.contents.data)));\n            }\n            break;\n        case _constants__WEBPACK_IMPORTED_MODULE_2__.StacksMessageType.MessageSignature:\n            if (field.pubKeyEncoding == _constants__WEBPACK_IMPORTED_MODULE_2__.PubKeyEncoding.Compressed) {\n                bytesArray.push(AuthFieldType.SignatureCompressed);\n            }\n            else {\n                bytesArray.push(AuthFieldType.SignatureUncompressed);\n            }\n            bytesArray.push(serializeMessageSignature(field.contents));\n            break;\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_1__.concatArray)(bytesArray);\n}\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDb0Q7QUFDZDtBQUNwQztBQUNtQjtBQUM5RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUNoQztBQUNQLFdBQVcsK0RBQXNCLENBQUMsMERBQVUsdUJBQXVCLDBFQUFrQztBQUNyRztBQUNPO0FBQ1A7QUFDQTtBQUNBLGNBQWMseURBQWlCO0FBQy9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0IseURBQW9CLG1CQUFtQixHQUFHO0FBQzVELEtBQUs7QUFDTDtBQUNBO0FBQ0EsOENBQThDLHNEQUFjLGFBQWEsMkRBQW9CO0FBQzdGO0FBQ0EsOENBQThDLHNEQUFjLGVBQWUsMkRBQW9CO0FBQy9GO0FBQ0EsOENBQThDLHNEQUFjO0FBQzVEO0FBQ0EsOENBQThDLHNEQUFjO0FBQzVEO0FBQ0Esd0RBQXdELDhCQUE4QjtBQUN0RjtBQUNBO0FBQ087QUFDUCxXQUFXLDBEQUFVO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSx5REFBaUI7QUFDOUIsd0NBQXdDLHNEQUFjO0FBQ3REO0FBQ0EsZ0NBQWdDLHlEQUFrQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MseURBQWtCLENBQUMsd0RBQWlCO0FBQ3BFO0FBQ0E7QUFDQSxhQUFhLHlEQUFpQjtBQUM5Qix3Q0FBd0Msc0RBQWM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkRBQVc7QUFDdEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vc2lnbmF0dXJlLmpzPzA0MDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVzZXJpYWxpemF0aW9uRXJyb3IgfSBmcm9tICcuL2Vycm9ycyc7XG5pbXBvcnQgeyBQdWJLZXlFbmNvZGluZywgUkVDT1ZFUkFCTEVfRUNEU0FfU0lHX0xFTkdUSF9CWVRFUywgU3RhY2tzTWVzc2FnZVR5cGUgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjb21wcmVzc1B1YmxpY0tleSwgZGVzZXJpYWxpemVQdWJsaWNLZXksIHNlcmlhbGl6ZVB1YmxpY0tleSwgfSBmcm9tICcuL2tleXMnO1xuaW1wb3J0IHsgY3JlYXRlTWVzc2FnZVNpZ25hdHVyZSB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIGNvbmNhdEFycmF5LCBoZXhUb0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nO1xuZXhwb3J0IHZhciBBdXRoRmllbGRUeXBlO1xuKGZ1bmN0aW9uIChBdXRoRmllbGRUeXBlKSB7XG4gICAgQXV0aEZpZWxkVHlwZVtBdXRoRmllbGRUeXBlW1wiUHVibGljS2V5Q29tcHJlc3NlZFwiXSA9IDBdID0gXCJQdWJsaWNLZXlDb21wcmVzc2VkXCI7XG4gICAgQXV0aEZpZWxkVHlwZVtBdXRoRmllbGRUeXBlW1wiUHVibGljS2V5VW5jb21wcmVzc2VkXCJdID0gMV0gPSBcIlB1YmxpY0tleVVuY29tcHJlc3NlZFwiO1xuICAgIEF1dGhGaWVsZFR5cGVbQXV0aEZpZWxkVHlwZVtcIlNpZ25hdHVyZUNvbXByZXNzZWRcIl0gPSAyXSA9IFwiU2lnbmF0dXJlQ29tcHJlc3NlZFwiO1xuICAgIEF1dGhGaWVsZFR5cGVbQXV0aEZpZWxkVHlwZVtcIlNpZ25hdHVyZVVuY29tcHJlc3NlZFwiXSA9IDNdID0gXCJTaWduYXR1cmVVbmNvbXByZXNzZWRcIjtcbn0pKEF1dGhGaWVsZFR5cGUgfHwgKEF1dGhGaWVsZFR5cGUgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplTWVzc2FnZVNpZ25hdHVyZShieXRlc1JlYWRlcikge1xuICAgIHJldHVybiBjcmVhdGVNZXNzYWdlU2lnbmF0dXJlKGJ5dGVzVG9IZXgoYnl0ZXNSZWFkZXIucmVhZEJ5dGVzKFJFQ09WRVJBQkxFX0VDRFNBX1NJR19MRU5HVEhfQllURVMpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhbnNhY3Rpb25BdXRoRmllbGQocHViS2V5RW5jb2RpbmcsIGNvbnRlbnRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHViS2V5RW5jb2RpbmcsXG4gICAgICAgIHR5cGU6IFN0YWNrc01lc3NhZ2VUeXBlLlRyYW5zYWN0aW9uQXV0aEZpZWxkLFxuICAgICAgICBjb250ZW50cyxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplVHJhbnNhY3Rpb25BdXRoRmllbGQoYnl0ZXNSZWFkZXIpIHtcbiAgICBjb25zdCBhdXRoRmllbGRUeXBlID0gYnl0ZXNSZWFkZXIucmVhZFVJbnQ4RW51bShBdXRoRmllbGRUeXBlLCBuID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IERlc2VyaWFsaXphdGlvbkVycm9yKGBDb3VsZCBub3QgcmVhZCAke259IGFzIEF1dGhGaWVsZFR5cGVgKTtcbiAgICB9KTtcbiAgICBzd2l0Y2ggKGF1dGhGaWVsZFR5cGUpIHtcbiAgICAgICAgY2FzZSBBdXRoRmllbGRUeXBlLlB1YmxpY0tleUNvbXByZXNzZWQ6XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlVHJhbnNhY3Rpb25BdXRoRmllbGQoUHViS2V5RW5jb2RpbmcuQ29tcHJlc3NlZCwgZGVzZXJpYWxpemVQdWJsaWNLZXkoYnl0ZXNSZWFkZXIpKTtcbiAgICAgICAgY2FzZSBBdXRoRmllbGRUeXBlLlB1YmxpY0tleVVuY29tcHJlc3NlZDpcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVUcmFuc2FjdGlvbkF1dGhGaWVsZChQdWJLZXlFbmNvZGluZy5VbmNvbXByZXNzZWQsIGRlc2VyaWFsaXplUHVibGljS2V5KGJ5dGVzUmVhZGVyKSk7XG4gICAgICAgIGNhc2UgQXV0aEZpZWxkVHlwZS5TaWduYXR1cmVDb21wcmVzc2VkOlxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVRyYW5zYWN0aW9uQXV0aEZpZWxkKFB1YktleUVuY29kaW5nLkNvbXByZXNzZWQsIGRlc2VyaWFsaXplTWVzc2FnZVNpZ25hdHVyZShieXRlc1JlYWRlcikpO1xuICAgICAgICBjYXNlIEF1dGhGaWVsZFR5cGUuU2lnbmF0dXJlVW5jb21wcmVzc2VkOlxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVRyYW5zYWN0aW9uQXV0aEZpZWxkKFB1YktleUVuY29kaW5nLlVuY29tcHJlc3NlZCwgZGVzZXJpYWxpemVNZXNzYWdlU2lnbmF0dXJlKGJ5dGVzUmVhZGVyKSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gYXV0aCBmaWVsZCB0eXBlOiAke0pTT04uc3RyaW5naWZ5KGF1dGhGaWVsZFR5cGUpfWApO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVNZXNzYWdlU2lnbmF0dXJlKG1lc3NhZ2VTaWduYXR1cmUpIHtcbiAgICByZXR1cm4gaGV4VG9CeXRlcyhtZXNzYWdlU2lnbmF0dXJlLmRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVRyYW5zYWN0aW9uQXV0aEZpZWxkKGZpZWxkKSB7XG4gICAgY29uc3QgYnl0ZXNBcnJheSA9IFtdO1xuICAgIHN3aXRjaCAoZmllbGQuY29udGVudHMudHlwZSkge1xuICAgICAgICBjYXNlIFN0YWNrc01lc3NhZ2VUeXBlLlB1YmxpY0tleTpcbiAgICAgICAgICAgIGlmIChmaWVsZC5wdWJLZXlFbmNvZGluZyA9PSBQdWJLZXlFbmNvZGluZy5Db21wcmVzc2VkKSB7XG4gICAgICAgICAgICAgICAgYnl0ZXNBcnJheS5wdXNoKEF1dGhGaWVsZFR5cGUuUHVibGljS2V5Q29tcHJlc3NlZCk7XG4gICAgICAgICAgICAgICAgYnl0ZXNBcnJheS5wdXNoKHNlcmlhbGl6ZVB1YmxpY0tleShmaWVsZC5jb250ZW50cykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYnl0ZXNBcnJheS5wdXNoKEF1dGhGaWVsZFR5cGUuUHVibGljS2V5VW5jb21wcmVzc2VkKTtcbiAgICAgICAgICAgICAgICBieXRlc0FycmF5LnB1c2goc2VyaWFsaXplUHVibGljS2V5KGNvbXByZXNzUHVibGljS2V5KGZpZWxkLmNvbnRlbnRzLmRhdGEpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBTdGFja3NNZXNzYWdlVHlwZS5NZXNzYWdlU2lnbmF0dXJlOlxuICAgICAgICAgICAgaWYgKGZpZWxkLnB1YktleUVuY29kaW5nID09IFB1YktleUVuY29kaW5nLkNvbXByZXNzZWQpIHtcbiAgICAgICAgICAgICAgICBieXRlc0FycmF5LnB1c2goQXV0aEZpZWxkVHlwZS5TaWduYXR1cmVDb21wcmVzc2VkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGJ5dGVzQXJyYXkucHVzaChBdXRoRmllbGRUeXBlLlNpZ25hdHVyZVVuY29tcHJlc3NlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBieXRlc0FycmF5LnB1c2goc2VyaWFsaXplTWVzc2FnZVNpZ25hdHVyZShmaWVsZC5jb250ZW50cykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBjb25jYXRBcnJheShieXRlc0FycmF5KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25hdHVyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/signature.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/types.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressFromHashMode: function() { return /* binding */ addressFromHashMode; },\n/* harmony export */   addressFromPublicKeys: function() { return /* binding */ addressFromPublicKeys; },\n/* harmony export */   codeBodyString: function() { return /* binding */ codeBodyString; },\n/* harmony export */   createEmptyAddress: function() { return /* binding */ createEmptyAddress; },\n/* harmony export */   createLPList: function() { return /* binding */ createLPList; },\n/* harmony export */   createMemoString: function() { return /* binding */ createMemoString; },\n/* harmony export */   deserializeAddress: function() { return /* binding */ deserializeAddress; },\n/* harmony export */   deserializeAssetInfo: function() { return /* binding */ deserializeAssetInfo; },\n/* harmony export */   deserializeLPList: function() { return /* binding */ deserializeLPList; },\n/* harmony export */   deserializeLPString: function() { return /* binding */ deserializeLPString; },\n/* harmony export */   deserializeMemoString: function() { return /* binding */ deserializeMemoString; },\n/* harmony export */   deserializePostCondition: function() { return /* binding */ deserializePostCondition; },\n/* harmony export */   deserializePrincipal: function() { return /* binding */ deserializePrincipal; },\n/* harmony export */   deserializeStacksMessage: function() { return /* binding */ deserializeStacksMessage; },\n/* harmony export */   serializeAddress: function() { return /* binding */ serializeAddress; },\n/* harmony export */   serializeAssetInfo: function() { return /* binding */ serializeAssetInfo; },\n/* harmony export */   serializeLPList: function() { return /* binding */ serializeLPList; },\n/* harmony export */   serializeLPString: function() { return /* binding */ serializeLPString; },\n/* harmony export */   serializeMemoString: function() { return /* binding */ serializeMemoString; },\n/* harmony export */   serializePostCondition: function() { return /* binding */ serializePostCondition; },\n/* harmony export */   serializePrincipal: function() { return /* binding */ serializePrincipal; },\n/* harmony export */   serializeStacksMessage: function() { return /* binding */ serializeStacksMessage; }\n/* harmony export */ });\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/constants.js\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/keys.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js\");\n/* harmony import */ var _postcondition_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./postcondition-types */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/postcondition-types.js\");\n/* harmony import */ var _payload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./payload */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/payload.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/errors.js\");\n/* harmony import */ var _signature__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signature */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/signature.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/common.js\");\n/* harmony import */ var _clarity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./clarity */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js\");\n/* harmony import */ var _clarity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./clarity */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js\");\n\n\n\n\n\n\n\n\n\n\nfunction serializeStacksMessage(message) {\n    switch (message.type) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Address:\n            return serializeAddress(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Principal:\n            return serializePrincipal(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedString:\n            return serializeLPString(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MemoString:\n            return serializeMemoString(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.AssetInfo:\n            return serializeAssetInfo(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition:\n            return serializePostCondition(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PublicKey:\n            return (0,_keys__WEBPACK_IMPORTED_MODULE_1__.serializePublicKey)(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedList:\n            return serializeLPList(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload:\n            return (0,_payload__WEBPACK_IMPORTED_MODULE_2__.serializePayload)(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.TransactionAuthField:\n            return (0,_signature__WEBPACK_IMPORTED_MODULE_3__.serializeTransactionAuthField)(message);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MessageSignature:\n            return (0,_signature__WEBPACK_IMPORTED_MODULE_3__.serializeMessageSignature)(message);\n    }\n}\nfunction deserializeStacksMessage(bytesReader, type, listType) {\n    switch (type) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Address:\n            return deserializeAddress(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Principal:\n            return deserializePrincipal(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedString:\n            return deserializeLPString(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MemoString:\n            return deserializeMemoString(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.AssetInfo:\n            return deserializeAssetInfo(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition:\n            return deserializePostCondition(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PublicKey:\n            return (0,_keys__WEBPACK_IMPORTED_MODULE_1__.deserializePublicKey)(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Payload:\n            return (0,_payload__WEBPACK_IMPORTED_MODULE_2__.deserializePayload)(bytesReader);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedList:\n            if (!listType) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError('No List Type specified');\n            }\n            return deserializeLPList(bytesReader, listType);\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MessageSignature:\n            return (0,_signature__WEBPACK_IMPORTED_MODULE_3__.deserializeMessageSignature)(bytesReader);\n        default:\n            throw new Error('Could not recognize StacksMessageType');\n    }\n}\nfunction createEmptyAddress() {\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Address,\n        version: _constants__WEBPACK_IMPORTED_MODULE_0__.AddressVersion.MainnetSingleSig,\n        hash160: '0'.repeat(40),\n    };\n}\nfunction addressFromHashMode(hashMode, txVersion, data) {\n    const version = (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressHashModeToVersion)(hashMode, txVersion);\n    return (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressFromVersionHash)(version, data);\n}\nfunction addressFromPublicKeys(version, hashMode, numSigs, publicKeys) {\n    if (publicKeys.length === 0) {\n        throw Error('Invalid number of public keys');\n    }\n    if (hashMode === _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2PKH || hashMode === _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2WPKH) {\n        if (publicKeys.length !== 1 || numSigs !== 1) {\n            throw Error('Invalid number of public keys or signatures');\n        }\n    }\n    if (hashMode === _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2WPKH || hashMode === _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2WSH) {\n        for (let i = 0; i < publicKeys.length; i++) {\n            if (!(0,_keys__WEBPACK_IMPORTED_MODULE_1__.isCompressed)(publicKeys[i])) {\n                throw Error('Public keys must be compressed for segwit');\n            }\n        }\n    }\n    switch (hashMode) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2PKH:\n            return (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressFromVersionHash)(version, (0,_utils__WEBPACK_IMPORTED_MODULE_6__.hashP2PKH)(publicKeys[0].data));\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2WPKH:\n            return (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressFromVersionHash)(version, (0,_utils__WEBPACK_IMPORTED_MODULE_6__.hashP2WPKH)(publicKeys[0].data));\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2SH:\n            return (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressFromVersionHash)(version, (0,_utils__WEBPACK_IMPORTED_MODULE_6__.hashP2SH)(numSigs, publicKeys.map(_keys__WEBPACK_IMPORTED_MODULE_1__.serializePublicKey)));\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.AddressHashMode.SerializeP2WSH:\n            return (0,_common__WEBPACK_IMPORTED_MODULE_5__.addressFromVersionHash)(version, (0,_utils__WEBPACK_IMPORTED_MODULE_6__.hashP2WSH)(numSigs, publicKeys.map(_keys__WEBPACK_IMPORTED_MODULE_1__.serializePublicKey)));\n    }\n}\nfunction serializeAddress(address) {\n    const bytesArray = [];\n    bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.intToHex)(address.version, 1)));\n    bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)(address.hash160));\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializeAddress(bytesReader) {\n    const version = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToInt)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(1)));\n    const data = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(20));\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Address, version, hash160: data };\n}\nfunction serializePrincipal(principal) {\n    const bytesArray = [];\n    bytesArray.push(principal.prefix);\n    bytesArray.push(serializeAddress(principal.address));\n    if (principal.prefix === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionPrincipalID.Contract) {\n        bytesArray.push(serializeLPString(principal.contractName));\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializePrincipal(bytesReader) {\n    const prefix = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionPrincipalID, n => {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError(`Unexpected Principal payload type: ${n}`);\n    });\n    const address = deserializeAddress(bytesReader);\n    if (prefix === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionPrincipalID.Standard) {\n        return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Principal, prefix, address };\n    }\n    const contractName = deserializeLPString(bytesReader);\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Principal,\n        prefix,\n        address,\n        contractName,\n    };\n}\nfunction serializeLPString(lps) {\n    const bytesArray = [];\n    const contentBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.utf8ToBytes)(lps.content);\n    const length = contentBytes.byteLength;\n    bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.intToHex)(length, lps.lengthPrefixBytes)));\n    bytesArray.push(contentBytes);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializeLPString(bytesReader, prefixBytes, maxLength) {\n    prefixBytes = prefixBytes ? prefixBytes : 1;\n    const length = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToInt)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(prefixBytes)));\n    const content = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToUtf8)(bytesReader.readBytes(length));\n    return (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_8__.createLPString)(content, prefixBytes, maxLength ?? 128);\n}\nfunction codeBodyString(content) {\n    return (0,_postcondition_types__WEBPACK_IMPORTED_MODULE_8__.createLPString)(content, 4, 100000);\n}\nfunction createMemoString(content) {\n    if (content && (0,_utils__WEBPACK_IMPORTED_MODULE_6__.exceedsMaxLengthBytes)(content, _constants__WEBPACK_IMPORTED_MODULE_0__.MEMO_MAX_LENGTH_BYTES)) {\n        throw new Error(`Memo exceeds maximum length of ${_constants__WEBPACK_IMPORTED_MODULE_0__.MEMO_MAX_LENGTH_BYTES} bytes`);\n    }\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MemoString, content };\n}\nfunction serializeMemoString(memoString) {\n    const bytesArray = [];\n    const contentBytes = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.utf8ToBytes)(memoString.content);\n    const paddedContent = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.rightPadHexToLength)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(contentBytes), _constants__WEBPACK_IMPORTED_MODULE_0__.MEMO_MAX_LENGTH_BYTES * 2);\n    bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)(paddedContent));\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializeMemoString(bytesReader) {\n    const content = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToUtf8)(bytesReader.readBytes(_constants__WEBPACK_IMPORTED_MODULE_0__.MEMO_MAX_LENGTH_BYTES));\n    return { type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MemoString, content };\n}\nfunction serializeAssetInfo(info) {\n    const bytesArray = [];\n    bytesArray.push(serializeAddress(info.address));\n    bytesArray.push(serializeLPString(info.contractName));\n    bytesArray.push(serializeLPString(info.assetName));\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializeAssetInfo(bytesReader) {\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.AssetInfo,\n        address: deserializeAddress(bytesReader),\n        contractName: deserializeLPString(bytesReader),\n        assetName: deserializeLPString(bytesReader),\n    };\n}\nfunction createLPList(values, lengthPrefixBytes) {\n    return {\n        type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedList,\n        lengthPrefixBytes: lengthPrefixBytes || 4,\n        values,\n    };\n}\nfunction serializeLPList(lpList) {\n    const list = lpList.values;\n    const bytesArray = [];\n    bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToBytes)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.intToHex)(list.length, lpList.lengthPrefixBytes)));\n    for (const l of list) {\n        bytesArray.push(serializeStacksMessage(l));\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializeLPList(bytesReader, type, lengthPrefixBytes) {\n    const length = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.hexToInt)((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(lengthPrefixBytes || 4)));\n    const l = [];\n    for (let index = 0; index < length; index++) {\n        switch (type) {\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.Address:\n                l.push(deserializeAddress(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.LengthPrefixedString:\n                l.push(deserializeLPString(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.MemoString:\n                l.push(deserializeMemoString(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.AssetInfo:\n                l.push(deserializeAssetInfo(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition:\n                l.push(deserializePostCondition(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PublicKey:\n                l.push((0,_keys__WEBPACK_IMPORTED_MODULE_1__.deserializePublicKey)(bytesReader));\n                break;\n            case _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.TransactionAuthField:\n                l.push((0,_signature__WEBPACK_IMPORTED_MODULE_3__.deserializeTransactionAuthField)(bytesReader));\n                break;\n        }\n    }\n    return createLPList(l, lengthPrefixBytes);\n}\nfunction serializePostCondition(postCondition) {\n    const bytesArray = [];\n    bytesArray.push(postCondition.conditionType);\n    bytesArray.push(serializePrincipal(postCondition.principal));\n    if (postCondition.conditionType === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.Fungible ||\n        postCondition.conditionType === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.NonFungible) {\n        bytesArray.push(serializeAssetInfo(postCondition.assetInfo));\n    }\n    if (postCondition.conditionType === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.NonFungible) {\n        bytesArray.push((0,_clarity__WEBPACK_IMPORTED_MODULE_9__.serializeCV)(postCondition.assetName));\n    }\n    bytesArray.push(postCondition.conditionCode);\n    if (postCondition.conditionType === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.STX ||\n        postCondition.conditionType === _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.Fungible) {\n        bytesArray.push((0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.intToBytes)(postCondition.amount, false, 8));\n    }\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.concatArray)(bytesArray);\n}\nfunction deserializePostCondition(bytesReader) {\n    const postConditionType = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType, n => {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError(`Could not read ${n} as PostConditionType`);\n    });\n    const principal = deserializePrincipal(bytesReader);\n    let conditionCode;\n    let assetInfo;\n    let amount;\n    switch (postConditionType) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.STX:\n            conditionCode = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.FungibleConditionCode, n => {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            amount = BigInt(`0x${(0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(8))}`);\n            return {\n                type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition,\n                conditionType: _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.STX,\n                principal,\n                conditionCode,\n                amount,\n            };\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.Fungible:\n            assetInfo = deserializeAssetInfo(bytesReader);\n            conditionCode = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.FungibleConditionCode, n => {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            amount = BigInt(`0x${(0,_stacks_common__WEBPACK_IMPORTED_MODULE_7__.bytesToHex)(bytesReader.readBytes(8))}`);\n            return {\n                type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition,\n                conditionType: _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.Fungible,\n                principal,\n                conditionCode,\n                amount,\n                assetInfo,\n            };\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.NonFungible:\n            assetInfo = deserializeAssetInfo(bytesReader);\n            const assetName = (0,_clarity__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(bytesReader);\n            conditionCode = bytesReader.readUInt8Enum(_constants__WEBPACK_IMPORTED_MODULE_0__.NonFungibleConditionCode, n => {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_4__.DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n            });\n            return {\n                type: _constants__WEBPACK_IMPORTED_MODULE_0__.StacksMessageType.PostCondition,\n                conditionType: _constants__WEBPACK_IMPORTED_MODULE_0__.PostConditionType.NonFungible,\n                principal,\n                conditionCode,\n                assetInfo,\n                assetName,\n            };\n    }\n}\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stacks/transactions/dist/esm/utils.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneDeep: function() { return /* binding */ cloneDeep; },\n/* harmony export */   cvToHex: function() { return /* binding */ cvToHex; },\n/* harmony export */   exceedsMaxLengthBytes: function() { return /* binding */ exceedsMaxLengthBytes; },\n/* harmony export */   hash160: function() { return /* binding */ hash160; },\n/* harmony export */   hashP2PKH: function() { return /* binding */ hashP2PKH; },\n/* harmony export */   hashP2SH: function() { return /* binding */ hashP2SH; },\n/* harmony export */   hashP2WPKH: function() { return /* binding */ hashP2WPKH; },\n/* harmony export */   hashP2WSH: function() { return /* binding */ hashP2WSH; },\n/* harmony export */   hexToCV: function() { return /* binding */ hexToCV; },\n/* harmony export */   isClarityName: function() { return /* binding */ isClarityName; },\n/* harmony export */   leftPadHex: function() { return /* binding */ leftPadHex; },\n/* harmony export */   leftPadHexToLength: function() { return /* binding */ leftPadHexToLength; },\n/* harmony export */   omit: function() { return /* binding */ omit; },\n/* harmony export */   parseReadOnlyResponse: function() { return /* binding */ parseReadOnlyResponse; },\n/* harmony export */   randomBytes: function() { return /* binding */ randomBytes; },\n/* harmony export */   rightPadHexToLength: function() { return /* binding */ rightPadHexToLength; },\n/* harmony export */   txidFromData: function() { return /* binding */ txidFromData; },\n/* harmony export */   validateStacksAddress: function() { return /* binding */ validateStacksAddress; },\n/* harmony export */   validateTxId: function() { return /* binding */ validateTxId; },\n/* harmony export */   verifySignature: function() { return /* reexport safe */ _noble_secp256k1__WEBPACK_IMPORTED_MODULE_3__.verify; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/ripemd160.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _stacks_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stacks/common */ \"(app-pages-browser)/./node_modules/@stacks/common/dist/esm/utils.js\");\n/* harmony import */ var c32check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! c32check */ \"(app-pages-browser)/./node_modules/c32check/lib/index.js\");\n/* harmony import */ var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash.clonedeep */ \"(app-pages-browser)/./node_modules/lodash.clonedeep/index.js\");\n/* harmony import */ var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_clonedeep__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _clarity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clarity */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/serialize.js\");\n/* harmony import */ var _clarity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./clarity */ \"(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/clarity/deserialize.js\");\n\n\n\n\n\n\n\n\n\nconst randomBytes = (bytesLength) => _noble_secp256k1__WEBPACK_IMPORTED_MODULE_3__.utils.randomBytes(bytesLength);\nconst leftPadHex = (hexString) => hexString.length % 2 == 0 ? hexString : `0${hexString}`;\nconst leftPadHexToLength = (hexString, length) => hexString.padStart(length, '0');\nconst rightPadHexToLength = (hexString, length) => hexString.padEnd(length, '0');\nconst exceedsMaxLengthBytes = (string, maxLengthBytes) => string ? (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.utf8ToBytes)(string).length > maxLengthBytes : false;\nfunction cloneDeep(obj) {\n    return lodash_clonedeep__WEBPACK_IMPORTED_MODULE_5___default()(obj);\n}\nfunction omit(obj, prop) {\n    const clone = cloneDeep(obj);\n    delete clone[prop];\n    return clone;\n}\nconst txidFromData = (data) => {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)((0,_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512_256)(data));\n};\nconst hash160 = (input) => {\n    return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__.ripemd160)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(input));\n};\nconst hashP2PKH = (input) => {\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(hash160(input));\n};\nconst hashP2WPKH = (input) => {\n    const keyHash = hash160(input);\n    const redeemScript = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatBytes)(new Uint8Array([0]), new Uint8Array([keyHash.length]), keyHash);\n    const redeemScriptHash = hash160(redeemScript);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(redeemScriptHash);\n};\nconst hashP2SH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2SH multisig address can only contain up to 15 public keys');\n    }\n    const bytesArray = [];\n    bytesArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        bytesArray.push(pubKey.length);\n        bytesArray.push(pubKey);\n    });\n    bytesArray.push(80 + pubKeys.length);\n    bytesArray.push(174);\n    const redeemScript = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatArray)(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(redeemScriptHash);\n};\nconst hashP2WSH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2WSH multisig address can only contain up to 15 public keys');\n    }\n    const scriptArray = [];\n    scriptArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        scriptArray.push(pubKey.length);\n        scriptArray.push(pubKey);\n    });\n    scriptArray.push(80 + pubKeys.length);\n    scriptArray.push(174);\n    const script = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatArray)(scriptArray);\n    const digest = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(script);\n    const bytesArray = [];\n    bytesArray.push(0);\n    bytesArray.push(digest.length);\n    bytesArray.push(digest);\n    const redeemScript = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.concatArray)(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(redeemScriptHash);\n};\nfunction isClarityName(name) {\n    const regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n    return regex.test(name) && name.length < 128;\n}\nfunction cvToHex(cv) {\n    const serialized = (0,_clarity__WEBPACK_IMPORTED_MODULE_7__.serializeCV)(cv);\n    return `0x${(0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(serialized)}`;\n}\nfunction hexToCV(hex) {\n    return (0,_clarity__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(hex);\n}\nconst parseReadOnlyResponse = (response) => {\n    if (response.okay)\n        return hexToCV(response.result);\n    throw new Error(response.cause);\n};\nconst validateStacksAddress = (stacksAddress) => {\n    try {\n        (0,c32check__WEBPACK_IMPORTED_MODULE_4__.c32addressDecode)(stacksAddress);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nconst validateTxId = (txid) => {\n    if (txid === 'success')\n        return true;\n    const value = (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.with0x)(txid).toLowerCase();\n    if (value.length !== 66)\n        return false;\n    return (0,_stacks_common__WEBPACK_IMPORTED_MODULE_6__.with0x)(BigInt(value).toString(16).padStart(64, '0')) === value;\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tzL3RyYW5zYWN0aW9ucy9kaXN0L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDTjtBQUNJO0FBQ1Q7QUFDa0Q7QUFDL0M7QUFDRztBQUNRO0FBQ007QUFDdEQscUNBQXFDLG1EQUFLO0FBQzFDLDhFQUE4RSxVQUFVO0FBQ3hGO0FBQ0E7QUFDQSxtRUFBbUUsMkRBQVc7QUFDOUU7QUFDUCxXQUFXLHVEQUFlO0FBQzFCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVywwREFBVSxDQUFDLGdFQUFVO0FBQ2hDO0FBQ087QUFDUCxXQUFXLGtFQUFTLENBQUMsNERBQU07QUFDM0I7QUFDTztBQUNQLFdBQVcsMERBQVU7QUFDckI7QUFDTztBQUNQO0FBQ0EseUJBQXlCLDJEQUFXO0FBQ3BDO0FBQ0EsV0FBVywwREFBVTtBQUNyQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EseUJBQXlCLDJEQUFXO0FBQ3BDO0FBQ0EsV0FBVywwREFBVTtBQUNyQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsbUJBQW1CLDJEQUFXO0FBQzlCLG1CQUFtQiw0REFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBVztBQUNwQztBQUNBLFdBQVcsMERBQVU7QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLHFEQUFXO0FBQ2xDLGdCQUFnQiwwREFBVSxhQUFhO0FBQ3ZDO0FBQ087QUFDUCxXQUFXLG9EQUFhO0FBQ3hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLDBEQUFnQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQU07QUFDeEI7QUFDQTtBQUNBLFdBQVcsc0RBQU07QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0YWNrcy90cmFuc2FjdGlvbnMvZGlzdC9lc20vdXRpbHMuanM/YTExNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByaXBlbWQxNjAgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3JpcGVtZDE2MCc7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTI1Nic7XG5pbXBvcnQgeyBzaGE1MTJfMjU2IH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGE1MTInO1xuaW1wb3J0IHsgdXRpbHMgfSBmcm9tICdAbm9ibGUvc2VjcDI1NmsxJztcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIGNvbmNhdEFycmF5LCBjb25jYXRCeXRlcywgdXRmOFRvQnl0ZXMsIHdpdGgweCB9IGZyb20gJ0BzdGFja3MvY29tbW9uJztcbmltcG9ydCB7IGMzMmFkZHJlc3NEZWNvZGUgfSBmcm9tICdjMzJjaGVjayc7XG5pbXBvcnQgbG9kYXNoQ2xvbmVEZWVwIGZyb20gJ2xvZGFzaC5jbG9uZWRlZXAnO1xuaW1wb3J0IHsgZGVzZXJpYWxpemVDViwgc2VyaWFsaXplQ1YgfSBmcm9tICcuL2NsYXJpdHknO1xuZXhwb3J0IHsgdmVyaWZ5IGFzIHZlcmlmeVNpZ25hdHVyZSB9IGZyb20gJ0Bub2JsZS9zZWNwMjU2azEnO1xuZXhwb3J0IGNvbnN0IHJhbmRvbUJ5dGVzID0gKGJ5dGVzTGVuZ3RoKSA9PiB1dGlscy5yYW5kb21CeXRlcyhieXRlc0xlbmd0aCk7XG5leHBvcnQgY29uc3QgbGVmdFBhZEhleCA9IChoZXhTdHJpbmcpID0+IGhleFN0cmluZy5sZW5ndGggJSAyID09IDAgPyBoZXhTdHJpbmcgOiBgMCR7aGV4U3RyaW5nfWA7XG5leHBvcnQgY29uc3QgbGVmdFBhZEhleFRvTGVuZ3RoID0gKGhleFN0cmluZywgbGVuZ3RoKSA9PiBoZXhTdHJpbmcucGFkU3RhcnQobGVuZ3RoLCAnMCcpO1xuZXhwb3J0IGNvbnN0IHJpZ2h0UGFkSGV4VG9MZW5ndGggPSAoaGV4U3RyaW5nLCBsZW5ndGgpID0+IGhleFN0cmluZy5wYWRFbmQobGVuZ3RoLCAnMCcpO1xuZXhwb3J0IGNvbnN0IGV4Y2VlZHNNYXhMZW5ndGhCeXRlcyA9IChzdHJpbmcsIG1heExlbmd0aEJ5dGVzKSA9PiBzdHJpbmcgPyB1dGY4VG9CeXRlcyhzdHJpbmcpLmxlbmd0aCA+IG1heExlbmd0aEJ5dGVzIDogZmFsc2U7XG5leHBvcnQgZnVuY3Rpb24gY2xvbmVEZWVwKG9iaikge1xuICAgIHJldHVybiBsb2Rhc2hDbG9uZURlZXAob2JqKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvbWl0KG9iaiwgcHJvcCkge1xuICAgIGNvbnN0IGNsb25lID0gY2xvbmVEZWVwKG9iaik7XG4gICAgZGVsZXRlIGNsb25lW3Byb3BdO1xuICAgIHJldHVybiBjbG9uZTtcbn1cbmV4cG9ydCBjb25zdCB0eGlkRnJvbURhdGEgPSAoZGF0YSkgPT4ge1xuICAgIHJldHVybiBieXRlc1RvSGV4KHNoYTUxMl8yNTYoZGF0YSkpO1xufTtcbmV4cG9ydCBjb25zdCBoYXNoMTYwID0gKGlucHV0KSA9PiB7XG4gICAgcmV0dXJuIHJpcGVtZDE2MChzaGEyNTYoaW5wdXQpKTtcbn07XG5leHBvcnQgY29uc3QgaGFzaFAyUEtIID0gKGlucHV0KSA9PiB7XG4gICAgcmV0dXJuIGJ5dGVzVG9IZXgoaGFzaDE2MChpbnB1dCkpO1xufTtcbmV4cG9ydCBjb25zdCBoYXNoUDJXUEtIID0gKGlucHV0KSA9PiB7XG4gICAgY29uc3Qga2V5SGFzaCA9IGhhc2gxNjAoaW5wdXQpO1xuICAgIGNvbnN0IHJlZGVlbVNjcmlwdCA9IGNvbmNhdEJ5dGVzKG5ldyBVaW50OEFycmF5KFswXSksIG5ldyBVaW50OEFycmF5KFtrZXlIYXNoLmxlbmd0aF0pLCBrZXlIYXNoKTtcbiAgICBjb25zdCByZWRlZW1TY3JpcHRIYXNoID0gaGFzaDE2MChyZWRlZW1TY3JpcHQpO1xuICAgIHJldHVybiBieXRlc1RvSGV4KHJlZGVlbVNjcmlwdEhhc2gpO1xufTtcbmV4cG9ydCBjb25zdCBoYXNoUDJTSCA9IChudW1TaWdzLCBwdWJLZXlzKSA9PiB7XG4gICAgaWYgKG51bVNpZ3MgPiAxNSB8fCBwdWJLZXlzLmxlbmd0aCA+IDE1KSB7XG4gICAgICAgIHRocm93IEVycm9yKCdQMlNIIG11bHRpc2lnIGFkZHJlc3MgY2FuIG9ubHkgY29udGFpbiB1cCB0byAxNSBwdWJsaWMga2V5cycpO1xuICAgIH1cbiAgICBjb25zdCBieXRlc0FycmF5ID0gW107XG4gICAgYnl0ZXNBcnJheS5wdXNoKDgwICsgbnVtU2lncyk7XG4gICAgcHViS2V5cy5mb3JFYWNoKHB1YktleSA9PiB7XG4gICAgICAgIGJ5dGVzQXJyYXkucHVzaChwdWJLZXkubGVuZ3RoKTtcbiAgICAgICAgYnl0ZXNBcnJheS5wdXNoKHB1YktleSk7XG4gICAgfSk7XG4gICAgYnl0ZXNBcnJheS5wdXNoKDgwICsgcHViS2V5cy5sZW5ndGgpO1xuICAgIGJ5dGVzQXJyYXkucHVzaCgxNzQpO1xuICAgIGNvbnN0IHJlZGVlbVNjcmlwdCA9IGNvbmNhdEFycmF5KGJ5dGVzQXJyYXkpO1xuICAgIGNvbnN0IHJlZGVlbVNjcmlwdEhhc2ggPSBoYXNoMTYwKHJlZGVlbVNjcmlwdCk7XG4gICAgcmV0dXJuIGJ5dGVzVG9IZXgocmVkZWVtU2NyaXB0SGFzaCk7XG59O1xuZXhwb3J0IGNvbnN0IGhhc2hQMldTSCA9IChudW1TaWdzLCBwdWJLZXlzKSA9PiB7XG4gICAgaWYgKG51bVNpZ3MgPiAxNSB8fCBwdWJLZXlzLmxlbmd0aCA+IDE1KSB7XG4gICAgICAgIHRocm93IEVycm9yKCdQMldTSCBtdWx0aXNpZyBhZGRyZXNzIGNhbiBvbmx5IGNvbnRhaW4gdXAgdG8gMTUgcHVibGljIGtleXMnKTtcbiAgICB9XG4gICAgY29uc3Qgc2NyaXB0QXJyYXkgPSBbXTtcbiAgICBzY3JpcHRBcnJheS5wdXNoKDgwICsgbnVtU2lncyk7XG4gICAgcHViS2V5cy5mb3JFYWNoKHB1YktleSA9PiB7XG4gICAgICAgIHNjcmlwdEFycmF5LnB1c2gocHViS2V5Lmxlbmd0aCk7XG4gICAgICAgIHNjcmlwdEFycmF5LnB1c2gocHViS2V5KTtcbiAgICB9KTtcbiAgICBzY3JpcHRBcnJheS5wdXNoKDgwICsgcHViS2V5cy5sZW5ndGgpO1xuICAgIHNjcmlwdEFycmF5LnB1c2goMTc0KTtcbiAgICBjb25zdCBzY3JpcHQgPSBjb25jYXRBcnJheShzY3JpcHRBcnJheSk7XG4gICAgY29uc3QgZGlnZXN0ID0gc2hhMjU2KHNjcmlwdCk7XG4gICAgY29uc3QgYnl0ZXNBcnJheSA9IFtdO1xuICAgIGJ5dGVzQXJyYXkucHVzaCgwKTtcbiAgICBieXRlc0FycmF5LnB1c2goZGlnZXN0Lmxlbmd0aCk7XG4gICAgYnl0ZXNBcnJheS5wdXNoKGRpZ2VzdCk7XG4gICAgY29uc3QgcmVkZWVtU2NyaXB0ID0gY29uY2F0QXJyYXkoYnl0ZXNBcnJheSk7XG4gICAgY29uc3QgcmVkZWVtU2NyaXB0SGFzaCA9IGhhc2gxNjAocmVkZWVtU2NyaXB0KTtcbiAgICByZXR1cm4gYnl0ZXNUb0hleChyZWRlZW1TY3JpcHRIYXNoKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gaXNDbGFyaXR5TmFtZShuYW1lKSB7XG4gICAgY29uc3QgcmVnZXggPSAvXlthLXpBLVpdKFthLXpBLVowLTldfFstXyE/Kzw+PS8qXSkqJHxeWy0rPS8qXSR8Xls8Pl09PyQvO1xuICAgIHJldHVybiByZWdleC50ZXN0KG5hbWUpICYmIG5hbWUubGVuZ3RoIDwgMTI4O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGN2VG9IZXgoY3YpIHtcbiAgICBjb25zdCBzZXJpYWxpemVkID0gc2VyaWFsaXplQ1YoY3YpO1xuICAgIHJldHVybiBgMHgke2J5dGVzVG9IZXgoc2VyaWFsaXplZCl9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0NWKGhleCkge1xuICAgIHJldHVybiBkZXNlcmlhbGl6ZUNWKGhleCk7XG59XG5leHBvcnQgY29uc3QgcGFyc2VSZWFkT25seVJlc3BvbnNlID0gKHJlc3BvbnNlKSA9PiB7XG4gICAgaWYgKHJlc3BvbnNlLm9rYXkpXG4gICAgICAgIHJldHVybiBoZXhUb0NWKHJlc3BvbnNlLnJlc3VsdCk7XG4gICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLmNhdXNlKTtcbn07XG5leHBvcnQgY29uc3QgdmFsaWRhdGVTdGFja3NBZGRyZXNzID0gKHN0YWNrc0FkZHJlc3MpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjMzJhZGRyZXNzRGVjb2RlKHN0YWNrc0FkZHJlc3MpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn07XG5leHBvcnQgY29uc3QgdmFsaWRhdGVUeElkID0gKHR4aWQpID0+IHtcbiAgICBpZiAodHhpZCA9PT0gJ3N1Y2Nlc3MnKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBjb25zdCB2YWx1ZSA9IHdpdGgweCh0eGlkKS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmICh2YWx1ZS5sZW5ndGggIT09IDY2KVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHdpdGgweChCaWdJbnQodmFsdWUpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg2NCwgJzAnKSkgPT09IHZhbHVlO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stacks/transactions/dist/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/base-x/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/base-x/src/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlLXgvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLDJDQUEyQztBQUMzQywrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2Q0FBNkM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVksU0FBUztBQUNoQztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYmFzZS14L3NyYy9pbmRleC5qcz9jZWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuLy8gYmFzZS14IGVuY29kaW5nIC8gZGVjb2Rpbmdcbi8vIENvcHlyaWdodCAoYykgMjAxOCBiYXNlLXggY29udHJpYnV0b3JzXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxOCBUaGUgQml0Y29pbiBDb3JlIGRldmVsb3BlcnMgKGJhc2U1OC5jcHApXG4vLyBEaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIHNvZnR3YXJlIGxpY2Vuc2UsIHNlZSB0aGUgYWNjb21wYW55aW5nXG4vLyBmaWxlIExJQ0VOU0Ugb3IgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAuXG5mdW5jdGlvbiBiYXNlIChBTFBIQUJFVCkge1xuICBpZiAoQUxQSEFCRVQubGVuZ3RoID49IDI1NSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdBbHBoYWJldCB0b28gbG9uZycpIH1cbiAgdmFyIEJBU0VfTUFQID0gbmV3IFVpbnQ4QXJyYXkoMjU2KVxuICBmb3IgKHZhciBqID0gMDsgaiA8IEJBU0VfTUFQLmxlbmd0aDsgaisrKSB7XG4gICAgQkFTRV9NQVBbal0gPSAyNTVcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IEFMUEhBQkVULmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHggPSBBTFBIQUJFVC5jaGFyQXQoaSlcbiAgICB2YXIgeGMgPSB4LmNoYXJDb2RlQXQoMClcbiAgICBpZiAoQkFTRV9NQVBbeGNdICE9PSAyNTUpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcih4ICsgJyBpcyBhbWJpZ3VvdXMnKSB9XG4gICAgQkFTRV9NQVBbeGNdID0gaVxuICB9XG4gIHZhciBCQVNFID0gQUxQSEFCRVQubGVuZ3RoXG4gIHZhciBMRUFERVIgPSBBTFBIQUJFVC5jaGFyQXQoMClcbiAgdmFyIEZBQ1RPUiA9IE1hdGgubG9nKEJBU0UpIC8gTWF0aC5sb2coMjU2KSAvLyBsb2coQkFTRSkgLyBsb2coMjU2KSwgcm91bmRlZCB1cFxuICB2YXIgaUZBQ1RPUiA9IE1hdGgubG9nKDI1NikgLyBNYXRoLmxvZyhCQVNFKSAvLyBsb2coMjU2KSAvIGxvZyhCQVNFKSwgcm91bmRlZCB1cFxuICBmdW5jdGlvbiBlbmNvZGUgKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgfSBlbHNlIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoc291cmNlKSkge1xuICAgICAgc291cmNlID0gbmV3IFVpbnQ4QXJyYXkoc291cmNlLmJ1ZmZlciwgc291cmNlLmJ5dGVPZmZzZXQsIHNvdXJjZS5ieXRlTGVuZ3RoKVxuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBVaW50OEFycmF5LmZyb20oc291cmNlKVxuICAgIH1cbiAgICBpZiAoIShzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBVaW50OEFycmF5JykgfVxuICAgIGlmIChzb3VyY2UubGVuZ3RoID09PSAwKSB7IHJldHVybiAnJyB9XG4gICAgICAgIC8vIFNraXAgJiBjb3VudCBsZWFkaW5nIHplcm9lcy5cbiAgICB2YXIgemVyb2VzID0gMFxuICAgIHZhciBsZW5ndGggPSAwXG4gICAgdmFyIHBiZWdpbiA9IDBcbiAgICB2YXIgcGVuZCA9IHNvdXJjZS5sZW5ndGhcbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kICYmIHNvdXJjZVtwYmVnaW5dID09PSAwKSB7XG4gICAgICBwYmVnaW4rK1xuICAgICAgemVyb2VzKytcbiAgICB9XG4gICAgICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2U1OCByZXByZXNlbnRhdGlvbi5cbiAgICB2YXIgc2l6ZSA9ICgocGVuZCAtIHBiZWdpbikgKiBpRkFDVE9SICsgMSkgPj4+IDBcbiAgICB2YXIgYjU4ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSlcbiAgICAgICAgLy8gUHJvY2VzcyB0aGUgYnl0ZXMuXG4gICAgd2hpbGUgKHBiZWdpbiAhPT0gcGVuZCkge1xuICAgICAgdmFyIGNhcnJ5ID0gc291cmNlW3BiZWdpbl1cbiAgICAgICAgICAgIC8vIEFwcGx5IFwiYjU4ID0gYjU4ICogMjU2ICsgY2hcIi5cbiAgICAgIHZhciBpID0gMFxuICAgICAgZm9yICh2YXIgaXQxID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiAoaXQxICE9PSAtMSk7IGl0MS0tLCBpKyspIHtcbiAgICAgICAgY2FycnkgKz0gKDI1NiAqIGI1OFtpdDFdKSA+Pj4gMFxuICAgICAgICBiNThbaXQxXSA9IChjYXJyeSAlIEJBU0UpID4+PiAwXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgPj4+IDBcbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5JykgfVxuICAgICAgbGVuZ3RoID0gaVxuICAgICAgcGJlZ2luKytcbiAgICB9XG4gICAgICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXMgaW4gYmFzZTU4IHJlc3VsdC5cbiAgICB2YXIgaXQyID0gc2l6ZSAtIGxlbmd0aFxuICAgIHdoaWxlIChpdDIgIT09IHNpemUgJiYgYjU4W2l0Ml0gPT09IDApIHtcbiAgICAgIGl0MisrXG4gICAgfVxuICAgICAgICAvLyBUcmFuc2xhdGUgdGhlIHJlc3VsdCBpbnRvIGEgc3RyaW5nLlxuICAgIHZhciBzdHIgPSBMRUFERVIucmVwZWF0KHplcm9lcylcbiAgICBmb3IgKDsgaXQyIDwgc2l6ZTsgKytpdDIpIHsgc3RyICs9IEFMUEhBQkVULmNoYXJBdChiNThbaXQyXSkgfVxuICAgIHJldHVybiBzdHJcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUgKHNvdXJjZSkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnc3RyaW5nJykgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBTdHJpbmcnKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KCkgfVxuICAgIHZhciBwc3ogPSAwXG4gICAgICAgIC8vIFNraXAgYW5kIGNvdW50IGxlYWRpbmcgJzEncy5cbiAgICB2YXIgemVyb2VzID0gMFxuICAgIHZhciBsZW5ndGggPSAwXG4gICAgd2hpbGUgKHNvdXJjZVtwc3pdID09PSBMRUFERVIpIHtcbiAgICAgIHplcm9lcysrXG4gICAgICBwc3orK1xuICAgIH1cbiAgICAgICAgLy8gQWxsb2NhdGUgZW5vdWdoIHNwYWNlIGluIGJpZy1lbmRpYW4gYmFzZTI1NiByZXByZXNlbnRhdGlvbi5cbiAgICB2YXIgc2l6ZSA9ICgoKHNvdXJjZS5sZW5ndGggLSBwc3opICogRkFDVE9SKSArIDEpID4+PiAwIC8vIGxvZyg1OCkgLyBsb2coMjU2KSwgcm91bmRlZCB1cC5cbiAgICB2YXIgYjI1NiA9IG5ldyBVaW50OEFycmF5KHNpemUpXG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGNoYXJhY3RlcnMuXG4gICAgd2hpbGUgKHNvdXJjZVtwc3pdKSB7XG4gICAgICAgICAgICAvLyBEZWNvZGUgY2hhcmFjdGVyXG4gICAgICB2YXIgY2FycnkgPSBCQVNFX01BUFtzb3VyY2UuY2hhckNvZGVBdChwc3opXVxuICAgICAgICAgICAgLy8gSW52YWxpZCBjaGFyYWN0ZXJcbiAgICAgIGlmIChjYXJyeSA9PT0gMjU1KSB7IHJldHVybiB9XG4gICAgICB2YXIgaSA9IDBcbiAgICAgIGZvciAodmFyIGl0MyA9IHNpemUgLSAxOyAoY2FycnkgIT09IDAgfHwgaSA8IGxlbmd0aCkgJiYgKGl0MyAhPT0gLTEpOyBpdDMtLSwgaSsrKSB7XG4gICAgICAgIGNhcnJ5ICs9IChCQVNFICogYjI1NltpdDNdKSA+Pj4gMFxuICAgICAgICBiMjU2W2l0M10gPSAoY2FycnkgJSAyNTYpID4+PiAwXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gMjU2KSA+Pj4gMFxuICAgICAgfVxuICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7IHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKSB9XG4gICAgICBsZW5ndGggPSBpXG4gICAgICBwc3orK1xuICAgIH1cbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiMjU2LlxuICAgIHZhciBpdDQgPSBzaXplIC0gbGVuZ3RoXG4gICAgd2hpbGUgKGl0NCAhPT0gc2l6ZSAmJiBiMjU2W2l0NF0gPT09IDApIHtcbiAgICAgIGl0NCsrXG4gICAgfVxuICAgIHZhciB2Y2ggPSBuZXcgVWludDhBcnJheSh6ZXJvZXMgKyAoc2l6ZSAtIGl0NCkpXG4gICAgdmFyIGogPSB6ZXJvZXNcbiAgICB3aGlsZSAoaXQ0ICE9PSBzaXplKSB7XG4gICAgICB2Y2hbaisrXSA9IGIyNTZbaXQ0KytdXG4gICAgfVxuICAgIHJldHVybiB2Y2hcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGUgKHN0cmluZykge1xuICAgIHZhciBidWZmZXIgPSBkZWNvZGVVbnNhZmUoc3RyaW5nKVxuICAgIGlmIChidWZmZXIpIHsgcmV0dXJuIGJ1ZmZlciB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb24tYmFzZScgKyBCQVNFICsgJyBjaGFyYWN0ZXInKVxuICB9XG4gIHJldHVybiB7XG4gICAgZW5jb2RlOiBlbmNvZGUsXG4gICAgZGVjb2RlVW5zYWZlOiBkZWNvZGVVbnNhZmUsXG4gICAgZGVjb2RlOiBkZWNvZGVcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBiYXNlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/base-x/src/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/ZTVlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/bs58/index.js":
/*!************************************!*\
  !*** ./node_modules/bs58/index.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const basex = __webpack_require__(/*! base-x */ \"(app-pages-browser)/./node_modules/base-x/src/index.js\")\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iczU4L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxzRUFBUTtBQUM5Qjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYnM1OC9pbmRleC5qcz8xMmUxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2V4ID0gcmVxdWlyZSgnYmFzZS14JylcbmNvbnN0IEFMUEhBQkVUID0gJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZXgoQUxQSEFCRVQpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/bs58/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/c32check/lib/address.js":
/*!**********************************************!*\
  !*** ./node_modules/c32check/lib/address.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.c32ToB58 = exports.b58ToC32 = exports.c32addressDecode = exports.c32address = exports.versions = void 0;\nconst checksum_1 = __webpack_require__(/*! ./checksum */ \"(app-pages-browser)/./node_modules/c32check/lib/checksum.js\");\nconst base58check = __webpack_require__(/*! ./base58check */ \"(app-pages-browser)/./node_modules/c32check/lib/base58check.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\nexports.versions = {\n    mainnet: {\n        p2pkh: 22,\n        p2sh: 20, // 'M'\n    },\n    testnet: {\n        p2pkh: 26,\n        p2sh: 21, // 'N'\n    },\n};\n// address conversion : bitcoin to stacks\nconst ADDR_BITCOIN_TO_STACKS = {};\nADDR_BITCOIN_TO_STACKS[0] = exports.versions.mainnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[5] = exports.versions.mainnet.p2sh;\nADDR_BITCOIN_TO_STACKS[111] = exports.versions.testnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[196] = exports.versions.testnet.p2sh;\n// address conversion : stacks to bitcoin\nconst ADDR_STACKS_TO_BITCOIN = {};\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2pkh] = 0;\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2sh] = 5;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2pkh] = 111;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2sh] = 196;\n/**\n * Make a c32check address with the given version and hash160\n * The only difference between a c32check string and c32 address\n * is that the letter 'S' is pre-pended.\n * @param {number} version - the address version number\n * @param {string} hash160hex - the hash160 to encode (must be a hash160)\n * @returns {string} the address\n */\nfunction c32address(version, hash160hex) {\n    if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n        throw new Error('Invalid argument: not a hash160 hex string');\n    }\n    const c32string = (0, checksum_1.c32checkEncode)(version, hash160hex);\n    return `S${c32string}`;\n}\nexports.c32address = c32address;\n/**\n * Decode a c32 address into its version and hash160\n * @param {string} c32addr - the c32check-encoded address\n * @returns {[number, string]} a tuple with the version and hash160\n */\nfunction c32addressDecode(c32addr) {\n    if (c32addr.length <= 5) {\n        throw new Error('Invalid c32 address: invalid length');\n    }\n    if (c32addr[0] != 'S') {\n        throw new Error('Invalid c32 address: must start with \"S\"');\n    }\n    return (0, checksum_1.c32checkDecode)(c32addr.slice(1));\n}\nexports.c32addressDecode = c32addressDecode;\n/*\n * Convert a base58check address to a c32check address.\n * Try to convert the version number if one is not given.\n * @param {string} b58check - the base58check encoded address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the c32 address with the given version number (or the\n *   semantically-equivalent c32 version number, if not given)\n */\nfunction b58ToC32(b58check, version = -1) {\n    const addrInfo = base58check.decode(b58check);\n    const hash160String = (0, utils_1.bytesToHex)(addrInfo.data);\n    const addrVersion = parseInt((0, utils_1.bytesToHex)(addrInfo.prefix), 16);\n    let stacksVersion;\n    if (version < 0) {\n        stacksVersion = addrVersion;\n        if (ADDR_BITCOIN_TO_STACKS[addrVersion] !== undefined) {\n            stacksVersion = ADDR_BITCOIN_TO_STACKS[addrVersion];\n        }\n    }\n    else {\n        stacksVersion = version;\n    }\n    return c32address(stacksVersion, hash160String);\n}\nexports.b58ToC32 = b58ToC32;\n/*\n * Convert a c32check address to a base58check address.\n * @param {string} c32string - the c32check address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the base58 address with the given version number (or the\n *    semantically-equivalent bitcoin version number, if not given)\n */\nfunction c32ToB58(c32string, version = -1) {\n    const addrInfo = c32addressDecode(c32string);\n    const stacksVersion = addrInfo[0];\n    const hash160String = addrInfo[1];\n    let bitcoinVersion;\n    if (version < 0) {\n        bitcoinVersion = stacksVersion;\n        if (ADDR_STACKS_TO_BITCOIN[stacksVersion] !== undefined) {\n            bitcoinVersion = ADDR_STACKS_TO_BITCOIN[stacksVersion];\n        }\n    }\n    else {\n        bitcoinVersion = version;\n    }\n    let prefix = bitcoinVersion.toString(16);\n    if (prefix.length === 1) {\n        prefix = `0${prefix}`;\n    }\n    return base58check.encode(hash160String, prefix);\n}\nexports.c32ToB58 = c32ToB58;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jMzJjaGVjay9saWIvYWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxnQkFBZ0IsR0FBRyx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0I7QUFDdEcsbUJBQW1CLG1CQUFPLENBQUMsK0VBQVk7QUFDdkMsb0JBQW9CLG1CQUFPLENBQUMscUZBQWU7QUFDM0MsZ0JBQWdCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQzdDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0Esd0NBQXdDLEdBQUc7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsZUFBZSxVQUFVO0FBQ3pCO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsT0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2MzMmNoZWNrL2xpYi9hZGRyZXNzLmpzPzBmZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmMzMlRvQjU4ID0gZXhwb3J0cy5iNThUb0MzMiA9IGV4cG9ydHMuYzMyYWRkcmVzc0RlY29kZSA9IGV4cG9ydHMuYzMyYWRkcmVzcyA9IGV4cG9ydHMudmVyc2lvbnMgPSB2b2lkIDA7XG5jb25zdCBjaGVja3N1bV8xID0gcmVxdWlyZShcIi4vY2hlY2tzdW1cIik7XG5jb25zdCBiYXNlNThjaGVjayA9IHJlcXVpcmUoXCIuL2Jhc2U1OGNoZWNrXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCIpO1xuZXhwb3J0cy52ZXJzaW9ucyA9IHtcbiAgICBtYWlubmV0OiB7XG4gICAgICAgIHAycGtoOiAyMixcbiAgICAgICAgcDJzaDogMjAsIC8vICdNJ1xuICAgIH0sXG4gICAgdGVzdG5ldDoge1xuICAgICAgICBwMnBraDogMjYsXG4gICAgICAgIHAyc2g6IDIxLCAvLyAnTidcbiAgICB9LFxufTtcbi8vIGFkZHJlc3MgY29udmVyc2lvbiA6IGJpdGNvaW4gdG8gc3RhY2tzXG5jb25zdCBBRERSX0JJVENPSU5fVE9fU1RBQ0tTID0ge307XG5BRERSX0JJVENPSU5fVE9fU1RBQ0tTWzBdID0gZXhwb3J0cy52ZXJzaW9ucy5tYWlubmV0LnAycGtoO1xuQUREUl9CSVRDT0lOX1RPX1NUQUNLU1s1XSA9IGV4cG9ydHMudmVyc2lvbnMubWFpbm5ldC5wMnNoO1xuQUREUl9CSVRDT0lOX1RPX1NUQUNLU1sxMTFdID0gZXhwb3J0cy52ZXJzaW9ucy50ZXN0bmV0LnAycGtoO1xuQUREUl9CSVRDT0lOX1RPX1NUQUNLU1sxOTZdID0gZXhwb3J0cy52ZXJzaW9ucy50ZXN0bmV0LnAyc2g7XG4vLyBhZGRyZXNzIGNvbnZlcnNpb24gOiBzdGFja3MgdG8gYml0Y29pblxuY29uc3QgQUREUl9TVEFDS1NfVE9fQklUQ09JTiA9IHt9O1xuQUREUl9TVEFDS1NfVE9fQklUQ09JTltleHBvcnRzLnZlcnNpb25zLm1haW5uZXQucDJwa2hdID0gMDtcbkFERFJfU1RBQ0tTX1RPX0JJVENPSU5bZXhwb3J0cy52ZXJzaW9ucy5tYWlubmV0LnAyc2hdID0gNTtcbkFERFJfU1RBQ0tTX1RPX0JJVENPSU5bZXhwb3J0cy52ZXJzaW9ucy50ZXN0bmV0LnAycGtoXSA9IDExMTtcbkFERFJfU1RBQ0tTX1RPX0JJVENPSU5bZXhwb3J0cy52ZXJzaW9ucy50ZXN0bmV0LnAyc2hdID0gMTk2O1xuLyoqXG4gKiBNYWtlIGEgYzMyY2hlY2sgYWRkcmVzcyB3aXRoIHRoZSBnaXZlbiB2ZXJzaW9uIGFuZCBoYXNoMTYwXG4gKiBUaGUgb25seSBkaWZmZXJlbmNlIGJldHdlZW4gYSBjMzJjaGVjayBzdHJpbmcgYW5kIGMzMiBhZGRyZXNzXG4gKiBpcyB0aGF0IHRoZSBsZXR0ZXIgJ1MnIGlzIHByZS1wZW5kZWQuXG4gKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvbiAtIHRoZSBhZGRyZXNzIHZlcnNpb24gbnVtYmVyXG4gKiBAcGFyYW0ge3N0cmluZ30gaGFzaDE2MGhleCAtIHRoZSBoYXNoMTYwIHRvIGVuY29kZSAobXVzdCBiZSBhIGhhc2gxNjApXG4gKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgYWRkcmVzc1xuICovXG5mdW5jdGlvbiBjMzJhZGRyZXNzKHZlcnNpb24sIGhhc2gxNjBoZXgpIHtcbiAgICBpZiAoIWhhc2gxNjBoZXgubWF0Y2goL15bMC05YS1mQS1GXXs0MH0kLykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGFyZ3VtZW50OiBub3QgYSBoYXNoMTYwIGhleCBzdHJpbmcnKTtcbiAgICB9XG4gICAgY29uc3QgYzMyc3RyaW5nID0gKDAsIGNoZWNrc3VtXzEuYzMyY2hlY2tFbmNvZGUpKHZlcnNpb24sIGhhc2gxNjBoZXgpO1xuICAgIHJldHVybiBgUyR7YzMyc3RyaW5nfWA7XG59XG5leHBvcnRzLmMzMmFkZHJlc3MgPSBjMzJhZGRyZXNzO1xuLyoqXG4gKiBEZWNvZGUgYSBjMzIgYWRkcmVzcyBpbnRvIGl0cyB2ZXJzaW9uIGFuZCBoYXNoMTYwXG4gKiBAcGFyYW0ge3N0cmluZ30gYzMyYWRkciAtIHRoZSBjMzJjaGVjay1lbmNvZGVkIGFkZHJlc3NcbiAqIEByZXR1cm5zIHtbbnVtYmVyLCBzdHJpbmddfSBhIHR1cGxlIHdpdGggdGhlIHZlcnNpb24gYW5kIGhhc2gxNjBcbiAqL1xuZnVuY3Rpb24gYzMyYWRkcmVzc0RlY29kZShjMzJhZGRyKSB7XG4gICAgaWYgKGMzMmFkZHIubGVuZ3RoIDw9IDUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGMzMiBhZGRyZXNzOiBpbnZhbGlkIGxlbmd0aCcpO1xuICAgIH1cbiAgICBpZiAoYzMyYWRkclswXSAhPSAnUycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGMzMiBhZGRyZXNzOiBtdXN0IHN0YXJ0IHdpdGggXCJTXCInKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBjaGVja3N1bV8xLmMzMmNoZWNrRGVjb2RlKShjMzJhZGRyLnNsaWNlKDEpKTtcbn1cbmV4cG9ydHMuYzMyYWRkcmVzc0RlY29kZSA9IGMzMmFkZHJlc3NEZWNvZGU7XG4vKlxuICogQ29udmVydCBhIGJhc2U1OGNoZWNrIGFkZHJlc3MgdG8gYSBjMzJjaGVjayBhZGRyZXNzLlxuICogVHJ5IHRvIGNvbnZlcnQgdGhlIHZlcnNpb24gbnVtYmVyIGlmIG9uZSBpcyBub3QgZ2l2ZW4uXG4gKiBAcGFyYW0ge3N0cmluZ30gYjU4Y2hlY2sgLSB0aGUgYmFzZTU4Y2hlY2sgZW5jb2RlZCBhZGRyZXNzXG4gKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvbiAtIHRoZSB2ZXJzaW9uIG51bWJlciwgaWYgbm90IGluZmVycmVkIGZyb20gdGhlIGFkZHJlc3NcbiAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSBjMzIgYWRkcmVzcyB3aXRoIHRoZSBnaXZlbiB2ZXJzaW9uIG51bWJlciAob3IgdGhlXG4gKiAgIHNlbWFudGljYWxseS1lcXVpdmFsZW50IGMzMiB2ZXJzaW9uIG51bWJlciwgaWYgbm90IGdpdmVuKVxuICovXG5mdW5jdGlvbiBiNThUb0MzMihiNThjaGVjaywgdmVyc2lvbiA9IC0xKSB7XG4gICAgY29uc3QgYWRkckluZm8gPSBiYXNlNThjaGVjay5kZWNvZGUoYjU4Y2hlY2spO1xuICAgIGNvbnN0IGhhc2gxNjBTdHJpbmcgPSAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KShhZGRySW5mby5kYXRhKTtcbiAgICBjb25zdCBhZGRyVmVyc2lvbiA9IHBhcnNlSW50KCgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKGFkZHJJbmZvLnByZWZpeCksIDE2KTtcbiAgICBsZXQgc3RhY2tzVmVyc2lvbjtcbiAgICBpZiAodmVyc2lvbiA8IDApIHtcbiAgICAgICAgc3RhY2tzVmVyc2lvbiA9IGFkZHJWZXJzaW9uO1xuICAgICAgICBpZiAoQUREUl9CSVRDT0lOX1RPX1NUQUNLU1thZGRyVmVyc2lvbl0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3RhY2tzVmVyc2lvbiA9IEFERFJfQklUQ09JTl9UT19TVEFDS1NbYWRkclZlcnNpb25dO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzdGFja3NWZXJzaW9uID0gdmVyc2lvbjtcbiAgICB9XG4gICAgcmV0dXJuIGMzMmFkZHJlc3Moc3RhY2tzVmVyc2lvbiwgaGFzaDE2MFN0cmluZyk7XG59XG5leHBvcnRzLmI1OFRvQzMyID0gYjU4VG9DMzI7XG4vKlxuICogQ29udmVydCBhIGMzMmNoZWNrIGFkZHJlc3MgdG8gYSBiYXNlNThjaGVjayBhZGRyZXNzLlxuICogQHBhcmFtIHtzdHJpbmd9IGMzMnN0cmluZyAtIHRoZSBjMzJjaGVjayBhZGRyZXNzXG4gKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvbiAtIHRoZSB2ZXJzaW9uIG51bWJlciwgaWYgbm90IGluZmVycmVkIGZyb20gdGhlIGFkZHJlc3NcbiAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSBiYXNlNTggYWRkcmVzcyB3aXRoIHRoZSBnaXZlbiB2ZXJzaW9uIG51bWJlciAob3IgdGhlXG4gKiAgICBzZW1hbnRpY2FsbHktZXF1aXZhbGVudCBiaXRjb2luIHZlcnNpb24gbnVtYmVyLCBpZiBub3QgZ2l2ZW4pXG4gKi9cbmZ1bmN0aW9uIGMzMlRvQjU4KGMzMnN0cmluZywgdmVyc2lvbiA9IC0xKSB7XG4gICAgY29uc3QgYWRkckluZm8gPSBjMzJhZGRyZXNzRGVjb2RlKGMzMnN0cmluZyk7XG4gICAgY29uc3Qgc3RhY2tzVmVyc2lvbiA9IGFkZHJJbmZvWzBdO1xuICAgIGNvbnN0IGhhc2gxNjBTdHJpbmcgPSBhZGRySW5mb1sxXTtcbiAgICBsZXQgYml0Y29pblZlcnNpb247XG4gICAgaWYgKHZlcnNpb24gPCAwKSB7XG4gICAgICAgIGJpdGNvaW5WZXJzaW9uID0gc3RhY2tzVmVyc2lvbjtcbiAgICAgICAgaWYgKEFERFJfU1RBQ0tTX1RPX0JJVENPSU5bc3RhY2tzVmVyc2lvbl0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYml0Y29pblZlcnNpb24gPSBBRERSX1NUQUNLU19UT19CSVRDT0lOW3N0YWNrc1ZlcnNpb25dO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBiaXRjb2luVmVyc2lvbiA9IHZlcnNpb247XG4gICAgfVxuICAgIGxldCBwcmVmaXggPSBiaXRjb2luVmVyc2lvbi50b1N0cmluZygxNik7XG4gICAgaWYgKHByZWZpeC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcHJlZml4ID0gYDAke3ByZWZpeH1gO1xuICAgIH1cbiAgICByZXR1cm4gYmFzZTU4Y2hlY2suZW5jb2RlKGhhc2gxNjBTdHJpbmcsIHByZWZpeCk7XG59XG5leHBvcnRzLmMzMlRvQjU4ID0gYzMyVG9CNTg7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/c32check/lib/address.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/c32check/lib/base58check.js":
/*!**************************************************!*\
  !*** ./node_modules/c32check/lib/base58check.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.encode = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/sha256.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\nconst basex = __webpack_require__(/*! base-x */ \"(app-pages-browser)/./node_modules/base-x/src/index.js\");\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix = '00') {\n    const dataBytes = typeof data === 'string' ? (0, utils_1.hexToBytes)(data) : data;\n    const prefixBytes = typeof prefix === 'string' ? (0, utils_1.hexToBytes)(prefix) : data;\n    if (!(dataBytes instanceof Uint8Array) || !(prefixBytes instanceof Uint8Array)) {\n        throw new TypeError('Argument must be of type Uint8Array or string');\n    }\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    return basex(ALPHABET).encode([...prefixBytes, ...dataBytes, ...checksum.slice(0, 4)]);\n}\nexports.encode = encode;\nfunction decode(string) {\n    const bytes = basex(ALPHABET).decode(string);\n    const prefixBytes = bytes.slice(0, 1);\n    const dataBytes = bytes.slice(1, -4);\n    // todo: for better performance replace spread with `concatBytes` method\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    bytes.slice(-4).forEach((check, index) => {\n        if (check !== checksum[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    return { prefix: prefixBytes, data: dataBytes };\n}\nexports.decode = decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jMzJjaGVjay9saWIvYmFzZTU4Y2hlY2suanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFzQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDN0MsY0FBYyxtQkFBTyxDQUFDLHNFQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWE7QUFDYjtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2MzMmNoZWNrL2xpYi9iYXNlNThjaGVjay5qcz82Y2I1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS93emJnL2Jhc2U1OGNoZWNrXG4gKiBAQXV0aG9yOiB6eWNcbiAqIEBEYXRlOiAgIDIwMTYtMDktMTEgMjM6MzY6MDVcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCIpO1xuY29uc3QgYmFzZXggPSByZXF1aXJlKFwiYmFzZS14XCIpO1xuY29uc3QgQUxQSEFCRVQgPSAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eic7XG5mdW5jdGlvbiBlbmNvZGUoZGF0YSwgcHJlZml4ID0gJzAwJykge1xuICAgIGNvbnN0IGRhdGFCeXRlcyA9IHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJyA/ICgwLCB1dGlsc18xLmhleFRvQnl0ZXMpKGRhdGEpIDogZGF0YTtcbiAgICBjb25zdCBwcmVmaXhCeXRlcyA9IHR5cGVvZiBwcmVmaXggPT09ICdzdHJpbmcnID8gKDAsIHV0aWxzXzEuaGV4VG9CeXRlcykocHJlZml4KSA6IGRhdGE7XG4gICAgaWYgKCEoZGF0YUJ5dGVzIGluc3RhbmNlb2YgVWludDhBcnJheSkgfHwgIShwcmVmaXhCeXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBVaW50OEFycmF5IG9yIHN0cmluZycpO1xuICAgIH1cbiAgICBjb25zdCBjaGVja3N1bSA9ICgwLCBzaGEyNTZfMS5zaGEyNTYpKCgwLCBzaGEyNTZfMS5zaGEyNTYpKG5ldyBVaW50OEFycmF5KFsuLi5wcmVmaXhCeXRlcywgLi4uZGF0YUJ5dGVzXSkpKTtcbiAgICByZXR1cm4gYmFzZXgoQUxQSEFCRVQpLmVuY29kZShbLi4ucHJlZml4Qnl0ZXMsIC4uLmRhdGFCeXRlcywgLi4uY2hlY2tzdW0uc2xpY2UoMCwgNCldKTtcbn1cbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuZnVuY3Rpb24gZGVjb2RlKHN0cmluZykge1xuICAgIGNvbnN0IGJ5dGVzID0gYmFzZXgoQUxQSEFCRVQpLmRlY29kZShzdHJpbmcpO1xuICAgIGNvbnN0IHByZWZpeEJ5dGVzID0gYnl0ZXMuc2xpY2UoMCwgMSk7XG4gICAgY29uc3QgZGF0YUJ5dGVzID0gYnl0ZXMuc2xpY2UoMSwgLTQpO1xuICAgIC8vIHRvZG86IGZvciBiZXR0ZXIgcGVyZm9ybWFuY2UgcmVwbGFjZSBzcHJlYWQgd2l0aCBgY29uY2F0Qnl0ZXNgIG1ldGhvZFxuICAgIGNvbnN0IGNoZWNrc3VtID0gKDAsIHNoYTI1Nl8xLnNoYTI1NikoKDAsIHNoYTI1Nl8xLnNoYTI1NikobmV3IFVpbnQ4QXJyYXkoWy4uLnByZWZpeEJ5dGVzLCAuLi5kYXRhQnl0ZXNdKSkpO1xuICAgIGJ5dGVzLnNsaWNlKC00KS5mb3JFYWNoKChjaGVjaywgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKGNoZWNrICE9PSBjaGVja3N1bVtpbmRleF0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGVja3N1bScpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgcHJlZml4OiBwcmVmaXhCeXRlcywgZGF0YTogZGF0YUJ5dGVzIH07XG59XG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/c32check/lib/base58check.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/c32check/lib/checksum.js":
/*!***********************************************!*\
  !*** ./node_modules/c32check/lib/checksum.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.c32checkDecode = exports.c32checkEncode = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/sha256.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\nconst encoding_1 = __webpack_require__(/*! ./encoding */ \"(app-pages-browser)/./node_modules/c32check/lib/encoding.js\");\n/**\n * Get the c32check checksum of a hex-encoded string\n * @param {string} dataHex - the hex string\n * @returns {string} the c32 checksum, as a bin-encoded string\n */\nfunction c32checksum(dataHex) {\n    const dataHash = (0, sha256_1.sha256)((0, sha256_1.sha256)((0, utils_1.hexToBytes)(dataHex)));\n    const checksum = (0, utils_1.bytesToHex)(dataHash.slice(0, 4));\n    return checksum;\n}\n/**\n * Encode a hex string as a c32check string.  This is a lot like how\n * base58check works in Bitcoin-land, but this algorithm uses the\n * z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * calculate the c32checksum of version + data\n * * c32encode version + data + c32checksum\n * @param {number} version - the version string (between 0 and 31)\n * @param {string} data - the data to encode\n * @returns {string} the c32check representation\n */\nfunction c32checkEncode(version, data) {\n    if (version < 0 || version >= 32) {\n        throw new Error('Invalid version (must be between 0 and 31)');\n    }\n    if (!data.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Invalid data (not a hex string)');\n    }\n    data = data.toLowerCase();\n    if (data.length % 2 !== 0) {\n        data = `0${data}`;\n    }\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    const checksumHex = c32checksum(`${versionHex}${data}`);\n    const c32str = (0, encoding_1.c32encode)(`${data}${checksumHex}`);\n    return `${encoding_1.c32[version]}${c32str}`;\n}\nexports.c32checkEncode = c32checkEncode;\n/*\n * Decode a c32check string back into its version and data payload.  This is\n * a lot like how base58check works in Bitcoin-land, but this algorithm uses\n * the z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * extract the version, data, and checksum\n * * verify the checksum matches c32checksum(version + data)\n * * return data\n * @param {string} c32data - the c32check-encoded string\n * @returns {array} [version (number), data (string)].  The returned data\n * will be a hex string.  Throws an exception if the checksum does not match.\n */\nfunction c32checkDecode(c32data) {\n    c32data = (0, encoding_1.c32normalize)(c32data);\n    const dataHex = (0, encoding_1.c32decode)(c32data.slice(1));\n    const versionChar = c32data[0];\n    const version = encoding_1.c32.indexOf(versionChar);\n    const checksum = dataHex.slice(-8);\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    if (c32checksum(`${versionHex}${dataHex.substring(0, dataHex.length - 8)}`) !== checksum) {\n        throw new Error('Invalid c32check string: checksum mismatch');\n    }\n    return [version, dataHex.substring(0, dataHex.length - 8)];\n}\nexports.c32checkDecode = c32checkDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jMzJjaGVjay9saWIvY2hlY2tzdW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsc0JBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFzQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDN0MsbUJBQW1CLG1CQUFPLENBQUMsK0VBQVk7QUFDdkM7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixLQUFLO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0EsdUNBQXVDLFdBQVcsRUFBRSxLQUFLO0FBQ3pELGdEQUFnRCxLQUFLLEVBQUUsWUFBWTtBQUNuRSxjQUFjLHdCQUF3QixFQUFFLE9BQU87QUFDL0M7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsV0FBVztBQUNwQztBQUNBLHVCQUF1QixXQUFXLEVBQUUseUNBQXlDO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jMzJjaGVjay9saWIvY2hlY2tzdW0uanM/MzlmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYzMyY2hlY2tEZWNvZGUgPSBleHBvcnRzLmMzMmNoZWNrRW5jb2RlID0gdm9pZCAwO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvdXRpbHNcIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIi4vZW5jb2RpbmdcIik7XG4vKipcbiAqIEdldCB0aGUgYzMyY2hlY2sgY2hlY2tzdW0gb2YgYSBoZXgtZW5jb2RlZCBzdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhSGV4IC0gdGhlIGhleCBzdHJpbmdcbiAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSBjMzIgY2hlY2tzdW0sIGFzIGEgYmluLWVuY29kZWQgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGMzMmNoZWNrc3VtKGRhdGFIZXgpIHtcbiAgICBjb25zdCBkYXRhSGFzaCA9ICgwLCBzaGEyNTZfMS5zaGEyNTYpKCgwLCBzaGEyNTZfMS5zaGEyNTYpKCgwLCB1dGlsc18xLmhleFRvQnl0ZXMpKGRhdGFIZXgpKSk7XG4gICAgY29uc3QgY2hlY2tzdW0gPSAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KShkYXRhSGFzaC5zbGljZSgwLCA0KSk7XG4gICAgcmV0dXJuIGNoZWNrc3VtO1xufVxuLyoqXG4gKiBFbmNvZGUgYSBoZXggc3RyaW5nIGFzIGEgYzMyY2hlY2sgc3RyaW5nLiAgVGhpcyBpcyBhIGxvdCBsaWtlIGhvd1xuICogYmFzZTU4Y2hlY2sgd29ya3MgaW4gQml0Y29pbi1sYW5kLCBidXQgdGhpcyBhbGdvcml0aG0gdXNlcyB0aGVcbiAqIHotYmFzZS0zMiBhbHBoYWJldCBpbnN0ZWFkIG9mIHRoZSBiYXNlNTggYWxwaGFiZXQuICBUaGUgYWxnb3JpdGhtXG4gKiBpcyBhcyBmb2xsb3dzOlxuICogKiBjYWxjdWxhdGUgdGhlIGMzMmNoZWNrc3VtIG9mIHZlcnNpb24gKyBkYXRhXG4gKiAqIGMzMmVuY29kZSB2ZXJzaW9uICsgZGF0YSArIGMzMmNoZWNrc3VtXG4gKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvbiAtIHRoZSB2ZXJzaW9uIHN0cmluZyAoYmV0d2VlbiAwIGFuZCAzMSlcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhIC0gdGhlIGRhdGEgdG8gZW5jb2RlXG4gKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgYzMyY2hlY2sgcmVwcmVzZW50YXRpb25cbiAqL1xuZnVuY3Rpb24gYzMyY2hlY2tFbmNvZGUodmVyc2lvbiwgZGF0YSkge1xuICAgIGlmICh2ZXJzaW9uIDwgMCB8fCB2ZXJzaW9uID49IDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB2ZXJzaW9uIChtdXN0IGJlIGJldHdlZW4gMCBhbmQgMzEpJyk7XG4gICAgfVxuICAgIGlmICghZGF0YS5tYXRjaCgvXlswLTlhLWZBLUZdKiQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZGF0YSAobm90IGEgaGV4IHN0cmluZyknKTtcbiAgICB9XG4gICAgZGF0YSA9IGRhdGEudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoZGF0YS5sZW5ndGggJSAyICE9PSAwKSB7XG4gICAgICAgIGRhdGEgPSBgMCR7ZGF0YX1gO1xuICAgIH1cbiAgICBsZXQgdmVyc2lvbkhleCA9IHZlcnNpb24udG9TdHJpbmcoMTYpO1xuICAgIGlmICh2ZXJzaW9uSGV4Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB2ZXJzaW9uSGV4ID0gYDAke3ZlcnNpb25IZXh9YDtcbiAgICB9XG4gICAgY29uc3QgY2hlY2tzdW1IZXggPSBjMzJjaGVja3N1bShgJHt2ZXJzaW9uSGV4fSR7ZGF0YX1gKTtcbiAgICBjb25zdCBjMzJzdHIgPSAoMCwgZW5jb2RpbmdfMS5jMzJlbmNvZGUpKGAke2RhdGF9JHtjaGVja3N1bUhleH1gKTtcbiAgICByZXR1cm4gYCR7ZW5jb2RpbmdfMS5jMzJbdmVyc2lvbl19JHtjMzJzdHJ9YDtcbn1cbmV4cG9ydHMuYzMyY2hlY2tFbmNvZGUgPSBjMzJjaGVja0VuY29kZTtcbi8qXG4gKiBEZWNvZGUgYSBjMzJjaGVjayBzdHJpbmcgYmFjayBpbnRvIGl0cyB2ZXJzaW9uIGFuZCBkYXRhIHBheWxvYWQuICBUaGlzIGlzXG4gKiBhIGxvdCBsaWtlIGhvdyBiYXNlNThjaGVjayB3b3JrcyBpbiBCaXRjb2luLWxhbmQsIGJ1dCB0aGlzIGFsZ29yaXRobSB1c2VzXG4gKiB0aGUgei1iYXNlLTMyIGFscGhhYmV0IGluc3RlYWQgb2YgdGhlIGJhc2U1OCBhbHBoYWJldC4gIFRoZSBhbGdvcml0aG1cbiAqIGlzIGFzIGZvbGxvd3M6XG4gKiAqIGV4dHJhY3QgdGhlIHZlcnNpb24sIGRhdGEsIGFuZCBjaGVja3N1bVxuICogKiB2ZXJpZnkgdGhlIGNoZWNrc3VtIG1hdGNoZXMgYzMyY2hlY2tzdW0odmVyc2lvbiArIGRhdGEpXG4gKiAqIHJldHVybiBkYXRhXG4gKiBAcGFyYW0ge3N0cmluZ30gYzMyZGF0YSAtIHRoZSBjMzJjaGVjay1lbmNvZGVkIHN0cmluZ1xuICogQHJldHVybnMge2FycmF5fSBbdmVyc2lvbiAobnVtYmVyKSwgZGF0YSAoc3RyaW5nKV0uICBUaGUgcmV0dXJuZWQgZGF0YVxuICogd2lsbCBiZSBhIGhleCBzdHJpbmcuICBUaHJvd3MgYW4gZXhjZXB0aW9uIGlmIHRoZSBjaGVja3N1bSBkb2VzIG5vdCBtYXRjaC5cbiAqL1xuZnVuY3Rpb24gYzMyY2hlY2tEZWNvZGUoYzMyZGF0YSkge1xuICAgIGMzMmRhdGEgPSAoMCwgZW5jb2RpbmdfMS5jMzJub3JtYWxpemUpKGMzMmRhdGEpO1xuICAgIGNvbnN0IGRhdGFIZXggPSAoMCwgZW5jb2RpbmdfMS5jMzJkZWNvZGUpKGMzMmRhdGEuc2xpY2UoMSkpO1xuICAgIGNvbnN0IHZlcnNpb25DaGFyID0gYzMyZGF0YVswXTtcbiAgICBjb25zdCB2ZXJzaW9uID0gZW5jb2RpbmdfMS5jMzIuaW5kZXhPZih2ZXJzaW9uQ2hhcik7XG4gICAgY29uc3QgY2hlY2tzdW0gPSBkYXRhSGV4LnNsaWNlKC04KTtcbiAgICBsZXQgdmVyc2lvbkhleCA9IHZlcnNpb24udG9TdHJpbmcoMTYpO1xuICAgIGlmICh2ZXJzaW9uSGV4Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB2ZXJzaW9uSGV4ID0gYDAke3ZlcnNpb25IZXh9YDtcbiAgICB9XG4gICAgaWYgKGMzMmNoZWNrc3VtKGAke3ZlcnNpb25IZXh9JHtkYXRhSGV4LnN1YnN0cmluZygwLCBkYXRhSGV4Lmxlbmd0aCAtIDgpfWApICE9PSBjaGVja3N1bSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgYzMyY2hlY2sgc3RyaW5nOiBjaGVja3N1bSBtaXNtYXRjaCcpO1xuICAgIH1cbiAgICByZXR1cm4gW3ZlcnNpb24sIGRhdGFIZXguc3Vic3RyaW5nKDAsIGRhdGFIZXgubGVuZ3RoIC0gOCldO1xufVxuZXhwb3J0cy5jMzJjaGVja0RlY29kZSA9IGMzMmNoZWNrRGVjb2RlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/c32check/lib/checksum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/c32check/lib/encoding.js":
/*!***********************************************!*\
  !*** ./node_modules/c32check/lib/encoding.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.c32decode = exports.c32normalize = exports.c32encode = exports.c32 = void 0;\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\nexports.c32 = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nconst hex = '0123456789abcdef';\n/**\n * Encode a hex string as a c32 string.  Note that the hex string is assumed\n * to be big-endian (and the resulting c32 string will be as well).\n * @param {string} inputHex - the input to encode\n * @param {number} minLength - the minimum length of the c32 string\n * @returns {string} the c32check-encoded representation of the data, as a string\n */\nfunction c32encode(inputHex, minLength) {\n    // must be hex\n    if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Not a hex-encoded string');\n    }\n    if (inputHex.length % 2 !== 0) {\n        inputHex = `0${inputHex}`;\n    }\n    inputHex = inputHex.toLowerCase();\n    let res = [];\n    let carry = 0;\n    for (let i = inputHex.length - 1; i >= 0; i--) {\n        if (carry < 4) {\n            const currentCode = hex.indexOf(inputHex[i]) >> carry;\n            let nextCode = 0;\n            if (i !== 0) {\n                nextCode = hex.indexOf(inputHex[i - 1]);\n            }\n            // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n            const nextBits = 1 + carry;\n            const nextLowBits = nextCode % (1 << nextBits) << (5 - nextBits);\n            const curC32Digit = exports.c32[currentCode + nextLowBits];\n            carry = nextBits;\n            res.unshift(curC32Digit);\n        }\n        else {\n            carry = 0;\n        }\n    }\n    let C32leadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            C32leadingZeros++;\n        }\n    }\n    res = res.slice(C32leadingZeros);\n    const zeroPrefix = new TextDecoder().decode((0, utils_1.hexToBytes)(inputHex)).match(/^\\u0000*/);\n    const numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n    for (let i = 0; i < numLeadingZeroBytesInHex; i++) {\n        res.unshift(exports.c32[0]);\n    }\n    if (minLength) {\n        const count = minLength - res.length;\n        for (let i = 0; i < count; i++) {\n            res.unshift(exports.c32[0]);\n        }\n    }\n    return res.join('');\n}\nexports.c32encode = c32encode;\n/*\n * Normalize a c32 string\n * @param {string} c32input - the c32-encoded input string\n * @returns {string} the canonical representation of the c32 input string\n */\nfunction c32normalize(c32input) {\n    // must be upper-case\n    // replace all O's with 0's\n    // replace all I's and L's with 1's\n    return c32input.toUpperCase().replace(/O/g, '0').replace(/L|I/g, '1');\n}\nexports.c32normalize = c32normalize;\n/*\n * Decode a c32 string back into a hex string.  Note that the c32 input\n * string is assumed to be big-endian (and the resulting hex string will\n * be as well).\n * @param {string} c32input - the c32-encoded input to decode\n * @param {number} minLength - the minimum length of the output hex string (in bytes)\n * @returns {string} the hex-encoded representation of the data, as a string\n */\nfunction c32decode(c32input, minLength) {\n    c32input = c32normalize(c32input);\n    // must result in a c32 string\n    if (!c32input.match(`^[${exports.c32}]*$`)) {\n        throw new Error('Not a c32-encoded string');\n    }\n    const zeroPrefix = c32input.match(`^${exports.c32[0]}*`);\n    const numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n    let res = [];\n    let carry = 0;\n    let carryBits = 0;\n    for (let i = c32input.length - 1; i >= 0; i--) {\n        if (carryBits === 4) {\n            res.unshift(hex[carry]);\n            carryBits = 0;\n            carry = 0;\n        }\n        const currentCode = exports.c32.indexOf(c32input[i]) << carryBits;\n        const currentValue = currentCode + carry;\n        const currentHexDigit = hex[currentValue % 16];\n        carryBits += 1;\n        carry = currentValue >> 4;\n        if (carry > 1 << carryBits) {\n            throw new Error('Panic error in decoding.');\n        }\n        res.unshift(currentHexDigit);\n    }\n    // one last carry\n    res.unshift(hex[carry]);\n    if (res.length % 2 === 1) {\n        res.unshift('0');\n    }\n    let hexLeadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            hexLeadingZeros++;\n        }\n    }\n    res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n    let hexStr = res.join('');\n    for (let i = 0; i < numLeadingZeroBytes; i++) {\n        hexStr = `00${hexStr}`;\n    }\n    if (minLength) {\n        const count = minLength * 2 - hexStr.length;\n        for (let i = 0; i < count; i += 2) {\n            hexStr = `00${hexStr}`;\n        }\n    }\n    return hexStr;\n}\nexports.c32decode = c32decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/c32check/lib/encoding.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/c32check/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/c32check/lib/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.b58ToC32 = exports.c32ToB58 = exports.versions = exports.c32normalize = exports.c32addressDecode = exports.c32address = exports.c32checkDecode = exports.c32checkEncode = exports.c32decode = exports.c32encode = void 0;\nconst encoding_1 = __webpack_require__(/*! ./encoding */ \"(app-pages-browser)/./node_modules/c32check/lib/encoding.js\");\nObject.defineProperty(exports, \"c32encode\", ({ enumerable: true, get: function () { return encoding_1.c32encode; } }));\nObject.defineProperty(exports, \"c32decode\", ({ enumerable: true, get: function () { return encoding_1.c32decode; } }));\nObject.defineProperty(exports, \"c32normalize\", ({ enumerable: true, get: function () { return encoding_1.c32normalize; } }));\nconst checksum_1 = __webpack_require__(/*! ./checksum */ \"(app-pages-browser)/./node_modules/c32check/lib/checksum.js\");\nObject.defineProperty(exports, \"c32checkEncode\", ({ enumerable: true, get: function () { return checksum_1.c32checkEncode; } }));\nObject.defineProperty(exports, \"c32checkDecode\", ({ enumerable: true, get: function () { return checksum_1.c32checkDecode; } }));\nconst address_1 = __webpack_require__(/*! ./address */ \"(app-pages-browser)/./node_modules/c32check/lib/address.js\");\nObject.defineProperty(exports, \"c32address\", ({ enumerable: true, get: function () { return address_1.c32address; } }));\nObject.defineProperty(exports, \"c32addressDecode\", ({ enumerable: true, get: function () { return address_1.c32addressDecode; } }));\nObject.defineProperty(exports, \"c32ToB58\", ({ enumerable: true, get: function () { return address_1.c32ToB58; } }));\nObject.defineProperty(exports, \"b58ToC32\", ({ enumerable: true, get: function () { return address_1.b58ToC32; } }));\nObject.defineProperty(exports, \"versions\", ({ enumerable: true, get: function () { return address_1.versions; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jMzJjaGVjay9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsb0JBQW9CLEdBQUcsd0JBQXdCLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsc0JBQXNCLEdBQUcsaUJBQWlCLEdBQUcsaUJBQWlCO0FBQ3ZOLG1CQUFtQixtQkFBTyxDQUFDLCtFQUFZO0FBQ3ZDLDZDQUE0QyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUNwSCw2Q0FBNEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDcEgsZ0RBQStDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQzFILG1CQUFtQixtQkFBTyxDQUFDLCtFQUFZO0FBQ3ZDLGtEQUFpRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM5SCxrREFBaUQsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDOUgsa0JBQWtCLG1CQUFPLENBQUMsNkVBQVc7QUFDckMsOENBQTZDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ3JILG9EQUFtRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUNqSSw0Q0FBMkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDakgsNENBQTJDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2pILDRDQUEyQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYzMyY2hlY2svbGliL2luZGV4LmpzPzk1YTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmI1OFRvQzMyID0gZXhwb3J0cy5jMzJUb0I1OCA9IGV4cG9ydHMudmVyc2lvbnMgPSBleHBvcnRzLmMzMm5vcm1hbGl6ZSA9IGV4cG9ydHMuYzMyYWRkcmVzc0RlY29kZSA9IGV4cG9ydHMuYzMyYWRkcmVzcyA9IGV4cG9ydHMuYzMyY2hlY2tEZWNvZGUgPSBleHBvcnRzLmMzMmNoZWNrRW5jb2RlID0gZXhwb3J0cy5jMzJkZWNvZGUgPSBleHBvcnRzLmMzMmVuY29kZSA9IHZvaWQgMDtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiLi9lbmNvZGluZ1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImMzMmVuY29kZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW5jb2RpbmdfMS5jMzJlbmNvZGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjMzJkZWNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVuY29kaW5nXzEuYzMyZGVjb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYzMybm9ybWFsaXplXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbmNvZGluZ18xLmMzMm5vcm1hbGl6ZTsgfSB9KTtcbmNvbnN0IGNoZWNrc3VtXzEgPSByZXF1aXJlKFwiLi9jaGVja3N1bVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImMzMmNoZWNrRW5jb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjaGVja3N1bV8xLmMzMmNoZWNrRW5jb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYzMyY2hlY2tEZWNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNoZWNrc3VtXzEuYzMyY2hlY2tEZWNvZGU7IH0gfSk7XG5jb25zdCBhZGRyZXNzXzEgPSByZXF1aXJlKFwiLi9hZGRyZXNzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYzMyYWRkcmVzc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWRkcmVzc18xLmMzMmFkZHJlc3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjMzJhZGRyZXNzRGVjb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhZGRyZXNzXzEuYzMyYWRkcmVzc0RlY29kZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImMzMlRvQjU4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhZGRyZXNzXzEuYzMyVG9CNTg7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJiNThUb0MzMlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWRkcmVzc18xLmI1OFRvQzMyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidmVyc2lvbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFkZHJlc3NfMS52ZXJzaW9uczsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/c32check/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/cross-fetch/dist/browser-polyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/cross-fetch/dist/browser-polyfill.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cross-fetch/dist/browser-polyfill.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js":
/*!**************************************************!*\
  !*** ./node_modules/jsontokens/lib/base64Url.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = exports.encode = exports.unescape = exports.escape = exports.pad = void 0;\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\");\nfunction pad(base64) {\n    return `${base64}${'='.repeat(4 - (base64.length % 4 || 4))}`;\n}\nexports.pad = pad;\nfunction escape(base64) {\n    return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexports.escape = escape;\nfunction unescape(base64Url) {\n    return pad(base64Url).replace(/-/g, '+').replace(/_/g, '/');\n}\nexports.unescape = unescape;\nfunction encode(base64) {\n    return escape((0, base64_js_1.fromByteArray)(new TextEncoder().encode(base64)));\n}\nexports.encode = encode;\nfunction decode(base64Url) {\n    return new TextDecoder().decode((0, base64_js_1.toByteArray)(pad(unescape(base64Url))));\n}\nexports.decode = decode;\n//# sourceMappingURL=base64Url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9iYXNlNjRVcmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxHQUFHLGNBQWMsR0FBRyxnQkFBZ0IsR0FBRyxjQUFjLEdBQUcsV0FBVztBQUNqRixvQkFBb0IsbUJBQU8sQ0FBQyx3RUFBVztBQUN2QztBQUNBLGNBQWMsT0FBTyxFQUFFLHlDQUF5QztBQUNoRTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2Jhc2U2NFVybC5qcz9iYTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IGV4cG9ydHMudW5lc2NhcGUgPSBleHBvcnRzLmVzY2FwZSA9IGV4cG9ydHMucGFkID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0X2pzXzEgPSByZXF1aXJlKFwiYmFzZTY0LWpzXCIpO1xuZnVuY3Rpb24gcGFkKGJhc2U2NCkge1xuICAgIHJldHVybiBgJHtiYXNlNjR9JHsnPScucmVwZWF0KDQgLSAoYmFzZTY0Lmxlbmd0aCAlIDQgfHwgNCkpfWA7XG59XG5leHBvcnRzLnBhZCA9IHBhZDtcbmZ1bmN0aW9uIGVzY2FwZShiYXNlNjQpIHtcbiAgICByZXR1cm4gYmFzZTY0LnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufVxuZXhwb3J0cy5lc2NhcGUgPSBlc2NhcGU7XG5mdW5jdGlvbiB1bmVzY2FwZShiYXNlNjRVcmwpIHtcbiAgICByZXR1cm4gcGFkKGJhc2U2NFVybCkucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKTtcbn1cbmV4cG9ydHMudW5lc2NhcGUgPSB1bmVzY2FwZTtcbmZ1bmN0aW9uIGVuY29kZShiYXNlNjQpIHtcbiAgICByZXR1cm4gZXNjYXBlKCgwLCBiYXNlNjRfanNfMS5mcm9tQnl0ZUFycmF5KShuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoYmFzZTY0KSkpO1xufVxuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG5mdW5jdGlvbiBkZWNvZGUoYmFzZTY0VXJsKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZSgoMCwgYmFzZTY0X2pzXzEudG9CeXRlQXJyYXkpKHBhZCh1bmVzY2FwZShiYXNlNjRVcmwpKSkpO1xufVxuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjRVcmwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/index.js":
/*!************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cryptoClients = exports.SECP256K1Client = void 0;\nconst secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\");\nObject.defineProperty(exports, \"SECP256K1Client\", ({ enumerable: true, get: function () { return secp256k1_1.SECP256K1Client; } }));\nconst cryptoClients = {\n    ES256K: secp256k1_1.SECP256K1Client,\n};\nexports.cryptoClients = cryptoClients;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLHVCQUF1QjtBQUMvQyxvQkFBb0IsbUJBQU8sQ0FBQyxpR0FBYTtBQUN6QyxtREFBa0QsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUM7QUFDakk7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL2luZGV4LmpzP2IxNDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyeXB0b0NsaWVudHMgPSBleHBvcnRzLlNFQ1AyNTZLMUNsaWVudCA9IHZvaWQgMDtcbmNvbnN0IHNlY3AyNTZrMV8xID0gcmVxdWlyZShcIi4vc2VjcDI1NmsxXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU0VDUDI1NksxQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWNwMjU2azFfMS5TRUNQMjU2SzFDbGllbnQ7IH0gfSk7XG5jb25zdCBjcnlwdG9DbGllbnRzID0ge1xuICAgIEVTMjU2Szogc2VjcDI1NmsxXzEuU0VDUDI1NksxQ2xpZW50LFxufTtcbmV4cG9ydHMuY3J5cHRvQ2xpZW50cyA9IGNyeXB0b0NsaWVudHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/secp256k1.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SECP256K1Client = void 0;\nconst hmac_1 = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/hmac.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/sha256.js\");\nconst secp = __webpack_require__(/*! @noble/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/secp256k1/lib/index.js\");\nconst ecdsaSigFormatter_1 = __webpack_require__(/*! ../ecdsaSigFormatter */ \"(app-pages-browser)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(app-pages-browser)/./node_modules/jsontokens/lib/errors.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/utils.js\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nclass SECP256K1Client {\n    static derivePublicKey(privateKey, compressed = true) {\n        if (privateKey.length === 66) {\n            privateKey = privateKey.slice(0, 64);\n        }\n        if (privateKey.length < 64) {\n            // backward compatibly accept too short private keys\n            privateKey = privateKey.padStart(64, '0');\n        }\n        return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n    static signHash(signingInputHash, privateKey, format = 'jose') {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !privateKey) {\n            throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n        }\n        const derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n            der: true,\n            canonical: false,\n        });\n        if (format === 'der')\n            return (0, utils_1.bytesToHex)(derSignature);\n        if (format === 'jose')\n            return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n        throw Error('Invalid signature format');\n    }\n    static loadSignature(joseSignature) {\n        // create and return the DER-formatted signature bytes\n        return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n    static verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !derSignatureBytes || !publicKey) {\n            throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n        }\n        return secp.verify(derSignatureBytes, signingInputHash, publicKey, { strict: false });\n    }\n}\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL3NlY3AyNTZrMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsZUFBZSxtQkFBTyxDQUFDLG9GQUFvQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBc0I7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLDBGQUFrQjtBQUN2Qyw0QkFBNEIsbUJBQU8sQ0FBQyxvR0FBc0I7QUFDMUQsaUJBQWlCLG1CQUFPLENBQUMsOEVBQVc7QUFDcEMsZ0JBQWdCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxlQUFlO0FBQzVGO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvY3J5cHRvQ2xpZW50cy9zZWNwMjU2azEuanM/ZjIyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU0VDUDI1NksxQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgaG1hY18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvaG1hY1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3Qgc2VjcCA9IHJlcXVpcmUoXCJAbm9ibGUvc2VjcDI1NmsxXCIpO1xuY29uc3QgZWNkc2FTaWdGb3JtYXR0ZXJfMSA9IHJlcXVpcmUoXCIuLi9lY2RzYVNpZ0Zvcm1hdHRlclwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9yc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiKTtcbi8vIHJlcXVpcmVkIHRvIHVzZSBub2JsZSBzZWNwIGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtc2VjcDI1NmsxXG5zZWNwLnV0aWxzLmhtYWNTaGEyNTZTeW5jID0gKGtleSwgLi4ubXNncykgPT4ge1xuICAgIGNvbnN0IGggPSBobWFjXzEuaG1hYy5jcmVhdGUoc2hhMjU2XzEuc2hhMjU2LCBrZXkpO1xuICAgIG1zZ3MuZm9yRWFjaChtc2cgPT4gaC51cGRhdGUobXNnKSk7XG4gICAgcmV0dXJuIGguZGlnZXN0KCk7XG59O1xuY2xhc3MgU0VDUDI1NksxQ2xpZW50IHtcbiAgICBzdGF0aWMgZGVyaXZlUHVibGljS2V5KHByaXZhdGVLZXksIGNvbXByZXNzZWQgPSB0cnVlKSB7XG4gICAgICAgIGlmIChwcml2YXRlS2V5Lmxlbmd0aCA9PT0gNjYpIHtcbiAgICAgICAgICAgIHByaXZhdGVLZXkgPSBwcml2YXRlS2V5LnNsaWNlKDAsIDY0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJpdmF0ZUtleS5sZW5ndGggPCA2NCkge1xuICAgICAgICAgICAgLy8gYmFja3dhcmQgY29tcGF0aWJseSBhY2NlcHQgdG9vIHNob3J0IHByaXZhdGUga2V5c1xuICAgICAgICAgICAgcHJpdmF0ZUtleSA9IHByaXZhdGVLZXkucGFkU3RhcnQoNjQsICcwJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHNlY3AuZ2V0UHVibGljS2V5KHByaXZhdGVLZXksIGNvbXByZXNzZWQpKTtcbiAgICB9XG4gICAgc3RhdGljIHNpZ25IYXNoKHNpZ25pbmdJbnB1dEhhc2gsIHByaXZhdGVLZXksIGZvcm1hdCA9ICdqb3NlJykge1xuICAgICAgICAvLyBtYWtlIHN1cmUgdGhlIHJlcXVpcmVkIHBhcmFtZXRlcnMgYXJlIHByb3ZpZGVkXG4gICAgICAgIGlmICghc2lnbmluZ0lucHV0SGFzaCB8fCAhcHJpdmF0ZUtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBpbnB1dCBoYXNoIGFuZCBwcml2YXRlIGtleSBhcmUgYWxsIHJlcXVpcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVyU2lnbmF0dXJlID0gc2VjcC5zaWduU3luYyhzaWduaW5nSW5wdXRIYXNoLCBwcml2YXRlS2V5LnNsaWNlKDAsIDY0KSwge1xuICAgICAgICAgICAgZGVyOiB0cnVlLFxuICAgICAgICAgICAgY2Fub25pY2FsOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdkZXInKVxuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKGRlclNpZ25hdHVyZSk7XG4gICAgICAgIGlmIChmb3JtYXQgPT09ICdqb3NlJylcbiAgICAgICAgICAgIHJldHVybiAoMCwgZWNkc2FTaWdGb3JtYXR0ZXJfMS5kZXJUb0pvc2UpKGRlclNpZ25hdHVyZSwgJ0VTMjU2Jyk7XG4gICAgICAgIHRocm93IEVycm9yKCdJbnZhbGlkIHNpZ25hdHVyZSBmb3JtYXQnKTtcbiAgICB9XG4gICAgc3RhdGljIGxvYWRTaWduYXR1cmUoam9zZVNpZ25hdHVyZSkge1xuICAgICAgICAvLyBjcmVhdGUgYW5kIHJldHVybiB0aGUgREVSLWZvcm1hdHRlZCBzaWduYXR1cmUgYnl0ZXNcbiAgICAgICAgcmV0dXJuICgwLCBlY2RzYVNpZ0Zvcm1hdHRlcl8xLmpvc2VUb0Rlcikoam9zZVNpZ25hdHVyZSwgJ0VTMjU2Jyk7XG4gICAgfVxuICAgIHN0YXRpYyB2ZXJpZnlIYXNoKHNpZ25pbmdJbnB1dEhhc2gsIGRlclNpZ25hdHVyZUJ5dGVzLCBwdWJsaWNLZXkpIHtcbiAgICAgICAgLy8gbWFrZSBzdXJlIHRoZSByZXF1aXJlZCBwYXJhbWV0ZXJzIGFyZSBwcm92aWRlZFxuICAgICAgICBpZiAoIXNpZ25pbmdJbnB1dEhhc2ggfHwgIWRlclNpZ25hdHVyZUJ5dGVzIHx8ICFwdWJsaWNLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgaW5wdXQgaGFzaCwgZGVyIHNpZ25hdHVyZSwgYW5kIHB1YmxpYyBrZXkgYXJlIGFsbCByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWNwLnZlcmlmeShkZXJTaWduYXR1cmVCeXRlcywgc2lnbmluZ0lucHV0SGFzaCwgcHVibGljS2V5LCB7IHN0cmljdDogZmFsc2UgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TRUNQMjU2SzFDbGllbnQgPSBTRUNQMjU2SzFDbGllbnQ7XG5TRUNQMjU2SzFDbGllbnQuYWxnb3JpdGhtTmFtZSA9ICdFUzI1NksnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VjcDI1NmsxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/secp256k1.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/sha256.js":
/*!*************************************************************!*\
  !*** ./node_modules/jsontokens/lib/cryptoClients/sha256.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/sha256.js\");\nfunction hashSha256(input) {\n    return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', bytes);\n                return new Uint8Array(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = __webpack_require__(/*! crypto */ \"?232a\");\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9jcnlwdG9DbGllbnRzL3NoYTI1Ni5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsa0JBQWtCO0FBQzVDLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFzQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG1CQUFPLENBQUMscUJBQVE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL2NyeXB0b0NsaWVudHMvc2hhMjU2LmpzPzY3MjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFzaFNoYTI1NkFzeW5jID0gZXhwb3J0cy5oYXNoU2hhMjU2ID0gdm9pZCAwO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5mdW5jdGlvbiBoYXNoU2hhMjU2KGlucHV0KSB7XG4gICAgcmV0dXJuICgwLCBzaGEyNTZfMS5zaGEyNTYpKGlucHV0KTtcbn1cbmV4cG9ydHMuaGFzaFNoYTI1NiA9IGhhc2hTaGEyNTY7XG5mdW5jdGlvbiBoYXNoU2hhMjU2QXN5bmMoaW5wdXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaXNTdWJ0bGVDcnlwdG9BdmFpbGFibGUgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY3J5cHRvLnN1YnRsZSAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgICAgICAgICBpZiAoaXNTdWJ0bGVDcnlwdG9BdmFpbGFibGUpIHtcbiAgICAgICAgICAgICAgICAvLyBVc2UgdGhlIFczQyBXZWIgQ3J5cHRvIEFQSSBpZiBhdmFpbGFibGUgKHJ1bm5pbmcgaW4gYSB3ZWIgYnJvd3NlcikuXG4gICAgICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSB0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnID8gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGlucHV0KSA6IGlucHV0O1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc2ggPSB5aWVsZCBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIGJ5dGVzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGFzaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBPdGhlcndpc2UgdHJ5IGxvYWRpbmcgdGhlIE5vZGUuanMgYGNyeXB0b2AgbW9kdWxlIChydW5uaW5nIGluIE5vZGUuanMsIG9yIGFuIG9sZGVyIGJyb3dzZXIgd2l0aCBhIHBvbHlmaWxsKS5cbiAgICAgICAgICAgICAgICBjb25zdCBub2RlQ3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG4gICAgICAgICAgICAgICAgaWYgKCFub2RlQ3J5cHRvLmNyZWF0ZUhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgY3J5cHRvYCBtb2R1bGUgZG9lcyBub3QgY29udGFpbiBgY3JlYXRlSGFzaGAnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShub2RlQ3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0NyeXB0byBsaWIgbm90IGZvdW5kLiBOZWl0aGVyIHRoZSBnbG9iYWwgYGNyeXB0by5zdWJ0bGVgIFdlYiBDcnlwdG8gQVBJLCAnICtcbiAgICAgICAgICAgICAgICAnbm9yIHRoZSBvciB0aGUgTm9kZS5qcyBgcmVxdWlyZShcImNyeXB0b1wiKS5jcmVhdGVIYXNoYCBtb2R1bGUgaXMgYXZhaWxhYmxlLiAnICtcbiAgICAgICAgICAgICAgICAnRmFsbGluZyBiYWNrIHRvIEpTIGltcGxlbWVudGF0aW9uLicpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShoYXNoU2hhMjU2KGlucHV0KSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuaGFzaFNoYTI1NkFzeW5jID0gaGFzaFNoYTI1NkFzeW5jO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/decode.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/decode.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction decodeToken(token) {\n    if (typeof token === 'string') {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        const header = JSON.parse(base64url.decode(tokenParts[0]));\n        const payload = JSON.parse(base64url.decode(tokenParts[1]));\n        const signature = tokenParts[2];\n        // return the token object\n        return {\n            header: header,\n            payload: payload,\n            signature: signature,\n        };\n    }\n    else if (typeof token === 'object') {\n        if (typeof token.payload !== 'string') {\n            throw new Error('Expected token payload to be a base64 or json string');\n        }\n        let payload = token.payload;\n        if (token.payload[0] !== '{') {\n            payload = base64url.decode(payload);\n        }\n        const allHeaders = [];\n        token.header.map((headerValue) => {\n            const header = JSON.parse(base64url.decode(headerValue));\n            allHeaders.push(header);\n        });\n        return {\n            header: allHeaders,\n            payload: JSON.parse(payload),\n            signature: token.signature,\n        };\n    }\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9kZWNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGtCQUFrQixtQkFBTyxDQUFDLG1GQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvZGVjb2RlLmpzPzIzYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVRva2VuID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4vYmFzZTY0VXJsXCIpO1xuZnVuY3Rpb24gZGVjb2RlVG9rZW4odG9rZW4pIHtcbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBkZWNvbXBvc2UgdGhlIHRva2VuIGludG8gcGFydHNcbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZSh0b2tlblBhcnRzWzBdKSk7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUodG9rZW5QYXJ0c1sxXSkpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB0b2tlblBhcnRzWzJdO1xuICAgICAgICAvLyByZXR1cm4gdGhlIHRva2VuIG9iamVjdFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGVhZGVyOiBoZWFkZXIsXG4gICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbi5wYXlsb2FkICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0b2tlbiBwYXlsb2FkIHRvIGJlIGEgYmFzZTY0IG9yIGpzb24gc3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHBheWxvYWQgPSB0b2tlbi5wYXlsb2FkO1xuICAgICAgICBpZiAodG9rZW4ucGF5bG9hZFswXSAhPT0gJ3snKSB7XG4gICAgICAgICAgICBwYXlsb2FkID0gYmFzZTY0dXJsLmRlY29kZShwYXlsb2FkKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbGxIZWFkZXJzID0gW107XG4gICAgICAgIHRva2VuLmhlYWRlci5tYXAoKGhlYWRlclZhbHVlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUoaGVhZGVyVmFsdWUpKTtcbiAgICAgICAgICAgIGFsbEhlYWRlcnMucHVzaChoZWFkZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhlYWRlcjogYWxsSGVhZGVycyxcbiAgICAgICAgICAgIHBheWxvYWQ6IEpTT04ucGFyc2UocGF5bG9hZCksXG4gICAgICAgICAgICBzaWduYXR1cmU6IHRva2VuLnNpZ25hdHVyZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLmRlY29kZVRva2VuID0gZGVjb2RlVG9rZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/decode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js":
/*!**********************************************************!*\
  !*** ./node_modules/jsontokens/lib/ecdsaSigFormatter.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n//  NOTICE\n//  Copyright 2015 D2L Corporation\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.joseToDer = exports.derToJose = void 0;\n// The following code is adapted from https://github.com/Brightspace/node-ecdsa-sig-formatter\nconst base64_js_1 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\");\nconst base64Url_1 = __webpack_require__(/*! ./base64Url */ \"(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js\");\nfunction getParamSize(keySize) {\n    return ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n}\nconst paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(521),\n};\nfunction getParamBytesForAlg(alg) {\n    const paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n    throw new Error(`Unknown algorithm \"${alg}\"`);\n}\nconst MAX_OCTET = 0x80;\nconst CLASS_UNIVERSAL = 0;\nconst PRIMITIVE_BIT = 0x20;\nconst TAG_SEQ = 0x10;\nconst TAG_INT = 0x02;\nconst ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | (CLASS_UNIVERSAL << 6);\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\nfunction signatureAsBytes(signature) {\n    if (signature instanceof Uint8Array) {\n        return signature;\n    }\n    else if ('string' === typeof signature) {\n        return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(signature));\n    }\n    throw new TypeError('ECDSA signature must be a Base64 string or a Uint8Array');\n}\nfunction derToJose(signature, alg) {\n    const signatureBytes = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    // the DER encoded param should at most be the param size, plus a padding\n    // zero, since due to being a signed integer\n    const maxEncodedParamLength = paramBytes + 1;\n    const inputLength = signatureBytes.length;\n    let offset = 0;\n    if (signatureBytes[offset++] !== ENCODED_TAG_SEQ) {\n        throw new Error('Could not find expected \"seq\"');\n    }\n    let seqLength = signatureBytes[offset++];\n    if (seqLength === (MAX_OCTET | 1)) {\n        seqLength = signatureBytes[offset++];\n    }\n    if (inputLength - offset < seqLength) {\n        throw new Error(`\"seq\" specified length of \"${seqLength}\", only \"${inputLength - offset}\" remaining`);\n    }\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"r\"');\n    }\n    const rLength = signatureBytes[offset++];\n    if (inputLength - offset - 2 < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`);\n    }\n    if (maxEncodedParamLength < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const rOffset = offset;\n    offset += rLength;\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"s\"');\n    }\n    const sLength = signatureBytes[offset++];\n    if (inputLength - offset !== sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`);\n    }\n    if (maxEncodedParamLength < sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const sOffset = offset;\n    offset += sLength;\n    if (offset !== inputLength) {\n        throw new Error(`Expected to consume entire array, but \"${inputLength - offset}\" bytes remain`);\n    }\n    const rPadding = paramBytes - rLength;\n    const sPadding = paramBytes - sLength;\n    const dst = new Uint8Array(rPadding + rLength + sPadding + sLength);\n    for (offset = 0; offset < rPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(rOffset + Math.max(-rPadding, 0), rOffset + rLength), offset);\n    offset = paramBytes;\n    for (const o = offset; offset < o + sPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(sOffset + Math.max(-sPadding, 0), sOffset + sLength), offset);\n    return (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(dst));\n}\nexports.derToJose = derToJose;\nfunction countPadding(buf, start, stop) {\n    let padding = 0;\n    while (start + padding < stop && buf[start + padding] === 0) {\n        ++padding;\n    }\n    const needsSign = buf[start + padding] >= MAX_OCTET;\n    if (needsSign) {\n        --padding;\n    }\n    return padding;\n}\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    const signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`);\n    }\n    const rPadding = countPadding(signature, 0, paramBytes);\n    const sPadding = countPadding(signature, paramBytes, signature.length);\n    const rLength = paramBytes - rPadding;\n    const sLength = paramBytes - sPadding;\n    const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n    const shortLength = rsBytes < MAX_OCTET;\n    const dst = new Uint8Array((shortLength ? 2 : 3) + rsBytes);\n    let offset = 0;\n    dst[offset++] = ENCODED_TAG_SEQ;\n    if (shortLength) {\n        // Bit 8 has value \"0\"\n        // bits 7-1 give the length.\n        dst[offset++] = rsBytes;\n    }\n    else {\n        // Bit 8 of first octet has value \"1\"\n        // bits 7-1 give the number of additional length octets.\n        dst[offset++] = MAX_OCTET | 1;\n        // length, base 256\n        dst[offset++] = rsBytes & 0xff;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = rLength;\n    if (rPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(0, paramBytes), offset);\n        offset += paramBytes;\n    }\n    else {\n        dst.set(signature.subarray(rPadding, paramBytes), offset);\n        offset += paramBytes - rPadding;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = sLength;\n    if (sPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(paramBytes), offset);\n    }\n    else {\n        dst.set(signature.subarray(paramBytes + sPadding), offset);\n    }\n    return dst;\n}\nexports.joseToDer = joseToDer;\n//# sourceMappingURL=ecdsaSigFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/ecdsaSigFormatter.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/errors.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidTokenError = exports.MissingParametersError = void 0;\nclass MissingParametersError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'MissingParametersError';\n        this.message = message || '';\n    }\n}\nexports.MissingParametersError = MissingParametersError;\nclass InvalidTokenError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'InvalidTokenError';\n        this.message = message || '';\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsOEJBQThCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9lcnJvcnMuanM/MjBkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZFRva2VuRXJyb3IgPSBleHBvcnRzLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IgPSB2b2lkIDA7XG5jbGFzcyBNaXNzaW5nUGFyYW1ldGVyc0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ01pc3NpbmdQYXJhbWV0ZXJzRXJyb3InO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlIHx8ICcnO1xuICAgIH1cbn1cbmV4cG9ydHMuTWlzc2luZ1BhcmFtZXRlcnNFcnJvciA9IE1pc3NpbmdQYXJhbWV0ZXJzRXJyb3I7XG5jbGFzcyBJbnZhbGlkVG9rZW5FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkVG9rZW5FcnJvcic7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgJyc7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkVG9rZW5FcnJvciA9IEludmFsaWRUb2tlbkVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jsontokens/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./signer */ \"(app-pages-browser)/./node_modules/jsontokens/lib/signer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./verifier */ \"(app-pages-browser)/./node_modules/jsontokens/lib/verifier.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode */ \"(app-pages-browser)/./node_modules/jsontokens/lib/decode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/jsontokens/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cryptoClients */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNkVBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLGlGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyw2RUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsNkVBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLGlHQUFpQjtBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvanNvbnRva2Vucy9saWIvaW5kZXguanM/NTc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25lclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmVyaWZpZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlY29kZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/signer.js":
/*!***********************************************!*\
  !*** ./node_modules/jsontokens/lib/signer.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenSigner = exports.createUnsecuredToken = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nfunction createSigningInput(payload, header) {\n    const tokenParts = [];\n    // add in the header\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n    // add in the payload\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n    // prepare the message\n    const signingInput = tokenParts.join('.');\n    // return the signing input\n    return signingInput;\n}\nfunction createUnsecuredToken(payload) {\n    const header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\nexports.createUnsecuredToken = createUnsecuredToken;\nclass TokenSigner {\n    constructor(signingAlgorithm, rawPrivateKey) {\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw new Error('signing algorithm parameter must be a string');\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw new Error('invalid signing algorithm');\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n    header(header = {}) {\n        const defaultHeader = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };\n        return Object.assign({}, defaultHeader, header);\n    }\n    sign(payload, expanded = false, customHeader = {}) {\n        // generate the token header\n        const header = this.header(customHeader);\n        // prepare the message to be signed\n        const signingInput = createSigningInput(payload, header);\n        const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n        return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n    }\n    signAsync(payload, expanded = false, customHeader = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // generate the token header\n            const header = this.header(customHeader);\n            // prepare the message to be signed\n            const signingInput = createSigningInput(payload, header);\n            const signingInputHash = yield (0, sha256_1.hashSha256Async)(signingInput);\n            return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n        });\n    }\n    createWithSignedHash(payload, expanded, header, signingInput, signingInputHash) {\n        // sign the message and add in the signature\n        const signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n        if (expanded) {\n            const signedToken = {\n                header: [base64url.encode(JSON.stringify(header))],\n                payload: JSON.stringify(payload),\n                signature: [signature],\n            };\n            return signedToken;\n        }\n        else {\n            return [signingInput, signature].join('.');\n        }\n    }\n}\nexports.TokenSigner = TokenSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi9zaWduZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLDRCQUE0QjtBQUNsRCxrQkFBa0IsbUJBQU8sQ0FBQyxtRkFBYTtBQUN2Qyx3QkFBd0IsbUJBQU8sQ0FBQyxpR0FBaUI7QUFDakQsaUJBQWlCLG1CQUFPLENBQUMsNkVBQVU7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMseUdBQXdCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QixnQ0FBZ0M7QUFDaEMsK0JBQStCO0FBQy9CO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb250b2tlbnMvbGliL3NpZ25lci5qcz9hNTNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuU2lnbmVyID0gZXhwb3J0cy5jcmVhdGVVbnNlY3VyZWRUb2tlbiA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuL2Jhc2U2NFVybFwiKTtcbmNvbnN0IGNyeXB0b0NsaWVudHNfMSA9IHJlcXVpcmUoXCIuL2NyeXB0b0NsaWVudHNcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50cy9zaGEyNTZcIik7XG5mdW5jdGlvbiBjcmVhdGVTaWduaW5nSW5wdXQocGF5bG9hZCwgaGVhZGVyKSB7XG4gICAgY29uc3QgdG9rZW5QYXJ0cyA9IFtdO1xuICAgIC8vIGFkZCBpbiB0aGUgaGVhZGVyXG4gICAgY29uc3QgZW5jb2RlZEhlYWRlciA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoaGVhZGVyKSk7XG4gICAgdG9rZW5QYXJ0cy5wdXNoKGVuY29kZWRIZWFkZXIpO1xuICAgIC8vIGFkZCBpbiB0aGUgcGF5bG9hZFxuICAgIGNvbnN0IGVuY29kZWRQYXlsb2FkID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7XG4gICAgdG9rZW5QYXJ0cy5wdXNoKGVuY29kZWRQYXlsb2FkKTtcbiAgICAvLyBwcmVwYXJlIHRoZSBtZXNzYWdlXG4gICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gdG9rZW5QYXJ0cy5qb2luKCcuJyk7XG4gICAgLy8gcmV0dXJuIHRoZSBzaWduaW5nIGlucHV0XG4gICAgcmV0dXJuIHNpZ25pbmdJbnB1dDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVVuc2VjdXJlZFRva2VuKHBheWxvYWQpIHtcbiAgICBjb25zdCBoZWFkZXIgPSB7IHR5cDogJ0pXVCcsIGFsZzogJ25vbmUnIH07XG4gICAgcmV0dXJuIGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpICsgJy4nO1xufVxuZXhwb3J0cy5jcmVhdGVVbnNlY3VyZWRUb2tlbiA9IGNyZWF0ZVVuc2VjdXJlZFRva2VuO1xuY2xhc3MgVG9rZW5TaWduZXIge1xuICAgIGNvbnN0cnVjdG9yKHNpZ25pbmdBbGdvcml0aG0sIHJhd1ByaXZhdGVLZXkpIHtcbiAgICAgICAgaWYgKCEoc2lnbmluZ0FsZ29yaXRobSAmJiByYXdQcml2YXRlS2V5KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLk1pc3NpbmdQYXJhbWV0ZXJzRXJyb3IoJ2Egc2lnbmluZyBhbGdvcml0aG0gYW5kIHByaXZhdGUga2V5IGFyZSByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygc2lnbmluZ0FsZ29yaXRobSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc2lnbmluZyBhbGdvcml0aG0gcGFyYW1ldGVyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBzaWduaW5nQWxnb3JpdGhtID0gc2lnbmluZ0FsZ29yaXRobS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICBpZiAoIWNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzLmhhc093blByb3BlcnR5KHNpZ25pbmdBbGdvcml0aG0pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc2lnbmluZyBhbGdvcml0aG0nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRva2VuVHlwZSA9ICdKV1QnO1xuICAgICAgICB0aGlzLmNyeXB0b0NsaWVudCA9IGNyeXB0b0NsaWVudHNfMS5jcnlwdG9DbGllbnRzW3NpZ25pbmdBbGdvcml0aG1dO1xuICAgICAgICB0aGlzLnJhd1ByaXZhdGVLZXkgPSByYXdQcml2YXRlS2V5O1xuICAgIH1cbiAgICBoZWFkZXIoaGVhZGVyID0ge30pIHtcbiAgICAgICAgY29uc3QgZGVmYXVsdEhlYWRlciA9IHsgdHlwOiB0aGlzLnRva2VuVHlwZSwgYWxnOiB0aGlzLmNyeXB0b0NsaWVudC5hbGdvcml0aG1OYW1lIH07XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0SGVhZGVyLCBoZWFkZXIpO1xuICAgIH1cbiAgICBzaWduKHBheWxvYWQsIGV4cGFuZGVkID0gZmFsc2UsIGN1c3RvbUhlYWRlciA9IHt9KSB7XG4gICAgICAgIC8vIGdlbmVyYXRlIHRoZSB0b2tlbiBoZWFkZXJcbiAgICAgICAgY29uc3QgaGVhZGVyID0gdGhpcy5oZWFkZXIoY3VzdG9tSGVhZGVyKTtcbiAgICAgICAgLy8gcHJlcGFyZSB0aGUgbWVzc2FnZSB0byBiZSBzaWduZWRcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gY3JlYXRlU2lnbmluZ0lucHV0KHBheWxvYWQsIGhlYWRlcik7XG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dEhhc2ggPSAoMCwgc2hhMjU2XzEuaGFzaFNoYTI1Nikoc2lnbmluZ0lucHV0KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlV2l0aFNpZ25lZEhhc2gocGF5bG9hZCwgZXhwYW5kZWQsIGhlYWRlciwgc2lnbmluZ0lucHV0LCBzaWduaW5nSW5wdXRIYXNoKTtcbiAgICB9XG4gICAgc2lnbkFzeW5jKHBheWxvYWQsIGV4cGFuZGVkID0gZmFsc2UsIGN1c3RvbUhlYWRlciA9IHt9KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBnZW5lcmF0ZSB0aGUgdG9rZW4gaGVhZGVyXG4gICAgICAgICAgICBjb25zdCBoZWFkZXIgPSB0aGlzLmhlYWRlcihjdXN0b21IZWFkZXIpO1xuICAgICAgICAgICAgLy8gcHJlcGFyZSB0aGUgbWVzc2FnZSB0byBiZSBzaWduZWRcbiAgICAgICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IGNyZWF0ZVNpZ25pbmdJbnB1dChwYXlsb2FkLCBoZWFkZXIpO1xuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9IHlpZWxkICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2QXN5bmMpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVXaXRoU2lnbmVkSGFzaChwYXlsb2FkLCBleHBhbmRlZCwgaGVhZGVyLCBzaWduaW5nSW5wdXQsIHNpZ25pbmdJbnB1dEhhc2gpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3JlYXRlV2l0aFNpZ25lZEhhc2gocGF5bG9hZCwgZXhwYW5kZWQsIGhlYWRlciwgc2lnbmluZ0lucHV0LCBzaWduaW5nSW5wdXRIYXNoKSB7XG4gICAgICAgIC8vIHNpZ24gdGhlIG1lc3NhZ2UgYW5kIGFkZCBpbiB0aGUgc2lnbmF0dXJlXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRoaXMuY3J5cHRvQ2xpZW50LnNpZ25IYXNoKHNpZ25pbmdJbnB1dEhhc2gsIHRoaXMucmF3UHJpdmF0ZUtleSk7XG4gICAgICAgIGlmIChleHBhbmRlZCkge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmVkVG9rZW4gPSB7XG4gICAgICAgICAgICAgICAgaGVhZGVyOiBbYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeShoZWFkZXIpKV0sXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBbc2lnbmF0dXJlXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gc2lnbmVkVG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW3NpZ25pbmdJbnB1dCwgc2lnbmF0dXJlXS5qb2luKCcuJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlRva2VuU2lnbmVyID0gVG9rZW5TaWduZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/signer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jsontokens/lib/verifier.js":
/*!*************************************************!*\
  !*** ./node_modules/jsontokens/lib/verifier.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenVerifier = void 0;\nconst base64url = __webpack_require__(/*! ./base64Url */ \"(app-pages-browser)/./node_modules/jsontokens/lib/base64Url.js\");\nconst cryptoClients_1 = __webpack_require__(/*! ./cryptoClients */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/jsontokens/lib/errors.js\");\nconst sha256_1 = __webpack_require__(/*! ./cryptoClients/sha256 */ \"(app-pages-browser)/./node_modules/jsontokens/lib/cryptoClients/sha256.js\");\nclass TokenVerifier {\n    constructor(signingAlgorithm, rawPublicKey) {\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n    verify(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, false);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, false);\n        }\n        else {\n            return false;\n        }\n    }\n    verifyAsync(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, true);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, true);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    verifyCompact(token, async) {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        // calculate the signing input hash\n        const signingInput = tokenParts[0] + '.' + tokenParts[1];\n        const performVerify = (signingInputHash) => {\n            // extract the signature as a DER array\n            const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n    verifyExpanded(token, async) {\n        const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n        let verified = true;\n        const performVerify = (signingInputHash) => {\n            token['signature'].map((signature) => {\n                const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n                const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n            return verified;\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n}\nexports.TokenVerifier = TokenVerifier;\n//# sourceMappingURL=verifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi92ZXJpZmllci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsbUZBQWE7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMsaUdBQWlCO0FBQ2pELGlCQUFpQixtQkFBTyxDQUFDLDZFQUFVO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLHlHQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qc29udG9rZW5zL2xpYi92ZXJpZmllci5qcz82ODczIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ub2tlblZlcmlmaWVyID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4vYmFzZTY0VXJsXCIpO1xuY29uc3QgY3J5cHRvQ2xpZW50c18xID0gcmVxdWlyZShcIi4vY3J5cHRvQ2xpZW50c1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiLi9jcnlwdG9DbGllbnRzL3NoYTI1NlwiKTtcbmNsYXNzIFRva2VuVmVyaWZpZXIge1xuICAgIGNvbnN0cnVjdG9yKHNpZ25pbmdBbGdvcml0aG0sIHJhd1B1YmxpY0tleSkge1xuICAgICAgICBpZiAoIShzaWduaW5nQWxnb3JpdGhtICYmIHJhd1B1YmxpY0tleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5NaXNzaW5nUGFyYW1ldGVyc0Vycm9yKCdhIHNpZ25pbmcgYWxnb3JpdGhtIGFuZCBwdWJsaWMga2V5IGFyZSByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygc2lnbmluZ0FsZ29yaXRobSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93ICdzaWduaW5nIGFsZ29yaXRobSBwYXJhbWV0ZXIgbXVzdCBiZSBhIHN0cmluZyc7XG4gICAgICAgIH1cbiAgICAgICAgc2lnbmluZ0FsZ29yaXRobSA9IHNpZ25pbmdBbGdvcml0aG0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgaWYgKCFjcnlwdG9DbGllbnRzXzEuY3J5cHRvQ2xpZW50cy5oYXNPd25Qcm9wZXJ0eShzaWduaW5nQWxnb3JpdGhtKSkge1xuICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgc2lnbmluZyBhbGdvcml0aG0nO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudG9rZW5UeXBlID0gJ0pXVCc7XG4gICAgICAgIHRoaXMuY3J5cHRvQ2xpZW50ID0gY3J5cHRvQ2xpZW50c18xLmNyeXB0b0NsaWVudHNbc2lnbmluZ0FsZ29yaXRobV07XG4gICAgICAgIHRoaXMucmF3UHVibGljS2V5ID0gcmF3UHVibGljS2V5O1xuICAgIH1cbiAgICB2ZXJpZnkodG9rZW4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUNvbXBhY3QodG9rZW4sIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlFeHBhbmRlZCh0b2tlbiwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeUFzeW5jKHRva2VuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlDb21wYWN0KHRva2VuLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlFeHBhbmRlZCh0b2tlbiwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJpZnlDb21wYWN0KHRva2VuLCBhc3luYykge1xuICAgICAgICAvLyBkZWNvbXBvc2UgdGhlIHRva2VuIGludG8gcGFydHNcbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XG4gICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgc2lnbmluZyBpbnB1dCBoYXNoXG4gICAgICAgIGNvbnN0IHNpZ25pbmdJbnB1dCA9IHRva2VuUGFydHNbMF0gKyAnLicgKyB0b2tlblBhcnRzWzFdO1xuICAgICAgICBjb25zdCBwZXJmb3JtVmVyaWZ5ID0gKHNpZ25pbmdJbnB1dEhhc2gpID0+IHtcbiAgICAgICAgICAgIC8vIGV4dHJhY3QgdGhlIHNpZ25hdHVyZSBhcyBhIERFUiBhcnJheVxuICAgICAgICAgICAgY29uc3QgZGVyU2lnbmF0dXJlQnl0ZXMgPSB0aGlzLmNyeXB0b0NsaWVudC5sb2FkU2lnbmF0dXJlKHRva2VuUGFydHNbMl0pO1xuICAgICAgICAgICAgLy8gdmVyaWZ5IHRoZSBzaWduZWQgaGFzaFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3J5cHRvQ2xpZW50LnZlcmlmeUhhc2goc2lnbmluZ0lucHV0SGFzaCwgZGVyU2lnbmF0dXJlQnl0ZXMsIHRoaXMucmF3UHVibGljS2V5KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGFzeW5jKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTZBc3luYykoc2lnbmluZ0lucHV0KS50aGVuKHNpZ25pbmdJbnB1dEhhc2ggPT4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzaWduaW5nSW5wdXRIYXNoID0gKDAsIHNoYTI1Nl8xLmhhc2hTaGEyNTYpKHNpZ25pbmdJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gcGVyZm9ybVZlcmlmeShzaWduaW5nSW5wdXRIYXNoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJpZnlFeHBhbmRlZCh0b2tlbiwgYXN5bmMpIHtcbiAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0ID0gW3Rva2VuWydoZWFkZXInXS5qb2luKCcuJyksIGJhc2U2NHVybC5lbmNvZGUodG9rZW5bJ3BheWxvYWQnXSldLmpvaW4oJy4nKTtcbiAgICAgICAgbGV0IHZlcmlmaWVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgcGVyZm9ybVZlcmlmeSA9IChzaWduaW5nSW5wdXRIYXNoKSA9PiB7XG4gICAgICAgICAgICB0b2tlblsnc2lnbmF0dXJlJ10ubWFwKChzaWduYXR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXJTaWduYXR1cmVCeXRlcyA9IHRoaXMuY3J5cHRvQ2xpZW50LmxvYWRTaWduYXR1cmUoc2lnbmF0dXJlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduYXR1cmVWZXJpZmllZCA9IHRoaXMuY3J5cHRvQ2xpZW50LnZlcmlmeUhhc2goc2lnbmluZ0lucHV0SGFzaCwgZGVyU2lnbmF0dXJlQnl0ZXMsIHRoaXMucmF3UHVibGljS2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoIXNpZ25hdHVyZVZlcmlmaWVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZlcmlmaWVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdmVyaWZpZWQ7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChhc3luYykge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2QXN5bmMpKHNpZ25pbmdJbnB1dCkudGhlbihzaWduaW5nSW5wdXRIYXNoID0+IHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmluZ0lucHV0SGFzaCA9ICgwLCBzaGEyNTZfMS5oYXNoU2hhMjU2KShzaWduaW5nSW5wdXQpO1xuICAgICAgICAgICAgcmV0dXJuIHBlcmZvcm1WZXJpZnkoc2lnbmluZ0lucHV0SGFzaCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlRva2VuVmVyaWZpZXIgPSBUb2tlblZlcmlmaWVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyaWZpZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jsontokens/lib/verifier.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash.clonedeep/index.js":
/*!************************************************!*\
  !*** ./node_modules/lodash.clonedeep/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2guY2xvbmVkZWVwL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQzs7QUFFcEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLHFCQUFNLGdCQUFnQixxQkFBTSxJQUFJLHFCQUFNLHNCQUFzQixxQkFBTTs7QUFFMUY7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLEtBQTBCOztBQUU1QztBQUNBLGdDQUFnQyxRQUFhOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsR0FBRztBQUNkLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFNBQVM7QUFDcEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsU0FBUztBQUNwQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRLFVBQVU7QUFDN0IsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0Esd0JBQXdCOztBQUV4QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxVQUFVO0FBQzdCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsU0FBUztBQUNwQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVEsSUFBSSxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC5jbG9uZWRlZXAvaW5kZXguanM/NGZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGxvZGFzaCAoQ3VzdG9tIEJ1aWxkKSA8aHR0cHM6Ly9sb2Rhc2guY29tLz5cbiAqIEJ1aWxkOiBgbG9kYXNoIG1vZHVsYXJpemUgZXhwb3J0cz1cIm5wbVwiIC1vIC4vYFxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMgPGh0dHBzOi8vanF1ZXJ5Lm9yZy8+XG4gKiBSZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZSA8aHR0cHM6Ly9sb2Rhc2guY29tL2xpY2Vuc2U+XG4gKiBCYXNlZCBvbiBVbmRlcnNjb3JlLmpzIDEuOC4zIDxodHRwOi8vdW5kZXJzY29yZWpzLm9yZy9MSUNFTlNFPlxuICogQ29weXJpZ2h0IEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgJiBFZGl0b3JzXG4gKi9cblxuLyoqIFVzZWQgYXMgdGhlIHNpemUgdG8gZW5hYmxlIGxhcmdlIGFycmF5IG9wdGltaXphdGlvbnMuICovXG52YXIgTEFSR0VfQVJSQVlfU0laRSA9IDIwMDtcblxuLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBnZW5UYWcgPSAnW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHByb21pc2VUYWcgPSAnW29iamVjdCBQcm9taXNlXScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XScsXG4gICAgZmxvYXQzMlRhZyA9ICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgIGZsb2F0NjRUYWcgPSAnW29iamVjdCBGbG9hdDY0QXJyYXldJyxcbiAgICBpbnQ4VGFnID0gJ1tvYmplY3QgSW50OEFycmF5XScsXG4gICAgaW50MTZUYWcgPSAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgaW50MzJUYWcgPSAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgdWludDhUYWcgPSAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgdWludDhDbGFtcGVkVGFnID0gJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICB1aW50MTZUYWcgPSAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgIHVpbnQzMlRhZyA9ICdbb2JqZWN0IFVpbnQzMkFycmF5XSc7XG5cbi8qKlxuICogVXNlZCB0byBtYXRjaCBgUmVnRXhwYFxuICogW3N5bnRheCBjaGFyYWN0ZXJzXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1wYXR0ZXJucykuXG4gKi9cbnZhciByZVJlZ0V4cENoYXIgPSAvW1xcXFxeJC4qKz8oKVtcXF17fXxdL2c7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgIGZsYWdzIGZyb20gdGhlaXIgY29lcmNlZCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlRmxhZ3MgPSAvXFx3KiQvO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaG9zdCBjb25zdHJ1Y3RvcnMgKFNhZmFyaSkuICovXG52YXIgcmVJc0hvc3RDdG9yID0gL15cXFtvYmplY3QgLis/Q29uc3RydWN0b3JcXF0kLztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgc3VwcG9ydGVkIGJ5IGBfLmNsb25lYC4gKi9cbnZhciBjbG9uZWFibGVUYWdzID0ge307XG5jbG9uZWFibGVUYWdzW2FyZ3NUYWddID0gY2xvbmVhYmxlVGFnc1thcnJheVRhZ10gPVxuY2xvbmVhYmxlVGFnc1thcnJheUJ1ZmZlclRhZ10gPSBjbG9uZWFibGVUYWdzW2RhdGFWaWV3VGFnXSA9XG5jbG9uZWFibGVUYWdzW2Jvb2xUYWddID0gY2xvbmVhYmxlVGFnc1tkYXRlVGFnXSA9XG5jbG9uZWFibGVUYWdzW2Zsb2F0MzJUYWddID0gY2xvbmVhYmxlVGFnc1tmbG9hdDY0VGFnXSA9XG5jbG9uZWFibGVUYWdzW2ludDhUYWddID0gY2xvbmVhYmxlVGFnc1tpbnQxNlRhZ10gPVxuY2xvbmVhYmxlVGFnc1tpbnQzMlRhZ10gPSBjbG9uZWFibGVUYWdzW21hcFRhZ10gPVxuY2xvbmVhYmxlVGFnc1tudW1iZXJUYWddID0gY2xvbmVhYmxlVGFnc1tvYmplY3RUYWddID1cbmNsb25lYWJsZVRhZ3NbcmVnZXhwVGFnXSA9IGNsb25lYWJsZVRhZ3Nbc2V0VGFnXSA9XG5jbG9uZWFibGVUYWdzW3N0cmluZ1RhZ10gPSBjbG9uZWFibGVUYWdzW3N5bWJvbFRhZ10gPVxuY2xvbmVhYmxlVGFnc1t1aW50OFRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPVxuY2xvbmVhYmxlVGFnc1t1aW50MTZUYWddID0gY2xvbmVhYmxlVGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbmNsb25lYWJsZVRhZ3NbZXJyb3JUYWddID0gY2xvbmVhYmxlVGFnc1tmdW5jVGFnXSA9XG5jbG9uZWFibGVUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKipcbiAqIEFkZHMgdGhlIGtleS12YWx1ZSBgcGFpcmAgdG8gYG1hcGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0FycmF5fSBwYWlyIFRoZSBrZXktdmFsdWUgcGFpciB0byBhZGQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBtYXBgLlxuICovXG5mdW5jdGlvbiBhZGRNYXBFbnRyeShtYXAsIHBhaXIpIHtcbiAgLy8gRG9uJ3QgcmV0dXJuIGBtYXAuc2V0YCBiZWNhdXNlIGl0J3Mgbm90IGNoYWluYWJsZSBpbiBJRSAxMS5cbiAgbWFwLnNldChwYWlyWzBdLCBwYWlyWzFdKTtcbiAgcmV0dXJuIG1hcDtcbn1cblxuLyoqXG4gKiBBZGRzIGB2YWx1ZWAgdG8gYHNldGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBtb2RpZnkuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBhZGQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBzZXRgLlxuICovXG5mdW5jdGlvbiBhZGRTZXRFbnRyeShzZXQsIHZhbHVlKSB7XG4gIC8vIERvbid0IHJldHVybiBgc2V0LmFkZGAgYmVjYXVzZSBpdCdzIG5vdCBjaGFpbmFibGUgaW4gSUUgMTEuXG4gIHNldC5hZGQodmFsdWUpO1xuICByZXR1cm4gc2V0O1xufVxuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5mb3JFYWNoYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcbiAqIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlFYWNoKGFycmF5LCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGlmIChpdGVyYXRlZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkgPT09IGZhbHNlKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG4vKipcbiAqIEFwcGVuZHMgdGhlIGVsZW1lbnRzIG9mIGB2YWx1ZXNgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhcHBlbmQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgb2Zmc2V0ID0gYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgYXJyYXlbb2Zmc2V0ICsgaW5kZXhdID0gdmFsdWVzW2luZGV4XTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnJlZHVjZWAgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yXG4gKiBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHsqfSBbYWNjdW11bGF0b3JdIFRoZSBpbml0aWFsIHZhbHVlLlxuICogQHBhcmFtIHtib29sZWFufSBbaW5pdEFjY3VtXSBTcGVjaWZ5IHVzaW5nIHRoZSBmaXJzdCBlbGVtZW50IG9mIGBhcnJheWAgYXNcbiAqICB0aGUgaW5pdGlhbCB2YWx1ZS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBhY2N1bXVsYXRlZCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlSZWR1Y2UoYXJyYXksIGl0ZXJhdGVlLCBhY2N1bXVsYXRvciwgaW5pdEFjY3VtKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuXG4gIGlmIChpbml0QWNjdW0gJiYgbGVuZ3RoKSB7XG4gICAgYWNjdW11bGF0b3IgPSBhcnJheVsrK2luZGV4XTtcbiAgfVxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGFjY3VtdWxhdG9yID0gaXRlcmF0ZWUoYWNjdW11bGF0b3IsIGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KTtcbiAgfVxuICByZXR1cm4gYWNjdW11bGF0b3I7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udGltZXNgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kc1xuICogb3IgbWF4IGFycmF5IGxlbmd0aCBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gaW52b2tlIGBpdGVyYXRlZWAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiByZXN1bHRzLlxuICovXG5mdW5jdGlvbiBiYXNlVGltZXMobiwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSBBcnJheShuKTtcblxuICB3aGlsZSAoKytpbmRleCA8IG4pIHtcbiAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoaW5kZXgpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QgaW4gSUUgPCA5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNIb3N0T2JqZWN0KHZhbHVlKSB7XG4gIC8vIE1hbnkgaG9zdCBvYmplY3RzIGFyZSBgT2JqZWN0YCBvYmplY3RzIHRoYXQgY2FuIGNvZXJjZSB0byBzdHJpbmdzXG4gIC8vIGRlc3BpdGUgaGF2aW5nIGltcHJvcGVybHkgZGVmaW5lZCBgdG9TdHJpbmdgIG1ldGhvZHMuXG4gIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgaWYgKHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlLnRvU3RyaW5nICE9ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gISEodmFsdWUgKyAnJyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGBtYXBgIHRvIGl0cyBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXG4gKi9cbmZ1bmN0aW9uIG1hcFRvQXJyYXkobWFwKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobWFwLnNpemUpO1xuXG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB1bmFyeSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgIHdpdGggaXRzIGFyZ3VtZW50IHRyYW5zZm9ybWVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSBhcmd1bWVudCB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlckFyZyhmdW5jLCB0cmFuc2Zvcm0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBmdW5jKHRyYW5zZm9ybShhcmcpKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgc2V0YCB0byBhbiBhcnJheSBvZiBpdHMgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc2V0IFRoZSBzZXQgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBzZXRUb0FycmF5KHNldCkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KHNldC5zaXplKTtcblxuICBzZXQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGUsXG4gICAgZnVuY1Byb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlLFxuICAgIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL1xudmFyIGNvcmVKc0RhdGEgPSByb290WydfX2NvcmUtanNfc2hhcmVkX18nXTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1ldGhvZHMgbWFzcXVlcmFkaW5nIGFzIG5hdGl2ZS4gKi9cbnZhciBtYXNrU3JjS2V5ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgdWlkID0gL1teLl0rJC8uZXhlYyhjb3JlSnNEYXRhICYmIGNvcmVKc0RhdGEua2V5cyAmJiBjb3JlSnNEYXRhLmtleXMuSUVfUFJPVE8gfHwgJycpO1xuICByZXR1cm4gdWlkID8gKCdTeW1ib2woc3JjKV8xLicgKyB1aWQpIDogJyc7XG59KCkpO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgb2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGlmIGEgbWV0aG9kIGlzIG5hdGl2ZS4gKi9cbnZhciByZUlzTmF0aXZlID0gUmVnRXhwKCdeJyArXG4gIGZ1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwgJ1xcXFwkJicpXG4gIC5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLCAnJDEuKj8nKSArICckJ1xuKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgQnVmZmVyID0gbW9kdWxlRXhwb3J0cyA/IHJvb3QuQnVmZmVyIDogdW5kZWZpbmVkLFxuICAgIFN5bWJvbCA9IHJvb3QuU3ltYm9sLFxuICAgIFVpbnQ4QXJyYXkgPSByb290LlVpbnQ4QXJyYXksXG4gICAgZ2V0UHJvdG90eXBlID0gb3ZlckFyZyhPYmplY3QuZ2V0UHJvdG90eXBlT2YsIE9iamVjdCksXG4gICAgb2JqZWN0Q3JlYXRlID0gT2JqZWN0LmNyZWF0ZSxcbiAgICBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlLFxuICAgIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlR2V0U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsXG4gICAgbmF0aXZlSXNCdWZmZXIgPSBCdWZmZXIgPyBCdWZmZXIuaXNCdWZmZXIgOiB1bmRlZmluZWQsXG4gICAgbmF0aXZlS2V5cyA9IG92ZXJBcmcoT2JqZWN0LmtleXMsIE9iamVjdCk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBEYXRhVmlldyA9IGdldE5hdGl2ZShyb290LCAnRGF0YVZpZXcnKSxcbiAgICBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpLFxuICAgIFByb21pc2UgPSBnZXROYXRpdmUocm9vdCwgJ1Byb21pc2UnKSxcbiAgICBTZXQgPSBnZXROYXRpdmUocm9vdCwgJ1NldCcpLFxuICAgIFdlYWtNYXAgPSBnZXROYXRpdmUocm9vdCwgJ1dlYWtNYXAnKSxcbiAgICBuYXRpdmVDcmVhdGUgPSBnZXROYXRpdmUoT2JqZWN0LCAnY3JlYXRlJyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtYXBzLCBzZXRzLCBhbmQgd2Vha21hcHMuICovXG52YXIgZGF0YVZpZXdDdG9yU3RyaW5nID0gdG9Tb3VyY2UoRGF0YVZpZXcpLFxuICAgIG1hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShNYXApLFxuICAgIHByb21pc2VDdG9yU3RyaW5nID0gdG9Tb3VyY2UoUHJvbWlzZSksXG4gICAgc2V0Q3RvclN0cmluZyA9IHRvU291cmNlKFNldCksXG4gICAgd2Vha01hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShXZWFrTWFwKTtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFZhbHVlT2YgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnZhbHVlT2YgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhhc2ggb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID8gZW50cmllcy5sZW5ndGggOiAwO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge09iamVjdH0gaGFzaCBUaGUgaGFzaCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaERlbGV0ZShrZXkpIHtcbiAgcmV0dXJuIHRoaXMuaGFzKGtleSkgJiYgZGVsZXRlIHRoaXMuX19kYXRhX19ba2V5XTtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBoYXNoIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGhhc2hHZXQoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKG5hdGl2ZUNyZWF0ZSkge1xuICAgIHZhciByZXN1bHQgPSBkYXRhW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdCA9PT0gSEFTSF9VTkRFRklORUQgPyB1bmRlZmluZWQgOiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KSA/IGRhdGFba2V5XSA6IHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBoYXNoIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoSGFzKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHJldHVybiBuYXRpdmVDcmVhdGUgPyBkYXRhW2tleV0gIT09IHVuZGVmaW5lZCA6IGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBoYXNoIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgaGFzaCBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gaGFzaFNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgZGF0YVtrZXldID0gKG5hdGl2ZUNyZWF0ZSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkKSA/IEhBU0hfVU5ERUZJTkVEIDogdmFsdWU7XG4gIHJldHVybiB0aGlzO1xufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgSGFzaGAuXG5IYXNoLnByb3RvdHlwZS5jbGVhciA9IGhhc2hDbGVhcjtcbkhhc2gucHJvdG90eXBlWydkZWxldGUnXSA9IGhhc2hEZWxldGU7XG5IYXNoLnByb3RvdHlwZS5nZXQgPSBoYXNoR2V0O1xuSGFzaC5wcm90b3R5cGUuaGFzID0gaGFzaEhhcztcbkhhc2gucHJvdG90eXBlLnNldCA9IGhhc2hTZXQ7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBsaXN0IGNhY2hlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTGlzdENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID8gZW50cmllcy5sZW5ndGggOiAwO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGxhc3RJbmRleCA9IGRhdGEubGVuZ3RoIC0gMTtcbiAgaWYgKGluZGV4ID09IGxhc3RJbmRleCkge1xuICAgIGRhdGEucG9wKCk7XG4gIH0gZWxzZSB7XG4gICAgc3BsaWNlLmNhbGwoZGF0YSwgaW5kZXgsIDEpO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGxpc3QgY2FjaGUgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVHZXQoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgcmV0dXJuIGluZGV4IDwgMCA/IHVuZGVmaW5lZCA6IGRhdGFbaW5kZXhdWzFdO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIGxpc3QgY2FjaGUgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gYXNzb2NJbmRleE9mKHRoaXMuX19kYXRhX18sIGtleSkgPiAtMTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBsaXN0IGNhY2hlIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBsaXN0IGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICBkYXRhLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSBlbHNlIHtcbiAgICBkYXRhW2luZGV4XVsxXSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTGlzdENhY2hlYC5cbkxpc3RDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBsaXN0Q2FjaGVDbGVhcjtcbkxpc3RDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbGlzdENhY2hlRGVsZXRlO1xuTGlzdENhY2hlLnByb3RvdHlwZS5nZXQgPSBsaXN0Q2FjaGVHZXQ7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmhhcyA9IGxpc3RDYWNoZUhhcztcbkxpc3RDYWNoZS5wcm90b3R5cGUuc2V0ID0gbGlzdENhY2hlU2V0O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBtYXAgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTWFwQ2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPyBlbnRyaWVzLmxlbmd0aCA6IDA7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IHtcbiAgICAnaGFzaCc6IG5ldyBIYXNoLFxuICAgICdtYXAnOiBuZXcgKE1hcCB8fCBMaXN0Q2FjaGUpLFxuICAgICdzdHJpbmcnOiBuZXcgSGFzaFxuICB9O1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSlbJ2RlbGV0ZSddKGtleSk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbWFwIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUdldChrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5nZXQoa2V5KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBtYXAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5oYXMoa2V5KTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBtYXAgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbWFwIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZVNldChrZXksIHZhbHVlKSB7XG4gIGdldE1hcERhdGEodGhpcywga2V5KS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHJldHVybiB0aGlzO1xufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTWFwQ2FjaGVgLlxuTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyID0gbWFwQ2FjaGVDbGVhcjtcbk1hcENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBtYXBDYWNoZURlbGV0ZTtcbk1hcENhY2hlLnByb3RvdHlwZS5nZXQgPSBtYXBDYWNoZUdldDtcbk1hcENhY2hlLnByb3RvdHlwZS5oYXMgPSBtYXBDYWNoZUhhcztcbk1hcENhY2hlLnByb3RvdHlwZS5zZXQgPSBtYXBDYWNoZVNldDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RhY2sgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU3RhY2soZW50cmllcykge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZShlbnRyaWVzKTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBTdGFja1xuICovXG5mdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gIHJldHVybiB0aGlzLl9fZGF0YV9fWydkZWxldGUnXShrZXkpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0hhcyhrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgc3RhY2sgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGNhY2hlID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKGNhY2hlIGluc3RhbmNlb2YgTGlzdENhY2hlKSB7XG4gICAgdmFyIHBhaXJzID0gY2FjaGUuX19kYXRhX187XG4gICAgaWYgKCFNYXAgfHwgKHBhaXJzLmxlbmd0aCA8IExBUkdFX0FSUkFZX1NJWkUgLSAxKSkge1xuICAgICAgcGFpcnMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGNhY2hlID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZShwYWlycyk7XG4gIH1cbiAgY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFN0YWNrYC5cblN0YWNrLnByb3RvdHlwZS5jbGVhciA9IHN0YWNrQ2xlYXI7XG5TdGFjay5wcm90b3R5cGVbJ2RlbGV0ZSddID0gc3RhY2tEZWxldGU7XG5TdGFjay5wcm90b3R5cGUuZ2V0ID0gc3RhY2tHZXQ7XG5TdGFjay5wcm90b3R5cGUuaGFzID0gc3RhY2tIYXM7XG5TdGFjay5wcm90b3R5cGUuc2V0ID0gc3RhY2tTZXQ7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiB0aGUgYXJyYXktbGlrZSBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5oZXJpdGVkIFNwZWNpZnkgcmV0dXJuaW5nIGluaGVyaXRlZCBwcm9wZXJ0eSBuYW1lcy5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIGFycmF5TGlrZUtleXModmFsdWUsIGluaGVyaXRlZCkge1xuICAvLyBTYWZhcmkgOC4xIG1ha2VzIGBhcmd1bWVudHMuY2FsbGVlYCBlbnVtZXJhYmxlIGluIHN0cmljdCBtb2RlLlxuICAvLyBTYWZhcmkgOSBtYWtlcyBgYXJndW1lbnRzLmxlbmd0aGAgZW51bWVyYWJsZSBpbiBzdHJpY3QgbW9kZS5cbiAgdmFyIHJlc3VsdCA9IChpc0FycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSkpXG4gICAgPyBiYXNlVGltZXModmFsdWUubGVuZ3RoLCBTdHJpbmcpXG4gICAgOiBbXTtcblxuICB2YXIgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aCxcbiAgICAgIHNraXBJbmRleGVzID0gISFsZW5ndGg7XG5cbiAgZm9yICh2YXIga2V5IGluIHZhbHVlKSB7XG4gICAgaWYgKChpbmhlcml0ZWQgfHwgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwga2V5KSkgJiZcbiAgICAgICAgIShza2lwSW5kZXhlcyAmJiAoa2V5ID09ICdsZW5ndGgnIHx8IGlzSW5kZXgoa2V5LCBsZW5ndGgpKSkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQXNzaWducyBgdmFsdWVgIHRvIGBrZXlgIG9mIGBvYmplY3RgIGlmIHRoZSBleGlzdGluZyB2YWx1ZSBpcyBub3QgZXF1aXZhbGVudFxuICogdXNpbmcgW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGZvciBlcXVhbGl0eSBjb21wYXJpc29ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gYXNzaWduLlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYXNzaWduLlxuICovXG5mdW5jdGlvbiBhc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV07XG4gIGlmICghKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmIGVxKG9ialZhbHVlLCB2YWx1ZSkpIHx8XG4gICAgICAodmFsdWUgPT09IHVuZGVmaW5lZCAmJiAhKGtleSBpbiBvYmplY3QpKSkge1xuICAgIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIH1cbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgYGtleWAgaXMgZm91bmQgaW4gYGFycmF5YCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgaWYgKGVxKGFycmF5W2xlbmd0aF1bMF0sIGtleSkpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5hc3NpZ25gIHdpdGhvdXQgc3VwcG9ydCBmb3IgbXVsdGlwbGUgc291cmNlc1xuICogb3IgYGN1c3RvbWl6ZXJgIGZ1bmN0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgc291cmNlIG9iamVjdC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VBc3NpZ24ob2JqZWN0LCBzb3VyY2UpIHtcbiAgcmV0dXJuIG9iamVjdCAmJiBjb3B5T2JqZWN0KHNvdXJjZSwga2V5cyhzb3VyY2UpLCBvYmplY3QpO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmNsb25lYCBhbmQgYF8uY2xvbmVEZWVwYCB3aGljaCB0cmFja3NcbiAqIHRyYXZlcnNlZCBvYmplY3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0Z1bGxdIFNwZWNpZnkgYSBjbG9uZSBpbmNsdWRpbmcgc3ltYm9scy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNsb25pbmcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2tleV0gVGhlIGtleSBvZiBgdmFsdWVgLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBwYXJlbnQgb2JqZWN0IG9mIGB2YWx1ZWAuXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIG9iamVjdHMgYW5kIHRoZWlyIGNsb25lIGNvdW50ZXJwYXJ0cy5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBjbG9uZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGJhc2VDbG9uZSh2YWx1ZSwgaXNEZWVwLCBpc0Z1bGwsIGN1c3RvbWl6ZXIsIGtleSwgb2JqZWN0LCBzdGFjaykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoY3VzdG9taXplcikge1xuICAgIHJlc3VsdCA9IG9iamVjdCA/IGN1c3RvbWl6ZXIodmFsdWUsIGtleSwgb2JqZWN0LCBzdGFjaykgOiBjdXN0b21pemVyKHZhbHVlKTtcbiAgfVxuICBpZiAocmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpO1xuICBpZiAoaXNBcnIpIHtcbiAgICByZXN1bHQgPSBpbml0Q2xvbmVBcnJheSh2YWx1ZSk7XG4gICAgaWYgKCFpc0RlZXApIHtcbiAgICAgIHJldHVybiBjb3B5QXJyYXkodmFsdWUsIHJlc3VsdCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhciB0YWcgPSBnZXRUYWcodmFsdWUpLFxuICAgICAgICBpc0Z1bmMgPSB0YWcgPT0gZnVuY1RhZyB8fCB0YWcgPT0gZ2VuVGFnO1xuXG4gICAgaWYgKGlzQnVmZmVyKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGNsb25lQnVmZmVyKHZhbHVlLCBpc0RlZXApO1xuICAgIH1cbiAgICBpZiAodGFnID09IG9iamVjdFRhZyB8fCB0YWcgPT0gYXJnc1RhZyB8fCAoaXNGdW5jICYmICFvYmplY3QpKSB7XG4gICAgICBpZiAoaXNIb3N0T2JqZWN0KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gb2JqZWN0ID8gdmFsdWUgOiB7fTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdCA9IGluaXRDbG9uZU9iamVjdChpc0Z1bmMgPyB7fSA6IHZhbHVlKTtcbiAgICAgIGlmICghaXNEZWVwKSB7XG4gICAgICAgIHJldHVybiBjb3B5U3ltYm9scyh2YWx1ZSwgYmFzZUFzc2lnbihyZXN1bHQsIHZhbHVlKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghY2xvbmVhYmxlVGFnc1t0YWddKSB7XG4gICAgICAgIHJldHVybiBvYmplY3QgPyB2YWx1ZSA6IHt9O1xuICAgICAgfVxuICAgICAgcmVzdWx0ID0gaW5pdENsb25lQnlUYWcodmFsdWUsIHRhZywgYmFzZUNsb25lLCBpc0RlZXApO1xuICAgIH1cbiAgfVxuICAvLyBDaGVjayBmb3IgY2lyY3VsYXIgcmVmZXJlbmNlcyBhbmQgcmV0dXJuIGl0cyBjb3JyZXNwb25kaW5nIGNsb25lLlxuICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICB2YXIgc3RhY2tlZCA9IHN0YWNrLmdldCh2YWx1ZSk7XG4gIGlmIChzdGFja2VkKSB7XG4gICAgcmV0dXJuIHN0YWNrZWQ7XG4gIH1cbiAgc3RhY2suc2V0KHZhbHVlLCByZXN1bHQpO1xuXG4gIGlmICghaXNBcnIpIHtcbiAgICB2YXIgcHJvcHMgPSBpc0Z1bGwgPyBnZXRBbGxLZXlzKHZhbHVlKSA6IGtleXModmFsdWUpO1xuICB9XG4gIGFycmF5RWFjaChwcm9wcyB8fCB2YWx1ZSwgZnVuY3Rpb24oc3ViVmFsdWUsIGtleSkge1xuICAgIGlmIChwcm9wcykge1xuICAgICAga2V5ID0gc3ViVmFsdWU7XG4gICAgICBzdWJWYWx1ZSA9IHZhbHVlW2tleV07XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IHBvcHVsYXRlIGNsb25lIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgYXNzaWduVmFsdWUocmVzdWx0LCBrZXksIGJhc2VDbG9uZShzdWJWYWx1ZSwgaXNEZWVwLCBpc0Z1bGwsIGN1c3RvbWl6ZXIsIGtleSwgdmFsdWUsIHN0YWNrKSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmNyZWF0ZWAgd2l0aG91dCBzdXBwb3J0IGZvciBhc3NpZ25pbmdcbiAqIHByb3BlcnRpZXMgdG8gdGhlIGNyZWF0ZWQgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvdG90eXBlIFRoZSBvYmplY3QgdG8gaW5oZXJpdCBmcm9tLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gYmFzZUNyZWF0ZShwcm90bykge1xuICByZXR1cm4gaXNPYmplY3QocHJvdG8pID8gb2JqZWN0Q3JlYXRlKHByb3RvKSA6IHt9O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRBbGxLZXlzYCBhbmQgYGdldEFsbEtleXNJbmAgd2hpY2ggdXNlc1xuICogYGtleXNGdW5jYCBhbmQgYHN5bWJvbHNGdW5jYCB0byBnZXQgdGhlIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kXG4gKiBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc3ltYm9sc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5c0Z1bmMsIHN5bWJvbHNGdW5jKSB7XG4gIHZhciByZXN1bHQgPSBrZXlzRnVuYyhvYmplY3QpO1xuICByZXR1cm4gaXNBcnJheShvYmplY3QpID8gcmVzdWx0IDogYXJyYXlQdXNoKHJlc3VsdCwgc3ltYm9sc0Z1bmMob2JqZWN0KSk7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSkge1xuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNOYXRpdmVgIHdpdGhvdXQgYmFkIHNoaW0gY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgbmF0aXZlIGZ1bmN0aW9uLFxuICogIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzTmF0aXZlKHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3QodmFsdWUpIHx8IGlzTWFza2VkKHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcGF0dGVybiA9IChpc0Z1bmN0aW9uKHZhbHVlKSB8fCBpc0hvc3RPYmplY3QodmFsdWUpKSA/IHJlSXNOYXRpdmUgOiByZUlzSG9zdEN0b3I7XG4gIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5rZXlzYCB3aGljaCBkb2Vzbid0IHRyZWF0IHNwYXJzZSBhcnJheXMgYXMgZGVuc2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VLZXlzKG9iamVjdCkge1xuICBpZiAoIWlzUHJvdG90eXBlKG9iamVjdCkpIHtcbiAgICByZXR1cm4gbmF0aXZlS2V5cyhvYmplY3QpO1xuICB9XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIE9iamVjdChvYmplY3QpKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmIGtleSAhPSAnY29uc3RydWN0b3InKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiAgYGJ1ZmZlcmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QnVmZmVyfSBidWZmZXIgVGhlIGJ1ZmZlciB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBjbG9uZUJ1ZmZlcihidWZmZXIsIGlzRGVlcCkge1xuICBpZiAoaXNEZWVwKSB7XG4gICAgcmV0dXJuIGJ1ZmZlci5zbGljZSgpO1xuICB9XG4gIHZhciByZXN1bHQgPSBuZXcgYnVmZmVyLmNvbnN0cnVjdG9yKGJ1ZmZlci5sZW5ndGgpO1xuICBidWZmZXIuY29weShyZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgYXJyYXlCdWZmZXJgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5QnVmZmVyfSBhcnJheUJ1ZmZlciBUaGUgYXJyYXkgYnVmZmVyIHRvIGNsb25lLlxuICogQHJldHVybnMge0FycmF5QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYXJyYXkgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBjbG9uZUFycmF5QnVmZmVyKGFycmF5QnVmZmVyKSB7XG4gIHZhciByZXN1bHQgPSBuZXcgYXJyYXlCdWZmZXIuY29uc3RydWN0b3IoYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCk7XG4gIG5ldyBVaW50OEFycmF5KHJlc3VsdCkuc2V0KG5ldyBVaW50OEFycmF5KGFycmF5QnVmZmVyKSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIGBkYXRhVmlld2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhVmlldyBUaGUgZGF0YSB2aWV3IHRvIGNsb25lLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCBkYXRhIHZpZXcuXG4gKi9cbmZ1bmN0aW9uIGNsb25lRGF0YVZpZXcoZGF0YVZpZXcsIGlzRGVlcCkge1xuICB2YXIgYnVmZmVyID0gaXNEZWVwID8gY2xvbmVBcnJheUJ1ZmZlcihkYXRhVmlldy5idWZmZXIpIDogZGF0YVZpZXcuYnVmZmVyO1xuICByZXR1cm4gbmV3IGRhdGFWaWV3LmNvbnN0cnVjdG9yKGJ1ZmZlciwgZGF0YVZpZXcuYnl0ZU9mZnNldCwgZGF0YVZpZXcuYnl0ZUxlbmd0aCk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjbG9uZUZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNsb25lIHZhbHVlcy5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgbWFwLlxuICovXG5mdW5jdGlvbiBjbG9uZU1hcChtYXAsIGlzRGVlcCwgY2xvbmVGdW5jKSB7XG4gIHZhciBhcnJheSA9IGlzRGVlcCA/IGNsb25lRnVuYyhtYXBUb0FycmF5KG1hcCksIHRydWUpIDogbWFwVG9BcnJheShtYXApO1xuICByZXR1cm4gYXJyYXlSZWR1Y2UoYXJyYXksIGFkZE1hcEVudHJ5LCBuZXcgbWFwLmNvbnN0cnVjdG9yKTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYHJlZ2V4cGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWdleHAgVGhlIHJlZ2V4cCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCByZWdleHAuXG4gKi9cbmZ1bmN0aW9uIGNsb25lUmVnRXhwKHJlZ2V4cCkge1xuICB2YXIgcmVzdWx0ID0gbmV3IHJlZ2V4cC5jb25zdHJ1Y3RvcihyZWdleHAuc291cmNlLCByZUZsYWdzLmV4ZWMocmVnZXhwKSk7XG4gIHJlc3VsdC5sYXN0SW5kZXggPSByZWdleHAubGFzdEluZGV4O1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgc2V0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNldCBUaGUgc2V0IHRvIGNsb25lLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2xvbmVGdW5jIFRoZSBmdW5jdGlvbiB0byBjbG9uZSB2YWx1ZXMuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2xvbmVkIHNldC5cbiAqL1xuZnVuY3Rpb24gY2xvbmVTZXQoc2V0LCBpc0RlZXAsIGNsb25lRnVuYykge1xuICB2YXIgYXJyYXkgPSBpc0RlZXAgPyBjbG9uZUZ1bmMoc2V0VG9BcnJheShzZXQpLCB0cnVlKSA6IHNldFRvQXJyYXkoc2V0KTtcbiAgcmV0dXJuIGFycmF5UmVkdWNlKGFycmF5LCBhZGRTZXRFbnRyeSwgbmV3IHNldC5jb25zdHJ1Y3Rvcik7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIHRoZSBgc3ltYm9sYCBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzeW1ib2wgVGhlIHN5bWJvbCBvYmplY3QgdG8gY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgc3ltYm9sIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gY2xvbmVTeW1ib2woc3ltYm9sKSB7XG4gIHJldHVybiBzeW1ib2xWYWx1ZU9mID8gT2JqZWN0KHN5bWJvbFZhbHVlT2YuY2FsbChzeW1ib2wpKSA6IHt9O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgdHlwZWRBcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSB0eXBlZEFycmF5IFRoZSB0eXBlZCBhcnJheSB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgdHlwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh0eXBlZEFycmF5LCBpc0RlZXApIHtcbiAgdmFyIGJ1ZmZlciA9IGlzRGVlcCA/IGNsb25lQXJyYXlCdWZmZXIodHlwZWRBcnJheS5idWZmZXIpIDogdHlwZWRBcnJheS5idWZmZXI7XG4gIHJldHVybiBuZXcgdHlwZWRBcnJheS5jb25zdHJ1Y3RvcihidWZmZXIsIHR5cGVkQXJyYXkuYnl0ZU9mZnNldCwgdHlwZWRBcnJheS5sZW5ndGgpO1xufVxuXG4vKipcbiAqIENvcGllcyB0aGUgdmFsdWVzIG9mIGBzb3VyY2VgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IHNvdXJjZSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgZnJvbS5cbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheT1bXV0gVGhlIGFycmF5IHRvIGNvcHkgdmFsdWVzIHRvLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlBcnJheShzb3VyY2UsIGFycmF5KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gc291cmNlLmxlbmd0aDtcblxuICBhcnJheSB8fCAoYXJyYXkgPSBBcnJheShsZW5ndGgpKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBhcnJheVtpbmRleF0gPSBzb3VyY2VbaW5kZXhdO1xuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxuLyoqXG4gKiBDb3BpZXMgcHJvcGVydGllcyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tLlxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzIHRvIGNvcHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdD17fV0gVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG8uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb3BpZWQgdmFsdWVzLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weU9iamVjdChzb3VyY2UsIHByb3BzLCBvYmplY3QsIGN1c3RvbWl6ZXIpIHtcbiAgb2JqZWN0IHx8IChvYmplY3QgPSB7fSk7XG5cbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gcHJvcHNbaW5kZXhdO1xuXG4gICAgdmFyIG5ld1ZhbHVlID0gY3VzdG9taXplclxuICAgICAgPyBjdXN0b21pemVyKG9iamVjdFtrZXldLCBzb3VyY2Vba2V5XSwga2V5LCBvYmplY3QsIHNvdXJjZSlcbiAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgYXNzaWduVmFsdWUob2JqZWN0LCBrZXksIG5ld1ZhbHVlID09PSB1bmRlZmluZWQgPyBzb3VyY2Vba2V5XSA6IG5ld1ZhbHVlKTtcbiAgfVxuICByZXR1cm4gb2JqZWN0O1xufVxuXG4vKipcbiAqIENvcGllcyBvd24gc3ltYm9sIHByb3BlcnRpZXMgb2YgYHNvdXJjZWAgdG8gYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCB0byBjb3B5IHN5bWJvbHMgZnJvbS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0PXt9XSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyB0by5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlTeW1ib2xzKHNvdXJjZSwgb2JqZWN0KSB7XG4gIHJldHVybiBjb3B5T2JqZWN0KHNvdXJjZSwgZ2V0U3ltYm9scyhzb3VyY2UpLCBvYmplY3QpO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuXG4gKi9cbmZ1bmN0aW9uIGdldEFsbEtleXMob2JqZWN0KSB7XG4gIHJldHVybiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXMsIGdldFN5bWJvbHMpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGRhdGEgZm9yIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSByZWZlcmVuY2Uga2V5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLlxuICovXG5mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCwga2V5KSB7XG4gIHZhciBkYXRhID0gbWFwLl9fZGF0YV9fO1xuICByZXR1cm4gaXNLZXlhYmxlKGtleSlcbiAgICA/IGRhdGFbdHlwZW9mIGtleSA9PSAnc3RyaW5nJyA/ICdzdHJpbmcnIDogJ2hhc2gnXVxuICAgIDogZGF0YS5tYXA7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbmF0aXZlIGZ1bmN0aW9uIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIG1ldGhvZCB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZnVuY3Rpb24gaWYgaXQncyBuYXRpdmUsIGVsc2UgYHVuZGVmaW5lZGAuXG4gKi9cbmZ1bmN0aW9uIGdldE5hdGl2ZShvYmplY3QsIGtleSkge1xuICB2YXIgdmFsdWUgPSBnZXRWYWx1ZShvYmplY3QsIGtleSk7XG4gIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpID8gdmFsdWUgOiB1bmRlZmluZWQ7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3ltYm9sIHByb3BlcnRpZXMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3ltYm9scy5cbiAqL1xudmFyIGdldFN5bWJvbHMgPSBuYXRpdmVHZXRTeW1ib2xzID8gb3ZlckFyZyhuYXRpdmVHZXRTeW1ib2xzLCBPYmplY3QpIDogc3R1YkFycmF5O1xuXG4vKipcbiAqIEdldHMgdGhlIGB0b1N0cmluZ1RhZ2Agb2YgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG52YXIgZ2V0VGFnID0gYmFzZUdldFRhZztcblxuLy8gRmFsbGJhY2sgZm9yIGRhdGEgdmlld3MsIG1hcHMsIHNldHMsIGFuZCB3ZWFrIG1hcHMgaW4gSUUgMTEsXG4vLyBmb3IgZGF0YSB2aWV3cyBpbiBFZGdlIDwgMTQsIGFuZCBwcm9taXNlcyBpbiBOb2RlLmpzLlxuaWYgKChEYXRhVmlldyAmJiBnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpICE9IGRhdGFWaWV3VGFnKSB8fFxuICAgIChNYXAgJiYgZ2V0VGFnKG5ldyBNYXApICE9IG1hcFRhZykgfHxcbiAgICAoUHJvbWlzZSAmJiBnZXRUYWcoUHJvbWlzZS5yZXNvbHZlKCkpICE9IHByb21pc2VUYWcpIHx8XG4gICAgKFNldCAmJiBnZXRUYWcobmV3IFNldCkgIT0gc2V0VGFnKSB8fFxuICAgIChXZWFrTWFwICYmIGdldFRhZyhuZXcgV2Vha01hcCkgIT0gd2Vha01hcFRhZykpIHtcbiAgZ2V0VGFnID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSksXG4gICAgICAgIEN0b3IgPSByZXN1bHQgPT0gb2JqZWN0VGFnID8gdmFsdWUuY29uc3RydWN0b3IgOiB1bmRlZmluZWQsXG4gICAgICAgIGN0b3JTdHJpbmcgPSBDdG9yID8gdG9Tb3VyY2UoQ3RvcikgOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoY3RvclN0cmluZykge1xuICAgICAgc3dpdGNoIChjdG9yU3RyaW5nKSB7XG4gICAgICAgIGNhc2UgZGF0YVZpZXdDdG9yU3RyaW5nOiByZXR1cm4gZGF0YVZpZXdUYWc7XG4gICAgICAgIGNhc2UgbWFwQ3RvclN0cmluZzogcmV0dXJuIG1hcFRhZztcbiAgICAgICAgY2FzZSBwcm9taXNlQ3RvclN0cmluZzogcmV0dXJuIHByb21pc2VUYWc7XG4gICAgICAgIGNhc2Ugc2V0Q3RvclN0cmluZzogcmV0dXJuIHNldFRhZztcbiAgICAgICAgY2FzZSB3ZWFrTWFwQ3RvclN0cmluZzogcmV0dXJuIHdlYWtNYXBUYWc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgYW4gYXJyYXkgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuXG4gKi9cbmZ1bmN0aW9uIGluaXRDbG9uZUFycmF5KGFycmF5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBhcnJheS5jb25zdHJ1Y3RvcihsZW5ndGgpO1xuXG4gIC8vIEFkZCBwcm9wZXJ0aWVzIGFzc2lnbmVkIGJ5IGBSZWdFeHAjZXhlY2AuXG4gIGlmIChsZW5ndGggJiYgdHlwZW9mIGFycmF5WzBdID09ICdzdHJpbmcnICYmIGhhc093blByb3BlcnR5LmNhbGwoYXJyYXksICdpbmRleCcpKSB7XG4gICAgcmVzdWx0LmluZGV4ID0gYXJyYXkuaW5kZXg7XG4gICAgcmVzdWx0LmlucHV0ID0gYXJyYXkuaW5wdXQ7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplcyBhbiBvYmplY3QgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxuICovXG5mdW5jdGlvbiBpbml0Q2xvbmVPYmplY3Qob2JqZWN0KSB7XG4gIHJldHVybiAodHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmICFpc1Byb3RvdHlwZShvYmplY3QpKVxuICAgID8gYmFzZUNyZWF0ZShnZXRQcm90b3R5cGUob2JqZWN0KSlcbiAgICA6IHt9O1xufVxuXG4vKipcbiAqIEluaXRpYWxpemVzIGFuIG9iamVjdCBjbG9uZSBiYXNlZCBvbiBpdHMgYHRvU3RyaW5nVGFnYC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNsb25pbmcgdmFsdWVzIHdpdGggdGFncyBvZlxuICogYEJvb2xlYW5gLCBgRGF0ZWAsIGBFcnJvcmAsIGBOdW1iZXJgLCBgUmVnRXhwYCwgb3IgYFN0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjbG9uZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIGB0b1N0cmluZ1RhZ2Agb2YgdGhlIG9iamVjdCB0byBjbG9uZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNsb25lRnVuYyBUaGUgZnVuY3Rpb24gdG8gY2xvbmUgdmFsdWVzLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxuICovXG5mdW5jdGlvbiBpbml0Q2xvbmVCeVRhZyhvYmplY3QsIHRhZywgY2xvbmVGdW5jLCBpc0RlZXApIHtcbiAgdmFyIEN0b3IgPSBvYmplY3QuY29uc3RydWN0b3I7XG4gIHN3aXRjaCAodGFnKSB7XG4gICAgY2FzZSBhcnJheUJ1ZmZlclRhZzpcbiAgICAgIHJldHVybiBjbG9uZUFycmF5QnVmZmVyKG9iamVjdCk7XG5cbiAgICBjYXNlIGJvb2xUYWc6XG4gICAgY2FzZSBkYXRlVGFnOlxuICAgICAgcmV0dXJuIG5ldyBDdG9yKCtvYmplY3QpO1xuXG4gICAgY2FzZSBkYXRhVmlld1RhZzpcbiAgICAgIHJldHVybiBjbG9uZURhdGFWaWV3KG9iamVjdCwgaXNEZWVwKTtcblxuICAgIGNhc2UgZmxvYXQzMlRhZzogY2FzZSBmbG9hdDY0VGFnOlxuICAgIGNhc2UgaW50OFRhZzogY2FzZSBpbnQxNlRhZzogY2FzZSBpbnQzMlRhZzpcbiAgICBjYXNlIHVpbnQ4VGFnOiBjYXNlIHVpbnQ4Q2xhbXBlZFRhZzogY2FzZSB1aW50MTZUYWc6IGNhc2UgdWludDMyVGFnOlxuICAgICAgcmV0dXJuIGNsb25lVHlwZWRBcnJheShvYmplY3QsIGlzRGVlcCk7XG5cbiAgICBjYXNlIG1hcFRhZzpcbiAgICAgIHJldHVybiBjbG9uZU1hcChvYmplY3QsIGlzRGVlcCwgY2xvbmVGdW5jKTtcblxuICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgIGNhc2Ugc3RyaW5nVGFnOlxuICAgICAgcmV0dXJuIG5ldyBDdG9yKG9iamVjdCk7XG5cbiAgICBjYXNlIHJlZ2V4cFRhZzpcbiAgICAgIHJldHVybiBjbG9uZVJlZ0V4cChvYmplY3QpO1xuXG4gICAgY2FzZSBzZXRUYWc6XG4gICAgICByZXR1cm4gY2xvbmVTZXQob2JqZWN0LCBpc0RlZXAsIGNsb25lRnVuYyk7XG5cbiAgICBjYXNlIHN5bWJvbFRhZzpcbiAgICAgIHJldHVybiBjbG9uZVN5bWJvbChvYmplY3QpO1xuICB9XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGluZGV4LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbbGVuZ3RoPU1BWF9TQUZFX0lOVEVHRVJdIFRoZSB1cHBlciBib3VuZHMgb2YgYSB2YWxpZCBpbmRleC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgaW5kZXgsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNJbmRleCh2YWx1ZSwgbGVuZ3RoKSB7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcbiAgcmV0dXJuICEhbGVuZ3RoICYmXG4gICAgKHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyB8fCByZUlzVWludC50ZXN0KHZhbHVlKSkgJiZcbiAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleWFibGUodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAodHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicpXG4gICAgPyAodmFsdWUgIT09ICdfX3Byb3RvX18nKVxuICAgIDogKHZhbHVlID09PSBudWxsKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uY2xvbmVgIGV4Y2VwdCB0aGF0IGl0IHJlY3Vyc2l2ZWx5IGNsb25lcyBgdmFsdWVgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMS4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byByZWN1cnNpdmVseSBjbG9uZS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBkZWVwIGNsb25lZCB2YWx1ZS5cbiAqIEBzZWUgXy5jbG9uZVxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0cyA9IFt7ICdhJzogMSB9LCB7ICdiJzogMiB9XTtcbiAqXG4gKiB2YXIgZGVlcCA9IF8uY2xvbmVEZWVwKG9iamVjdHMpO1xuICogY29uc29sZS5sb2coZGVlcFswXSA9PT0gb2JqZWN0c1swXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBjbG9uZURlZXAodmFsdWUpIHtcbiAgcmV0dXJuIGJhc2VDbG9uZSh2YWx1ZSwgdHJ1ZSwgdHJ1ZSk7XG59XG5cbi8qKlxuICogUGVyZm9ybXMgYVxuICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZSBlcXVpdmFsZW50LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICogdmFyIG90aGVyID0geyAnYSc6IDEgfTtcbiAqXG4gKiBfLmVxKG9iamVjdCwgb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKCdhJywgJ2EnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKCdhJywgT2JqZWN0KCdhJykpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKE5hTiwgTmFOKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gZXEodmFsdWUsIG90aGVyKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gb3RoZXIgfHwgKHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXIpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhbiBgYXJndW1lbnRzYCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICogIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FyZ3VtZW50cyh2YWx1ZSkge1xuICAvLyBTYWZhcmkgOC4xIG1ha2VzIGBhcmd1bWVudHMuY2FsbGVlYCBlbnVtZXJhYmxlIGluIHN0cmljdCBtb2RlLlxuICByZXR1cm4gaXNBcnJheUxpa2VPYmplY3QodmFsdWUpICYmIGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsICdjYWxsZWUnKSAmJlxuICAgICghcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpIHx8IG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpID09IGFyZ3NUYWcpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYW4gYEFycmF5YCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLiBBIHZhbHVlIGlzIGNvbnNpZGVyZWQgYXJyYXktbGlrZSBpZiBpdCdzXG4gKiBub3QgYSBmdW5jdGlvbiBhbmQgaGFzIGEgYHZhbHVlLmxlbmd0aGAgdGhhdCdzIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIG9yXG4gKiBlcXVhbCB0byBgMGAgYW5kIGxlc3MgdGhhbiBvciBlcXVhbCB0byBgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZSgnYWJjJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUxpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhaXNGdW5jdGlvbih2YWx1ZSk7XG59XG5cbi8qKlxuICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5pc0FycmF5TGlrZWAgZXhjZXB0IHRoYXQgaXQgYWxzbyBjaGVja3MgaWYgYHZhbHVlYFxuICogaXMgYW4gb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LWxpa2Ugb2JqZWN0LFxuICogIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5TGlrZU9iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZU9iamVjdCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGlzQXJyYXlMaWtlKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlciwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBCdWZmZXIoMikpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IFVpbnQ4QXJyYXkoMikpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQnVmZmVyID0gbmF0aXZlSXNCdWZmZXIgfHwgc3R1YkZhbHNlO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDgtOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheSBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gaXNPYmplY3QodmFsdWUpID8gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGxlbmd0aC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvblxuICogW2BUb0xlbmd0aGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvbGVuZ3RoKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTGVuZ3RoKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKCczJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmXG4gICAgdmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICEhdmFsdWUgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAqIFtFUyBzcGVjXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8ua2V5cygnaGknKTtcbiAqIC8vID0+IFsnMCcsICcxJ11cbiAqL1xuZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCkgOiBiYXNlS2V5cyhvYmplY3QpO1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgZW1wdHkgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjEzLjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBlbXB0eSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIGFycmF5cyA9IF8udGltZXMoMiwgXy5zdHViQXJyYXkpO1xuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5cyk7XG4gKiAvLyA9PiBbW10sIFtdXVxuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5c1swXSA9PT0gYXJyYXlzWzFdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIHN0dWJBcnJheSgpIHtcbiAgcmV0dXJuIFtdO1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2xvbmVEZWVwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash.clonedeep/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fmarc13000%2FDocuments%2FGitHub%2FRebrew-Stacks%2Fmy-project%2Fmintrust%2Fapp%2Flayout.tsx&server=false!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fmarc13000%2FDocuments%2FGitHub%2FRebrew-Stacks%2Fmy-project%2Fmintrust%2Fapp%2Flayout.tsx&server=false! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(app-pages-browser)/./app/layout.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRm1hcmMxMzAwMCUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlJlYnJldy1TdGFja3MlMkZteS1wcm9qZWN0JTJGbWludHJ1c3QlMkZhcHAlMkZsYXlvdXQudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz85OTk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hcmMxMzAwMC9Eb2N1bWVudHMvR2l0SHViL1JlYnJldy1TdGFja3MvbXktcHJvamVjdC9taW50cnVzdC9hcHAvbGF5b3V0LnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fmarc13000%2FDocuments%2FGitHub%2FRebrew-Stacks%2Fmy-project%2Fmintrust%2Fapp%2Flayout.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"38b8a1809c5d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzdiZTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIzOGI4YTE4MDljNWRcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/UserContext.js":
/*!****************************!*\
  !*** ./app/UserContext.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserContext: function() { return /* binding */ UserContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9Vc2VyQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFFbkIsTUFBTUMsNEJBQWNELDBEQUFtQixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9Vc2VyQ29udGV4dC5qcz9jMjViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGNvbnN0IFVzZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiVXNlckNvbnRleHQiLCJjcmVhdGVDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/UserContext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RootLayout; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(app-pages-browser)/./app/globals.css\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _stacks_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stacks/connect */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/appConfig.js\");\n/* harmony import */ var _stacks_connect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stacks/connect */ \"(app-pages-browser)/./node_modules/@stacks/auth/dist/esm/userSession.js\");\n/* harmony import */ var _UserContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UserContext */ \"(app-pages-browser)/./app/UserContext.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction RootLayout(param) {\n    let { children } = param;\n    _s();\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({});\n    const appConfig = new _stacks_connect__WEBPACK_IMPORTED_MODULE_4__.AppConfig();\n    const userSession = new _stacks_connect__WEBPACK_IMPORTED_MODULE_5__.UserSession({\n        appConfig\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (userSession.isSignInPending()) {\n            userSession.handlePendingSignIn().then((userData)=>{\n                setUserData(userData);\n            });\n        } else if (userSession.isUserSignedIn()) {\n            setUserData(userSession.loadUserData());\n        }\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: (next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_6___default().className),\n            children: userData !== undefined ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UserContext__WEBPACK_IMPORTED_MODULE_3__.UserContext.Provider, {\n                value: {\n                    userData,\n                    userSession\n                },\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/marc13000/Documents/GitHub/Rebrew-Stacks/my-project/mintrust/app/layout.tsx\",\n                lineNumber: 33,\n                columnNumber: 13\n            }, this) : \"\"\n        }, void 0, false, {\n            fileName: \"/Users/marc13000/Documents/GitHub/Rebrew-Stacks/my-project/mintrust/app/layout.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/marc13000/Documents/GitHub/Rebrew-Stacks/my-project/mintrust/app/layout.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, this);\n}\n_s(RootLayout, \"LXAOzhxTy9nW1apql5Pcq7dSgFA=\");\n_c = RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9sYXlvdXQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQVVNQTtBQVJpQjtBQUU0QjtBQUNNO0FBRWI7QUFLN0IsU0FBU08sV0FBVyxLQUFZO1FBQVosRUFBRUMsUUFBUSxFQUFFLEdBQVo7O0lBQ2pDLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHUiwrQ0FBUUEsQ0FBQyxDQUFDO0lBRTFDLE1BQU1TLFlBQVksSUFBSVAsc0RBQVNBO0lBQy9CLE1BQU1RLGNBQWMsSUFBSVAsd0RBQVdBLENBQUM7UUFBRU07SUFBVTtJQUVoRFIsZ0RBQVNBLENBQUM7UUFDUixJQUFJUyxZQUFZQyxlQUFlLElBQUk7WUFDakNELFlBQVlFLG1CQUFtQixHQUFHQyxJQUFJLENBQUMsQ0FBQ047Z0JBQ3RDQyxZQUFZRDtZQUNkO1FBQ0YsT0FBTyxJQUFJRyxZQUFZSSxjQUFjLElBQUk7WUFDdkNOLFlBQVlFLFlBQVlLLFlBQVk7UUFDdEM7SUFDRixHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztrQkFDVCw0RUFBQ0M7WUFBS0MsV0FBV3JCLDJKQUFlO3NCQUMzQlMsYUFBYWEsMEJBQ1osOERBQUNoQixxREFBV0EsQ0FBQ2lCLFFBQVE7Z0JBQUNDLE9BQU87b0JBQUVmO29CQUFVRztnQkFBWTswQkFDbERKOzs7Ozt1QkFHSDs7Ozs7Ozs7Ozs7QUFLWjtHQTdCd0JEO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9sYXlvdXQudHN4Pzk5ODgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBcIi4vZ2xvYmFscy5jc3NcIjtcbmltcG9ydCB7IEludGVyIH0gZnJvbSBcIm5leHQvZm9udC9nb29nbGVcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBcHBDb25maWcsIFVzZXJTZXNzaW9uIH0gZnJvbSBcIkBzdGFja3MvY29ubmVjdFwiO1xuXG5pbXBvcnQgeyBVc2VyQ29udGV4dCB9IGZyb20gXCIuL1VzZXJDb250ZXh0XCI7XG5pbXBvcnQgTmF2YmFyIGZyb20gXCIuL2NvbXBvbmVudHMvTmF2YmFyXCI7XG5cbmNvbnN0IGludGVyID0gSW50ZXIoeyBzdWJzZXRzOiBbXCJsYXRpblwiXSB9KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgW3VzZXJEYXRhLCBzZXRVc2VyRGF0YV0gPSB1c2VTdGF0ZSh7fSk7XG5cbiAgY29uc3QgYXBwQ29uZmlnID0gbmV3IEFwcENvbmZpZygpO1xuICBjb25zdCB1c2VyU2Vzc2lvbiA9IG5ldyBVc2VyU2Vzc2lvbih7IGFwcENvbmZpZyB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1c2VyU2Vzc2lvbi5pc1NpZ25JblBlbmRpbmcoKSkge1xuICAgICAgdXNlclNlc3Npb24uaGFuZGxlUGVuZGluZ1NpZ25JbigpLnRoZW4oKHVzZXJEYXRhKSA9PiB7XG4gICAgICAgIHNldFVzZXJEYXRhKHVzZXJEYXRhKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodXNlclNlc3Npb24uaXNVc2VyU2lnbmVkSW4oKSkge1xuICAgICAgc2V0VXNlckRhdGEodXNlclNlc3Npb24ubG9hZFVzZXJEYXRhKCkpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGh0bWwgbGFuZz1cImVuXCI+XG4gICAgICA8Ym9keSBjbGFzc05hbWU9e2ludGVyLmNsYXNzTmFtZX0+XG4gICAgICAgICAge3VzZXJEYXRhICE9PSB1bmRlZmluZWQgPyAoXG4gICAgICAgICAgICA8VXNlckNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgdXNlckRhdGEsIHVzZXJTZXNzaW9uIH19PlxuICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L1VzZXJDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICBcIlwiXG4gICAgICAgICAgKX1cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiaW50ZXIiLCJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiQXBwQ29uZmlnIiwiVXNlclNlc3Npb24iLCJVc2VyQ29udGV4dCIsIlJvb3RMYXlvdXQiLCJjaGlsZHJlbiIsInVzZXJEYXRhIiwic2V0VXNlckRhdGEiLCJhcHBDb25maWciLCJ1c2VyU2Vzc2lvbiIsImlzU2lnbkluUGVuZGluZyIsImhhbmRsZVBlbmRpbmdTaWduSW4iLCJ0aGVuIiwiaXNVc2VyU2lnbmVkSW4iLCJsb2FkVXNlckRhdGEiLCJodG1sIiwibGFuZyIsImJvZHkiLCJjbGFzc05hbWUiLCJ1bmRlZmluZWQiLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/layout.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz8xM2FlIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs2ODY6KGUscix0KT0+e3ZhciBuPXQoODA4KTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDgwODplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNjg2KTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app/layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \********************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Inter_e66fe9', '__Inter_Fallback_e66fe9'\",\"fontStyle\":\"normal\"},\"className\":\"__className_e66fe9\"};\n    if(true) {\n      // 1697972852220\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwL2xheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxnRkFBZ0Y7QUFDM0csT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQXlKLGNBQWMsc0RBQXNEO0FBQzNQLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz8xZTFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX0ludGVyX2U2NmZlOScsICdfX0ludGVyX0ZhbGxiYWNrX2U2NmZlOSdcIixcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9lNjZmZTlcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTY5Nzk3Mjg1MjIyMFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvbWFyYzEzMDAwL0RvY3VtZW50cy9HaXRIdWIvUmVicmV3LVN0YWNrcy9teS1wcm9qZWN0L21pbnRydXN0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe[prop-missing]\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n      // component, which we don't yet support. Attach a noop catch handler to\n      // silence the error.\n      // TODO: Implement component stacks for async client components?\n\n      if (maybePromise && typeof maybePromise.catch === 'function') {\n        maybePromise.catch(function () {});\n      }\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ZmY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js":
/*!***************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_assert.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: function() { return /* binding */ bool; },\n/* harmony export */   bytes: function() { return /* binding */ bytes; },\n/* harmony export */   exists: function() { return /* binding */ exists; },\n/* harmony export */   hash: function() { return /* binding */ hash; },\n/* harmony export */   number: function() { return /* binding */ number; },\n/* harmony export */   output: function() { return /* binding */ output; }\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (assert);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQSxtREFBbUQsRUFBRTtBQUNyRDtBQUNPO0FBQ1A7QUFDQSxpREFBaUQsRUFBRTtBQUNuRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELFFBQVEsa0JBQWtCLFNBQVM7QUFDaEc7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixJQUFJO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWUsTUFBTSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fYXNzZXJ0LmpzPzNjYmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIG51bWJlcihuKSB7XG4gICAgaWYgKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihuKSB8fCBuIDwgMClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXcm9uZyBwb3NpdGl2ZSBpbnRlZ2VyOiAke259YCk7XG59XG5leHBvcnQgZnVuY3Rpb24gYm9vbChiKSB7XG4gICAgaWYgKHR5cGVvZiBiICE9PSAnYm9vbGVhbicpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgYm9vbGVhbiwgbm90ICR7Yn1gKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBieXRlcyhiLCAuLi5sZW5ndGhzKSB7XG4gICAgaWYgKCEoYiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBVaW50OEFycmF5Jyk7XG4gICAgaWYgKGxlbmd0aHMubGVuZ3RoID4gMCAmJiAhbGVuZ3Rocy5pbmNsdWRlcyhiLmxlbmd0aCkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIFVpbnQ4QXJyYXkgb2YgbGVuZ3RoICR7bGVuZ3Roc30sIG5vdCBvZiBsZW5ndGg9JHtiLmxlbmd0aH1gKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNoKGhhc2gpIHtcbiAgICBpZiAodHlwZW9mIGhhc2ggIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGhhc2guY3JlYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggc2hvdWxkIGJlIHdyYXBwZWQgYnkgdXRpbHMud3JhcENvbnN0cnVjdG9yJyk7XG4gICAgbnVtYmVyKGhhc2gub3V0cHV0TGVuKTtcbiAgICBudW1iZXIoaGFzaC5ibG9ja0xlbik7XG59XG5leHBvcnQgZnVuY3Rpb24gZXhpc3RzKGluc3RhbmNlLCBjaGVja0ZpbmlzaGVkID0gdHJ1ZSkge1xuICAgIGlmIChpbnN0YW5jZS5kZXN0cm95ZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCBpbnN0YW5jZSBoYXMgYmVlbiBkZXN0cm95ZWQnKTtcbiAgICBpZiAoY2hlY2tGaW5pc2hlZCAmJiBpbnN0YW5jZS5maW5pc2hlZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoI2RpZ2VzdCgpIGhhcyBhbHJlYWR5IGJlZW4gY2FsbGVkJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gb3V0cHV0KG91dCwgaW5zdGFuY2UpIHtcbiAgICBieXRlcyhvdXQpO1xuICAgIGNvbnN0IG1pbiA9IGluc3RhbmNlLm91dHB1dExlbjtcbiAgICBpZiAob3V0Lmxlbmd0aCA8IG1pbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGRpZ2VzdEludG8oKSBleHBlY3RzIG91dHB1dCBidWZmZXIgb2YgbGVuZ3RoIGF0IGxlYXN0ICR7bWlufWApO1xuICAgIH1cbn1cbmNvbnN0IGFzc2VydCA9IHtcbiAgICBudW1iZXIsXG4gICAgYm9vbCxcbiAgICBieXRlcyxcbiAgICBoYXNoLFxuICAgIGV4aXN0cyxcbiAgICBvdXRwdXQsXG59O1xuZXhwb3J0IGRlZmF1bHQgYXNzZXJ0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_sha2.js":
/*!*************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_sha2.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA2: function() { return /* binding */ SHA2; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fc2hhMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDcUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1CQUFtQiwyQ0FBSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFVO0FBQzlCO0FBQ0E7QUFDQSxRQUFRLHlEQUFhO0FBQ3JCLGdCQUFnQix5QkFBeUI7QUFDekMsZUFBZSxrREFBTztBQUN0QjtBQUNBLDBCQUEwQixVQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxREFBVTtBQUMzQyx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQixRQUFRLHlEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQyxjQUFjLE1BQU07QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0JBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQXFEO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3NoYTIuanM/YTEzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJy4vX2Fzc2VydC5qcyc7XG5pbXBvcnQgeyBIYXNoLCBjcmVhdGVWaWV3LCB0b0J5dGVzIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmV4cG9ydCBjbGFzcyBTSEEyIGV4dGVuZHMgSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYmxvY2tMZW4sIG91dHB1dExlbiwgcGFkT2Zmc2V0LCBpc0xFKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRoaXMucGFkT2Zmc2V0ID0gcGFkT2Zmc2V0O1xuICAgICAgICB0aGlzLmlzTEUgPSBpc0xFO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuKTtcbiAgICAgICAgdGhpcy52aWV3ID0gY3JlYXRlVmlldyh0aGlzLmJ1ZmZlcik7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIGNvbnN0IHsgdmlldywgYnVmZmVyLCBibG9ja0xlbiB9ID0gdGhpcztcbiAgICAgICAgZGF0YSA9IHRvQnl0ZXMoZGF0YSk7XG4gICAgICAgIGNvbnN0IGxlbiA9IGRhdGEubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBwb3MgPSAwOyBwb3MgPCBsZW47KSB7XG4gICAgICAgICAgICBjb25zdCB0YWtlID0gTWF0aC5taW4oYmxvY2tMZW4gLSB0aGlzLnBvcywgbGVuIC0gcG9zKTtcbiAgICAgICAgICAgIC8vIEZhc3QgcGF0aDogd2UgaGF2ZSBhdCBsZWFzdCBvbmUgYmxvY2sgaW4gaW5wdXQsIGNhc3QgaXQgdG8gdmlldyBhbmQgcHJvY2Vzc1xuICAgICAgICAgICAgaWYgKHRha2UgPT09IGJsb2NrTGVuKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YVZpZXcgPSBjcmVhdGVWaWV3KGRhdGEpO1xuICAgICAgICAgICAgICAgIGZvciAoOyBibG9ja0xlbiA8PSBsZW4gLSBwb3M7IHBvcyArPSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzKGRhdGFWaWV3LCBwb3MpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyLnNldChkYXRhLnN1YmFycmF5KHBvcywgcG9zICsgdGFrZSksIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvcyA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICB0aGlzLnJvdW5kQ2xlYW4oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIGFzc2VydC5vdXRwdXQob3V0LCB0aGlzKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIC8vIFBhZGRpbmdcbiAgICAgICAgLy8gV2UgY2FuIGF2b2lkIGFsbG9jYXRpb24gb2YgYnVmZmVyIGZvciBwYWRkaW5nIGNvbXBsZXRlbHkgaWYgaXRcbiAgICAgICAgLy8gd2FzIHByZXZpb3VzbHkgbm90IGFsbG9jYXRlZCBoZXJlLiBCdXQgaXQgd29uJ3QgY2hhbmdlIHBlcmZvcm1hbmNlLlxuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgdmlldywgYmxvY2tMZW4sIGlzTEUgfSA9IHRoaXM7XG4gICAgICAgIGxldCB7IHBvcyB9ID0gdGhpcztcbiAgICAgICAgLy8gYXBwZW5kIHRoZSBiaXQgJzEnIHRvIHRoZSBtZXNzYWdlXG4gICAgICAgIGJ1ZmZlcltwb3MrK10gPSAwYjEwMDAwMDAwO1xuICAgICAgICB0aGlzLmJ1ZmZlci5zdWJhcnJheShwb3MpLmZpbGwoMCk7XG4gICAgICAgIC8vIHdlIGhhdmUgbGVzcyB0aGFuIHBhZE9mZnNldCBsZWZ0IGluIGJ1ZmZlciwgc28gd2UgY2Fubm90IHB1dCBsZW5ndGggaW4gY3VycmVudCBibG9jaywgbmVlZCBwcm9jZXNzIGl0IGFuZCBwYWQgYWdhaW5cbiAgICAgICAgaWYgKHRoaXMucGFkT2Zmc2V0ID4gYmxvY2tMZW4gLSBwb3MpIHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgICAgIHBvcyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFkIHVudGlsIGZ1bGwgYmxvY2sgYnl0ZSB3aXRoIHplcm9zXG4gICAgICAgIGZvciAobGV0IGkgPSBwb3M7IGkgPCBibG9ja0xlbjsgaSsrKVxuICAgICAgICAgICAgYnVmZmVyW2ldID0gMDtcbiAgICAgICAgLy8gTm90ZTogc2hhNTEyIHJlcXVpcmVzIGxlbmd0aCB0byBiZSAxMjhiaXQgaW50ZWdlciwgYnV0IGxlbmd0aCBpbiBKUyB3aWxsIG92ZXJmbG93IGJlZm9yZSB0aGF0XG4gICAgICAgIC8vIFlvdSBuZWVkIHRvIHdyaXRlIGFyb3VuZCAyIGV4YWJ5dGVzICh1NjRfbWF4IC8gOCAvICgxMDI0Kio2KSkgZm9yIHRoaXMgdG8gaGFwcGVuLlxuICAgICAgICAvLyBTbyB3ZSBqdXN0IHdyaXRlIGxvd2VzdCA2NCBiaXRzIG9mIHRoYXQgdmFsdWUuXG4gICAgICAgIHNldEJpZ1VpbnQ2NCh2aWV3LCBibG9ja0xlbiAtIDgsIEJpZ0ludCh0aGlzLmxlbmd0aCAqIDgpLCBpc0xFKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzKHZpZXcsIDApO1xuICAgICAgICBjb25zdCBvdmlldyA9IGNyZWF0ZVZpZXcob3V0KTtcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5vdXRwdXRMZW47XG4gICAgICAgIC8vIE5PVEU6IHdlIGRvIGRpdmlzaW9uIGJ5IDQgbGF0ZXIsIHdoaWNoIHNob3VsZCBiZSBmdXNlZCBpbiBzaW5nbGUgb3Agd2l0aCBtb2R1bG8gYnkgSklUXG4gICAgICAgIGlmIChsZW4gJSA0KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdfc2hhMjogb3V0cHV0TGVuIHNob3VsZCBiZSBhbGlnbmVkIHRvIDMyYml0Jyk7XG4gICAgICAgIGNvbnN0IG91dExlbiA9IGxlbiAvIDQ7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5nZXQoKTtcbiAgICAgICAgaWYgKG91dExlbiA+IHN0YXRlLmxlbmd0aClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignX3NoYTI6IG91dHB1dExlbiBiaWdnZXIgdGhhbiBzdGF0ZScpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG91dExlbjsgaSsrKVxuICAgICAgICAgICAgb3ZpZXcuc2V0VWludDMyKDQgKiBpLCBzdGF0ZVtpXSwgaXNMRSk7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgY29uc3QgeyBidWZmZXIsIG91dHB1dExlbiB9ID0gdGhpcztcbiAgICAgICAgdGhpcy5kaWdlc3RJbnRvKGJ1ZmZlcik7XG4gICAgICAgIGNvbnN0IHJlcyA9IGJ1ZmZlci5zbGljZSgwLCBvdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgX2Nsb25lSW50byh0bykge1xuICAgICAgICB0byB8fCAodG8gPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcigpKTtcbiAgICAgICAgdG8uc2V0KC4uLnRoaXMuZ2V0KCkpO1xuICAgICAgICBjb25zdCB7IGJsb2NrTGVuLCBidWZmZXIsIGxlbmd0aCwgZmluaXNoZWQsIGRlc3Ryb3llZCwgcG9zIH0gPSB0aGlzO1xuICAgICAgICB0by5sZW5ndGggPSBsZW5ndGg7XG4gICAgICAgIHRvLnBvcyA9IHBvcztcbiAgICAgICAgdG8uZmluaXNoZWQgPSBmaW5pc2hlZDtcbiAgICAgICAgdG8uZGVzdHJveWVkID0gZGVzdHJveWVkO1xuICAgICAgICBpZiAobGVuZ3RoICUgYmxvY2tMZW4pXG4gICAgICAgICAgICB0by5idWZmZXIuc2V0KGJ1ZmZlcik7XG4gICAgICAgIHJldHVybiB0bztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_sha2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_u64.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: function() { return /* binding */ add; },\n/* harmony export */   fromBig: function() { return /* binding */ fromBig; },\n/* harmony export */   split: function() { return /* binding */ split; },\n/* harmony export */   toBig: function() { return /* binding */ toBig; }\n/* harmony export */ });\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (u64);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEMsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcz9lNTU4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFUzMl9NQVNLNjQgPSBCaWdJbnQoMiAqKiAzMiAtIDEpO1xuY29uc3QgXzMybiA9IEJpZ0ludCgzMik7XG4vLyBXZSBhcmUgbm90IHVzaW5nIEJpZ1VpbnQ2NEFycmF5LCBiZWNhdXNlIHRoZXkgYXJlIGV4dHJlbWVseSBzbG93IGFzIHBlciAyMDIyXG5leHBvcnQgZnVuY3Rpb24gZnJvbUJpZyhuLCBsZSA9IGZhbHNlKSB7XG4gICAgaWYgKGxlKVxuICAgICAgICByZXR1cm4geyBoOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpLCBsOiBOdW1iZXIoKG4gPj4gXzMybikgJiBVMzJfTUFTSzY0KSB9O1xuICAgIHJldHVybiB7IGg6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIHwgMCwgbDogTnVtYmVyKG4gJiBVMzJfTUFTSzY0KSB8IDAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdChsc3QsIGxlID0gZmFsc2UpIHtcbiAgICBsZXQgQWggPSBuZXcgVWludDMyQXJyYXkobHN0Lmxlbmd0aCk7XG4gICAgbGV0IEFsID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbHN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHsgaCwgbCB9ID0gZnJvbUJpZyhsc3RbaV0sIGxlKTtcbiAgICAgICAgW0FoW2ldLCBBbFtpXV0gPSBbaCwgbF07XG4gICAgfVxuICAgIHJldHVybiBbQWgsIEFsXTtcbn1cbmV4cG9ydCBjb25zdCB0b0JpZyA9IChoLCBsKSA9PiAoQmlnSW50KGggPj4+IDApIDw8IF8zMm4pIHwgQmlnSW50KGwgPj4+IDApO1xuLy8gZm9yIFNoaWZ0IGluIFswLCAzMilcbmNvbnN0IHNoclNIID0gKGgsIGwsIHMpID0+IGggPj4+IHM7XG5jb25zdCBzaHJTTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoMzIgLSBzKSkgfCAobCA+Pj4gcyk7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdHJTSCA9IChoLCBsLCBzKSA9PiAoaCA+Pj4gcykgfCAobCA8PCAoMzIgLSBzKSk7XG5jb25zdCByb3RyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90ckJIID0gKGgsIGwsIHMpID0+IChoIDw8ICg2NCAtIHMpKSB8IChsID4+PiAocyAtIDMyKSk7XG5jb25zdCByb3RyQkwgPSAoaCwgbCwgcykgPT4gKGggPj4+IChzIC0gMzIpKSB8IChsIDw8ICg2NCAtIHMpKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3Igc2hpZnQ9PT0zMiAoanVzdCBzd2FwcyBsJmgpXG5jb25zdCByb3RyMzJIID0gKGgsIGwpID0+IGw7XG5jb25zdCByb3RyMzJMID0gKGgsIGwpID0+IGg7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gWzEsIDMyKVxuY29uc3Qgcm90bFNIID0gKGgsIGwsIHMpID0+IChoIDw8IHMpIHwgKGwgPj4+ICgzMiAtIHMpKTtcbmNvbnN0IHJvdGxTTCA9IChoLCBsLCBzKSA9PiAobCA8PCBzKSB8IChoID4+PiAoMzIgLSBzKSk7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdGxCSCA9IChoLCBsLCBzKSA9PiAobCA8PCAocyAtIDMyKSkgfCAoaCA+Pj4gKDY0IC0gcykpO1xuY29uc3Qgcm90bEJMID0gKGgsIGwsIHMpID0+IChoIDw8IChzIC0gMzIpKSB8IChsID4+PiAoNjQgLSBzKSk7XG4vLyBKUyB1c2VzIDMyLWJpdCBzaWduZWQgaW50ZWdlcnMgZm9yIGJpdHdpc2Ugb3BlcmF0aW9ucyB3aGljaCBtZWFucyB3ZSBjYW5ub3Rcbi8vIHNpbXBsZSB0YWtlIGNhcnJ5IG91dCBvZiBsb3cgYml0IHN1bSBieSBzaGlmdCwgd2UgbmVlZCB0byB1c2UgZGl2aXNpb24uXG4vLyBSZW1vdmluZyBcImV4cG9ydFwiIGhhcyA1JSBwZXJmIHBlbmFsdHkgLV8tXG5leHBvcnQgZnVuY3Rpb24gYWRkKEFoLCBBbCwgQmgsIEJsKSB7XG4gICAgY29uc3QgbCA9IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApO1xuICAgIHJldHVybiB7IGg6IChBaCArIEJoICsgKChsIC8gMiAqKiAzMikgfCAwKSkgfCAwLCBsOiBsIHwgMCB9O1xufVxuLy8gQWRkaXRpb24gd2l0aCBtb3JlIHRoYW4gMiBlbGVtZW50c1xuY29uc3QgYWRkM0wgPSAoQWwsIEJsLCBDbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApO1xuY29uc3QgYWRkM0ggPSAobG93LCBBaCwgQmgsIENoKSA9PiAoQWggKyBCaCArIENoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ0TCA9IChBbCwgQmwsIENsLCBEbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApICsgKERsID4+PiAwKTtcbmNvbnN0IGFkZDRIID0gKGxvdywgQWgsIEJoLCBDaCwgRGgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuY29uc3QgYWRkNUwgPSAoQWwsIEJsLCBDbCwgRGwsIEVsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApICsgKEVsID4+PiAwKTtcbmNvbnN0IGFkZDVIID0gKGxvdywgQWgsIEJoLCBDaCwgRGgsIEVoKSA9PiAoQWggKyBCaCArIENoICsgRGggKyBFaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCB1NjQgPSB7XG4gICAgZnJvbUJpZywgc3BsaXQsIHRvQmlnLFxuICAgIHNoclNILCBzaHJTTCxcbiAgICByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsXG4gICAgcm90cjMySCwgcm90cjMyTCxcbiAgICByb3RsU0gsIHJvdGxTTCwgcm90bEJILCByb3RsQkwsXG4gICAgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLFxufTtcbmV4cG9ydCBkZWZhdWx0IHU2NDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/cryptoBrowser.js":
/*!*********************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/cryptoBrowser.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: function() { return /* binding */ crypto; }\n/* harmony export */ });\nconst crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG9Ccm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vY3J5cHRvQnJvd3Nlci5qcz83YTE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjcnlwdG8gPSB7XG4gICAgbm9kZTogdW5kZWZpbmVkLFxuICAgIHdlYjogdHlwZW9mIHNlbGYgPT09ICdvYmplY3QnICYmICdjcnlwdG8nIGluIHNlbGYgPyBzZWxmLmNyeXB0byA6IHVuZGVmaW5lZCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/cryptoBrowser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/hmac.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hmac: function() { return /* binding */ hmac; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// HMAC (RFC 2104)\nclass HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(hash);\n        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9obWFjLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUNTO0FBQzNDO0FBQ0EsbUJBQW1CLDJDQUFJO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBVztBQUNuQixvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWE7QUFDckIsUUFBUSx3REFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRSxnQkFBZ0IseURBQXlEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2htYWMuanM/OGQxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJy4vX2Fzc2VydC5qcyc7XG5pbXBvcnQgeyBIYXNoLCB0b0J5dGVzIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBITUFDIChSRkMgMjEwNClcbmNsYXNzIEhNQUMgZXh0ZW5kcyBIYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoLCBfa2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgYXNzZXJ0Lmhhc2goaGFzaCk7XG4gICAgICAgIGNvbnN0IGtleSA9IHRvQnl0ZXMoX2tleSk7XG4gICAgICAgIHRoaXMuaUhhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuaUhhc2gudXBkYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgaW5zdGFuY2Ugb2YgY2xhc3Mgd2hpY2ggZXh0ZW5kcyB1dGlscy5IYXNoJyk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSB0aGlzLmlIYXNoLmJsb2NrTGVuO1xuICAgICAgICB0aGlzLm91dHB1dExlbiA9IHRoaXMuaUhhc2gub3V0cHV0TGVuO1xuICAgICAgICBjb25zdCBibG9ja0xlbiA9IHRoaXMuYmxvY2tMZW47XG4gICAgICAgIGNvbnN0IHBhZCA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuKTtcbiAgICAgICAgLy8gYmxvY2tMZW4gY2FuIGJlIGJpZ2dlciB0aGFuIG91dHB1dExlblxuICAgICAgICBwYWQuc2V0KGtleS5sZW5ndGggPiBibG9ja0xlbiA/IGhhc2guY3JlYXRlKCkudXBkYXRlKGtleSkuZGlnZXN0KCkgOiBrZXkpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHBhZFtpXSBePSAweDM2O1xuICAgICAgICB0aGlzLmlIYXNoLnVwZGF0ZShwYWQpO1xuICAgICAgICAvLyBCeSBkb2luZyB1cGRhdGUgKHByb2Nlc3Npbmcgb2YgZmlyc3QgYmxvY2spIG9mIG91dGVyIGhhc2ggaGVyZSB3ZSBjYW4gcmUtdXNlIGl0IGJldHdlZW4gbXVsdGlwbGUgY2FsbHMgdmlhIGNsb25lXG4gICAgICAgIHRoaXMub0hhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICAvLyBVbmRvIGludGVybmFsIFhPUiAmJiBhcHBseSBvdXRlciBYT1JcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWQubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBwYWRbaV0gXj0gMHgzNiBeIDB4NWM7XG4gICAgICAgIHRoaXMub0hhc2gudXBkYXRlKHBhZCk7XG4gICAgICAgIHBhZC5maWxsKDApO1xuICAgIH1cbiAgICB1cGRhdGUoYnVmKSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIHRoaXMuaUhhc2gudXBkYXRlKGJ1Zik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3RJbnRvKG91dCkge1xuICAgICAgICBhc3NlcnQuZXhpc3RzKHRoaXMpO1xuICAgICAgICBhc3NlcnQuYnl0ZXMob3V0LCB0aGlzLm91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmlIYXNoLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC51cGRhdGUob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KHRoaXMub0hhc2gub3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIF9jbG9uZUludG8odG8pIHtcbiAgICAgICAgLy8gQ3JlYXRlIG5ldyBpbnN0YW5jZSB3aXRob3V0IGNhbGxpbmcgY29uc3RydWN0b3Igc2luY2Uga2V5IGFscmVhZHkgaW4gc3RhdGUgYW5kIHdlIGRvbid0IGtub3cgaXQuXG4gICAgICAgIHRvIHx8ICh0byA9IE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLCB7fSkpO1xuICAgICAgICBjb25zdCB7IG9IYXNoLCBpSGFzaCwgZmluaXNoZWQsIGRlc3Ryb3llZCwgYmxvY2tMZW4sIG91dHB1dExlbiB9ID0gdGhpcztcbiAgICAgICAgdG8gPSB0bztcbiAgICAgICAgdG8uZmluaXNoZWQgPSBmaW5pc2hlZDtcbiAgICAgICAgdG8uZGVzdHJveWVkID0gZGVzdHJveWVkO1xuICAgICAgICB0by5ibG9ja0xlbiA9IGJsb2NrTGVuO1xuICAgICAgICB0by5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRvLm9IYXNoID0gb0hhc2guX2Nsb25lSW50byh0by5vSGFzaCk7XG4gICAgICAgIHRvLmlIYXNoID0gaUhhc2guX2Nsb25lSW50byh0by5pSGFzaCk7XG4gICAgICAgIHJldHVybiB0bztcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLm9IYXNoLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5pSGFzaC5kZXN0cm95KCk7XG4gICAgfVxufVxuLyoqXG4gKiBITUFDOiBSRkMyMTA0IG1lc3NhZ2UgYXV0aGVudGljYXRpb24gY29kZS5cbiAqIEBwYXJhbSBoYXNoIC0gZnVuY3Rpb24gdGhhdCB3b3VsZCBiZSB1c2VkIGUuZy4gc2hhMjU2XG4gKiBAcGFyYW0ga2V5IC0gbWVzc2FnZSBrZXlcbiAqIEBwYXJhbSBtZXNzYWdlIC0gbWVzc2FnZSBkYXRhXG4gKi9cbmV4cG9ydCBjb25zdCBobWFjID0gKGhhc2gsIGtleSwgbWVzc2FnZSkgPT4gbmV3IEhNQUMoaGFzaCwga2V5KS51cGRhdGUobWVzc2FnZSkuZGlnZXN0KCk7XG5obWFjLmNyZWF0ZSA9IChoYXNoLCBrZXkpID0+IG5ldyBITUFDKGhhc2gsIGtleSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/ripemd160.js":
/*!*****************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/ripemd160.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RIPEMD160: function() { return /* binding */ RIPEMD160; },\n/* harmony export */   ripemd160: function() { return /* binding */ ripemd160; }\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nclass RIPEMD160 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nconst ripemd160 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new RIPEMD160());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9yaXBlbWQxNjAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrQztBQUNXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixZQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3QiwwQ0FBSTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXO0FBQ3ZDO0FBQ0Esb0RBQW9EO0FBQ3BELHNEQUFzRDtBQUN0RCw0REFBNEQ7QUFDNUQsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0EsMkVBQTJFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtCQUFrQiwwREFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vcmlwZW1kMTYwLmpzP2RjZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0hBMiB9IGZyb20gJy4vX3NoYTIuanMnO1xuaW1wb3J0IHsgd3JhcENvbnN0cnVjdG9yIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBodHRwczovL2hvbWVzLmVzYXQua3VsZXV2ZW4uYmUvfmJvc3NlbGFlL3JpcGVtZDE2MC5odG1sXG4vLyBodHRwczovL2hvbWVzLmVzYXQua3VsZXV2ZW4uYmUvfmJvc3NlbGFlL3JpcGVtZDE2MC9wZGYvQUItOTYwMS9BQi05NjAxLnBkZlxuY29uc3QgUmhvID0gbmV3IFVpbnQ4QXJyYXkoWzcsIDQsIDEzLCAxLCAxMCwgNiwgMTUsIDMsIDEyLCAwLCA5LCA1LCAyLCAxNCwgMTEsIDhdKTtcbmNvbnN0IElkID0gVWludDhBcnJheS5mcm9tKHsgbGVuZ3RoOiAxNiB9LCAoXywgaSkgPT4gaSk7XG5jb25zdCBQaSA9IElkLm1hcCgoaSkgPT4gKDkgKiBpICsgNSkgJSAxNik7XG5sZXQgaWR4TCA9IFtJZF07XG5sZXQgaWR4UiA9IFtQaV07XG5mb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKylcbiAgICBmb3IgKGxldCBqIG9mIFtpZHhMLCBpZHhSXSlcbiAgICAgICAgai5wdXNoKGpbaV0ubWFwKChrKSA9PiBSaG9ba10pKTtcbmNvbnN0IHNoaWZ0cyA9IFtcbiAgICBbMTEsIDE0LCAxNSwgMTIsIDUsIDgsIDcsIDksIDExLCAxMywgMTQsIDE1LCA2LCA3LCA5LCA4XSxcbiAgICBbMTIsIDEzLCAxMSwgMTUsIDYsIDksIDksIDcsIDEyLCAxNSwgMTEsIDEzLCA3LCA4LCA3LCA3XSxcbiAgICBbMTMsIDE1LCAxNCwgMTEsIDcsIDcsIDYsIDgsIDEzLCAxNCwgMTMsIDEyLCA1LCA1LCA2LCA5XSxcbiAgICBbMTQsIDExLCAxMiwgMTQsIDgsIDYsIDUsIDUsIDE1LCAxMiwgMTUsIDE0LCA5LCA5LCA4LCA2XSxcbiAgICBbMTUsIDEyLCAxMywgMTMsIDksIDUsIDgsIDYsIDE0LCAxMSwgMTIsIDExLCA4LCA2LCA1LCA1XSxcbl0ubWFwKChpKSA9PiBuZXcgVWludDhBcnJheShpKSk7XG5jb25zdCBzaGlmdHNMID0gaWR4TC5tYXAoKGlkeCwgaSkgPT4gaWR4Lm1hcCgoaikgPT4gc2hpZnRzW2ldW2pdKSk7XG5jb25zdCBzaGlmdHNSID0gaWR4Ui5tYXAoKGlkeCwgaSkgPT4gaWR4Lm1hcCgoaikgPT4gc2hpZnRzW2ldW2pdKSk7XG5jb25zdCBLbCA9IG5ldyBVaW50MzJBcnJheShbMHgwMDAwMDAwMCwgMHg1YTgyNzk5OSwgMHg2ZWQ5ZWJhMSwgMHg4ZjFiYmNkYywgMHhhOTUzZmQ0ZV0pO1xuY29uc3QgS3IgPSBuZXcgVWludDMyQXJyYXkoWzB4NTBhMjhiZTYsIDB4NWM0ZGQxMjQsIDB4NmQ3MDNlZjMsIDB4N2E2ZDc2ZTksIDB4MDAwMDAwMDBdKTtcbi8vIFRoZSByb3RhdGUgbGVmdCAoY2lyY3VsYXIgbGVmdCBzaGlmdCkgb3BlcmF0aW9uIGZvciB1aW50MzJcbmNvbnN0IHJvdGwgPSAod29yZCwgc2hpZnQpID0+ICh3b3JkIDw8IHNoaWZ0KSB8ICh3b3JkID4+PiAoMzIgLSBzaGlmdCkpO1xuLy8gSXQncyBjYWxsZWQgZigpIGluIHNwZWMuXG5mdW5jdGlvbiBmKGdyb3VwLCB4LCB5LCB6KSB7XG4gICAgaWYgKGdyb3VwID09PSAwKVxuICAgICAgICByZXR1cm4geCBeIHkgXiB6O1xuICAgIGVsc2UgaWYgKGdyb3VwID09PSAxKVxuICAgICAgICByZXR1cm4gKHggJiB5KSB8ICh+eCAmIHopO1xuICAgIGVsc2UgaWYgKGdyb3VwID09PSAyKVxuICAgICAgICByZXR1cm4gKHggfCB+eSkgXiB6O1xuICAgIGVsc2UgaWYgKGdyb3VwID09PSAzKVxuICAgICAgICByZXR1cm4gKHggJiB6KSB8ICh5ICYgfnopO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIHggXiAoeSB8IH56KTtcbn1cbi8vIFRlbXBvcmFyeSBidWZmZXIsIG5vdCB1c2VkIHRvIHN0b3JlIGFueXRoaW5nIGJldHdlZW4gcnVuc1xuY29uc3QgQlVGID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcbmV4cG9ydCBjbGFzcyBSSVBFTUQxNjAgZXh0ZW5kcyBTSEEyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoNjQsIDIwLCA4LCB0cnVlKTtcbiAgICAgICAgdGhpcy5oMCA9IDB4Njc0NTIzMDEgfCAwO1xuICAgICAgICB0aGlzLmgxID0gMHhlZmNkYWI4OSB8IDA7XG4gICAgICAgIHRoaXMuaDIgPSAweDk4YmFkY2ZlIHwgMDtcbiAgICAgICAgdGhpcy5oMyA9IDB4MTAzMjU0NzYgfCAwO1xuICAgICAgICB0aGlzLmg0ID0gMHhjM2QyZTFmMCB8IDA7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBoMCwgaDEsIGgyLCBoMywgaDQgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBbaDAsIGgxLCBoMiwgaDMsIGg0XTtcbiAgICB9XG4gICAgc2V0KGgwLCBoMSwgaDIsIGgzLCBoNCkge1xuICAgICAgICB0aGlzLmgwID0gaDAgfCAwO1xuICAgICAgICB0aGlzLmgxID0gaDEgfCAwO1xuICAgICAgICB0aGlzLmgyID0gaDIgfCAwO1xuICAgICAgICB0aGlzLmgzID0gaDMgfCAwO1xuICAgICAgICB0aGlzLmg0ID0gaDQgfCAwO1xuICAgIH1cbiAgICBwcm9jZXNzKHZpZXcsIG9mZnNldCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyssIG9mZnNldCArPSA0KVxuICAgICAgICAgICAgQlVGW2ldID0gdmlldy5nZXRVaW50MzIob2Zmc2V0LCB0cnVlKTtcbiAgICAgICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgIGxldCBhbCA9IHRoaXMuaDAgfCAwLCBhciA9IGFsLCBibCA9IHRoaXMuaDEgfCAwLCBiciA9IGJsLCBjbCA9IHRoaXMuaDIgfCAwLCBjciA9IGNsLCBkbCA9IHRoaXMuaDMgfCAwLCBkciA9IGRsLCBlbCA9IHRoaXMuaDQgfCAwLCBlciA9IGVsO1xuICAgICAgICAvLyBJbnN0ZWFkIG9mIGl0ZXJhdGluZyAwIHRvIDgwLCB3ZSBzcGxpdCBpdCBpbnRvIDUgZ3JvdXBzXG4gICAgICAgIC8vIEFuZCB1c2UgdGhlIGdyb3VwcyBpbiBjb25zdGFudHMsIGZ1bmN0aW9ucywgZXRjLiBNdWNoIHNpbXBsZXJcbiAgICAgICAgZm9yIChsZXQgZ3JvdXAgPSAwOyBncm91cCA8IDU7IGdyb3VwKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHJHcm91cCA9IDQgLSBncm91cDtcbiAgICAgICAgICAgIGNvbnN0IGhibCA9IEtsW2dyb3VwXSwgaGJyID0gS3JbZ3JvdXBdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgICAgIGNvbnN0IHJsID0gaWR4TFtncm91cF0sIHJyID0gaWR4Ultncm91cF07IC8vIHByZXR0aWVyLWlnbm9yZVxuICAgICAgICAgICAgY29uc3Qgc2wgPSBzaGlmdHNMW2dyb3VwXSwgc3IgPSBzaGlmdHNSW2dyb3VwXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0bCA9IChyb3RsKGFsICsgZihncm91cCwgYmwsIGNsLCBkbCkgKyBCVUZbcmxbaV1dICsgaGJsLCBzbFtpXSkgKyBlbCkgfCAwO1xuICAgICAgICAgICAgICAgIGFsID0gZWwsIGVsID0gZGwsIGRsID0gcm90bChjbCwgMTApIHwgMCwgY2wgPSBibCwgYmwgPSB0bDsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAyIGxvb3BzIGFyZSAxMCUgZmFzdGVyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ciA9IChyb3RsKGFyICsgZihyR3JvdXAsIGJyLCBjciwgZHIpICsgQlVGW3JyW2ldXSArIGhiciwgc3JbaV0pICsgZXIpIHwgMDtcbiAgICAgICAgICAgICAgICBhciA9IGVyLCBlciA9IGRyLCBkciA9IHJvdGwoY3IsIDEwKSB8IDAsIGNyID0gYnIsIGJyID0gdHI7IC8vIHByZXR0aWVyLWlnbm9yZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIEFkZCB0aGUgY29tcHJlc3NlZCBjaHVuayB0byB0aGUgY3VycmVudCBoYXNoIHZhbHVlXG4gICAgICAgIHRoaXMuc2V0KCh0aGlzLmgxICsgY2wgKyBkcikgfCAwLCAodGhpcy5oMiArIGRsICsgZXIpIHwgMCwgKHRoaXMuaDMgKyBlbCArIGFyKSB8IDAsICh0aGlzLmg0ICsgYWwgKyBicikgfCAwLCAodGhpcy5oMCArIGJsICsgY3IpIHwgMCk7XG4gICAgfVxuICAgIHJvdW5kQ2xlYW4oKSB7XG4gICAgICAgIEJVRi5maWxsKDApO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XG4gICAgICAgIHRoaXMuYnVmZmVyLmZpbGwoMCk7XG4gICAgICAgIHRoaXMuc2V0KDAsIDAsIDAsIDAsIDApO1xuICAgIH1cbn1cbi8qKlxuICogUklQRU1ELTE2MCAtIGEgaGFzaCBmdW5jdGlvbiBmcm9tIDE5OTBzLlxuICogQHBhcmFtIG1lc3NhZ2UgLSBtc2cgdGhhdCB3b3VsZCBiZSBoYXNoZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHJpcGVtZDE2MCA9IHdyYXBDb25zdHJ1Y3RvcigoKSA9PiBuZXcgUklQRU1EMTYwKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/ripemd160.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha256.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha224: function() { return /* binding */ sha224; },\n/* harmony export */   sha256: function() { return /* binding */ sha256; }\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());\nconst sha224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA224());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9zaGEyNTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrQztBQUNpQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwQ0FBSTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlCQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBLHlCQUF5QixRQUFRO0FBQ2pDO0FBQ0E7QUFDQSx1QkFBdUIsK0NBQUksV0FBVywrQ0FBSTtBQUMxQyx1QkFBdUIsK0NBQUksV0FBVywrQ0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxjQUFjLHlCQUF5QjtBQUN2Qyx3QkFBd0IsUUFBUTtBQUNoQywyQkFBMkIsK0NBQUksU0FBUywrQ0FBSSxVQUFVLCtDQUFJO0FBQzFEO0FBQ0EsMkJBQTJCLCtDQUFJLFNBQVMsK0NBQUksVUFBVSwrQ0FBSTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlLDBEQUFlO0FBQzlCLGVBQWUsMERBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL3NoYTI1Ni5qcz9iMmU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNIQTIgfSBmcm9tICcuL19zaGEyLmpzJztcbmltcG9ydCB7IHJvdHIsIHdyYXBDb25zdHJ1Y3RvciB9IGZyb20gJy4vdXRpbHMuanMnO1xuLy8gQ2hvaWNlOiBhID8gYiA6IGNcbmNvbnN0IENoaSA9IChhLCBiLCBjKSA9PiAoYSAmIGIpIF4gKH5hICYgYyk7XG4vLyBNYWpvcml0eSBmdW5jdGlvbiwgdHJ1ZSBpZiBhbnkgdHdvIGlucHVzdCBpcyB0cnVlXG5jb25zdCBNYWogPSAoYSwgYiwgYykgPT4gKGEgJiBiKSBeIChhICYgYykgXiAoYiAmIGMpO1xuLy8gUm91bmQgY29uc3RhbnRzOlxuLy8gZmlyc3QgMzIgYml0cyBvZiB0aGUgZnJhY3Rpb25hbCBwYXJ0cyBvZiB0aGUgY3ViZSByb290cyBvZiB0aGUgZmlyc3QgNjQgcHJpbWVzIDIuLjMxMSlcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgU0hBMjU2X0sgPSBuZXcgVWludDMyQXJyYXkoW1xuICAgIDB4NDI4YTJmOTgsIDB4NzEzNzQ0OTEsIDB4YjVjMGZiY2YsIDB4ZTliNWRiYTUsIDB4Mzk1NmMyNWIsIDB4NTlmMTExZjEsIDB4OTIzZjgyYTQsIDB4YWIxYzVlZDUsXG4gICAgMHhkODA3YWE5OCwgMHgxMjgzNWIwMSwgMHgyNDMxODViZSwgMHg1NTBjN2RjMywgMHg3MmJlNWQ3NCwgMHg4MGRlYjFmZSwgMHg5YmRjMDZhNywgMHhjMTliZjE3NCxcbiAgICAweGU0OWI2OWMxLCAweGVmYmU0Nzg2LCAweDBmYzE5ZGM2LCAweDI0MGNhMWNjLCAweDJkZTkyYzZmLCAweDRhNzQ4NGFhLCAweDVjYjBhOWRjLCAweDc2Zjk4OGRhLFxuICAgIDB4OTgzZTUxNTIsIDB4YTgzMWM2NmQsIDB4YjAwMzI3YzgsIDB4YmY1OTdmYzcsIDB4YzZlMDBiZjMsIDB4ZDVhNzkxNDcsIDB4MDZjYTYzNTEsIDB4MTQyOTI5NjcsXG4gICAgMHgyN2I3MGE4NSwgMHgyZTFiMjEzOCwgMHg0ZDJjNmRmYywgMHg1MzM4MGQxMywgMHg2NTBhNzM1NCwgMHg3NjZhMGFiYiwgMHg4MWMyYzkyZSwgMHg5MjcyMmM4NSxcbiAgICAweGEyYmZlOGExLCAweGE4MWE2NjRiLCAweGMyNGI4YjcwLCAweGM3NmM1MWEzLCAweGQxOTJlODE5LCAweGQ2OTkwNjI0LCAweGY0MGUzNTg1LCAweDEwNmFhMDcwLFxuICAgIDB4MTlhNGMxMTYsIDB4MWUzNzZjMDgsIDB4Mjc0ODc3NGMsIDB4MzRiMGJjYjUsIDB4MzkxYzBjYjMsIDB4NGVkOGFhNGEsIDB4NWI5Y2NhNGYsIDB4NjgyZTZmZjMsXG4gICAgMHg3NDhmODJlZSwgMHg3OGE1NjM2ZiwgMHg4NGM4NzgxNCwgMHg4Y2M3MDIwOCwgMHg5MGJlZmZmYSwgMHhhNDUwNmNlYiwgMHhiZWY5YTNmNywgMHhjNjcxNzhmMlxuXSk7XG4vLyBJbml0aWFsIHN0YXRlIChmaXJzdCAzMiBiaXRzIG9mIHRoZSBmcmFjdGlvbmFsIHBhcnRzIG9mIHRoZSBzcXVhcmUgcm9vdHMgb2YgdGhlIGZpcnN0IDggcHJpbWVzIDIuLjE5KTpcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgSVYgPSBuZXcgVWludDMyQXJyYXkoW1xuICAgIDB4NmEwOWU2NjcsIDB4YmI2N2FlODUsIDB4M2M2ZWYzNzIsIDB4YTU0ZmY1M2EsIDB4NTEwZTUyN2YsIDB4OWIwNTY4OGMsIDB4MWY4M2Q5YWIsIDB4NWJlMGNkMTlcbl0pO1xuLy8gVGVtcG9yYXJ5IGJ1ZmZlciwgbm90IHVzZWQgdG8gc3RvcmUgYW55dGhpbmcgYmV0d2VlbiBydW5zXG4vLyBOYW1lZCB0aGlzIHdheSBiZWNhdXNlIGl0IG1hdGNoZXMgc3BlY2lmaWNhdGlvbi5cbmNvbnN0IFNIQTI1Nl9XID0gbmV3IFVpbnQzMkFycmF5KDY0KTtcbmNsYXNzIFNIQTI1NiBleHRlbmRzIFNIQTIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcig2NCwgMzIsIDgsIGZhbHNlKTtcbiAgICAgICAgLy8gV2UgY2Fubm90IHVzZSBhcnJheSBoZXJlIHNpbmNlIGFycmF5IGFsbG93cyBpbmRleGluZyBieSB2YXJpYWJsZVxuICAgICAgICAvLyB3aGljaCBtZWFucyBvcHRpbWl6ZXIvY29tcGlsZXIgY2Fubm90IHVzZSByZWdpc3RlcnMuXG4gICAgICAgIHRoaXMuQSA9IElWWzBdIHwgMDtcbiAgICAgICAgdGhpcy5CID0gSVZbMV0gfCAwO1xuICAgICAgICB0aGlzLkMgPSBJVlsyXSB8IDA7XG4gICAgICAgIHRoaXMuRCA9IElWWzNdIHwgMDtcbiAgICAgICAgdGhpcy5FID0gSVZbNF0gfCAwO1xuICAgICAgICB0aGlzLkYgPSBJVls1XSB8IDA7XG4gICAgICAgIHRoaXMuRyA9IElWWzZdIHwgMDtcbiAgICAgICAgdGhpcy5IID0gSVZbN10gfCAwO1xuICAgIH1cbiAgICBnZXQoKSB7XG4gICAgICAgIGNvbnN0IHsgQSwgQiwgQywgRCwgRSwgRiwgRywgSCB9ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIFtBLCBCLCBDLCBELCBFLCBGLCBHLCBIXTtcbiAgICB9XG4gICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgc2V0KEEsIEIsIEMsIEQsIEUsIEYsIEcsIEgpIHtcbiAgICAgICAgdGhpcy5BID0gQSB8IDA7XG4gICAgICAgIHRoaXMuQiA9IEIgfCAwO1xuICAgICAgICB0aGlzLkMgPSBDIHwgMDtcbiAgICAgICAgdGhpcy5EID0gRCB8IDA7XG4gICAgICAgIHRoaXMuRSA9IEUgfCAwO1xuICAgICAgICB0aGlzLkYgPSBGIHwgMDtcbiAgICAgICAgdGhpcy5HID0gRyB8IDA7XG4gICAgICAgIHRoaXMuSCA9IEggfCAwO1xuICAgIH1cbiAgICBwcm9jZXNzKHZpZXcsIG9mZnNldCkge1xuICAgICAgICAvLyBFeHRlbmQgdGhlIGZpcnN0IDE2IHdvcmRzIGludG8gdGhlIHJlbWFpbmluZyA0OCB3b3JkcyB3WzE2Li42M10gb2YgdGhlIG1lc3NhZ2Ugc2NoZWR1bGUgYXJyYXlcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgaSsrLCBvZmZzZXQgKz0gNClcbiAgICAgICAgICAgIFNIQTI1Nl9XW2ldID0gdmlldy5nZXRVaW50MzIob2Zmc2V0LCBmYWxzZSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAxNjsgaSA8IDY0OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IFcxNSA9IFNIQTI1Nl9XW2kgLSAxNV07XG4gICAgICAgICAgICBjb25zdCBXMiA9IFNIQTI1Nl9XW2kgLSAyXTtcbiAgICAgICAgICAgIGNvbnN0IHMwID0gcm90cihXMTUsIDcpIF4gcm90cihXMTUsIDE4KSBeIChXMTUgPj4+IDMpO1xuICAgICAgICAgICAgY29uc3QgczEgPSByb3RyKFcyLCAxNykgXiByb3RyKFcyLCAxOSkgXiAoVzIgPj4+IDEwKTtcbiAgICAgICAgICAgIFNIQTI1Nl9XW2ldID0gKHMxICsgU0hBMjU2X1dbaSAtIDddICsgczAgKyBTSEEyNTZfV1tpIC0gMTZdKSB8IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ29tcHJlc3Npb24gZnVuY3Rpb24gbWFpbiBsb29wLCA2NCByb3VuZHNcbiAgICAgICAgbGV0IHsgQSwgQiwgQywgRCwgRSwgRiwgRywgSCB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2NDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBzaWdtYTEgPSByb3RyKEUsIDYpIF4gcm90cihFLCAxMSkgXiByb3RyKEUsIDI1KTtcbiAgICAgICAgICAgIGNvbnN0IFQxID0gKEggKyBzaWdtYTEgKyBDaGkoRSwgRiwgRykgKyBTSEEyNTZfS1tpXSArIFNIQTI1Nl9XW2ldKSB8IDA7XG4gICAgICAgICAgICBjb25zdCBzaWdtYTAgPSByb3RyKEEsIDIpIF4gcm90cihBLCAxMykgXiByb3RyKEEsIDIyKTtcbiAgICAgICAgICAgIGNvbnN0IFQyID0gKHNpZ21hMCArIE1haihBLCBCLCBDKSkgfCAwO1xuICAgICAgICAgICAgSCA9IEc7XG4gICAgICAgICAgICBHID0gRjtcbiAgICAgICAgICAgIEYgPSBFO1xuICAgICAgICAgICAgRSA9IChEICsgVDEpIHwgMDtcbiAgICAgICAgICAgIEQgPSBDO1xuICAgICAgICAgICAgQyA9IEI7XG4gICAgICAgICAgICBCID0gQTtcbiAgICAgICAgICAgIEEgPSAoVDEgKyBUMikgfCAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFkZCB0aGUgY29tcHJlc3NlZCBjaHVuayB0byB0aGUgY3VycmVudCBoYXNoIHZhbHVlXG4gICAgICAgIEEgPSAoQSArIHRoaXMuQSkgfCAwO1xuICAgICAgICBCID0gKEIgKyB0aGlzLkIpIHwgMDtcbiAgICAgICAgQyA9IChDICsgdGhpcy5DKSB8IDA7XG4gICAgICAgIEQgPSAoRCArIHRoaXMuRCkgfCAwO1xuICAgICAgICBFID0gKEUgKyB0aGlzLkUpIHwgMDtcbiAgICAgICAgRiA9IChGICsgdGhpcy5GKSB8IDA7XG4gICAgICAgIEcgPSAoRyArIHRoaXMuRykgfCAwO1xuICAgICAgICBIID0gKEggKyB0aGlzLkgpIHwgMDtcbiAgICAgICAgdGhpcy5zZXQoQSwgQiwgQywgRCwgRSwgRiwgRywgSCk7XG4gICAgfVxuICAgIHJvdW5kQ2xlYW4oKSB7XG4gICAgICAgIFNIQTI1Nl9XLmZpbGwoMCk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuc2V0KDAsIDAsIDAsIDAsIDAsIDAsIDAsIDApO1xuICAgICAgICB0aGlzLmJ1ZmZlci5maWxsKDApO1xuICAgIH1cbn1cbi8vIENvbnN0YW50cyBmcm9tIGh0dHBzOi8vbnZscHVicy5uaXN0Lmdvdi9uaXN0cHVicy9GSVBTL05JU1QuRklQUy4xODAtNC5wZGZcbmNsYXNzIFNIQTIyNCBleHRlbmRzIFNIQTI1NiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuQSA9IDB4YzEwNTllZDggfCAwO1xuICAgICAgICB0aGlzLkIgPSAweDM2N2NkNTA3IHwgMDtcbiAgICAgICAgdGhpcy5DID0gMHgzMDcwZGQxNyB8IDA7XG4gICAgICAgIHRoaXMuRCA9IDB4ZjcwZTU5MzkgfCAwO1xuICAgICAgICB0aGlzLkUgPSAweGZmYzAwYjMxIHwgMDtcbiAgICAgICAgdGhpcy5GID0gMHg2ODU4MTUxMSB8IDA7XG4gICAgICAgIHRoaXMuRyA9IDB4NjRmOThmYTcgfCAwO1xuICAgICAgICB0aGlzLkggPSAweGJlZmE0ZmE0IHwgMDtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSAyODtcbiAgICB9XG59XG4vKipcbiAqIFNIQTItMjU2IGhhc2ggZnVuY3Rpb25cbiAqIEBwYXJhbSBtZXNzYWdlIC0gZGF0YSB0aGF0IHdvdWxkIGJlIGhhc2hlZFxuICovXG5leHBvcnQgY29uc3Qgc2hhMjU2ID0gd3JhcENvbnN0cnVjdG9yKCgpID0+IG5ldyBTSEEyNTYoKSk7XG5leHBvcnQgY29uc3Qgc2hhMjI0ID0gd3JhcENvbnN0cnVjdG9yKCgpID0+IG5ldyBTSEEyMjQoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha512.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA512: function() { return /* binding */ SHA512; },\n/* harmony export */   sha384: function() { return /* binding */ sha384; },\n/* harmony export */   sha512: function() { return /* binding */ sha512; },\n/* harmony export */   sha512_224: function() { return /* binding */ sha512_224; },\n/* harmony export */   sha512_256: function() { return /* binding */ sha512_256; }\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_sha2.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nconst sha512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());\nconst sha512_224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_224());\nconst sha512_256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());\nconst sha384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/utils.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: function() { return /* binding */ Hash; },\n/* harmony export */   asyncLoop: function() { return /* binding */ asyncLoop; },\n/* harmony export */   bytesToHex: function() { return /* binding */ bytesToHex; },\n/* harmony export */   checkOpts: function() { return /* binding */ checkOpts; },\n/* harmony export */   concatBytes: function() { return /* binding */ concatBytes; },\n/* harmony export */   createView: function() { return /* binding */ createView; },\n/* harmony export */   hexToBytes: function() { return /* binding */ hexToBytes; },\n/* harmony export */   isLE: function() { return /* binding */ isLE; },\n/* harmony export */   nextTick: function() { return /* binding */ nextTick; },\n/* harmony export */   randomBytes: function() { return /* binding */ randomBytes; },\n/* harmony export */   rotr: function() { return /* binding */ rotr; },\n/* harmony export */   toBytes: function() { return /* binding */ toBytes; },\n/* harmony export */   u32: function() { return /* binding */ u32; },\n/* harmony export */   u8: function() { return /* binding */ u8; },\n/* harmony export */   utf8ToBytes: function() { return /* binding */ utf8ToBytes; },\n/* harmony export */   wrapConstructor: function() { return /* binding */ wrapConstructor; },\n/* harmony export */   wrapConstructorWithOpts: function() { return /* binding */ wrapConstructorWithOpts; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/cryptoBrowser.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\n\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.web) {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.node) {\n        return new Uint8Array(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@noble/secp256k1/lib/esm/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURVE: function() { return /* binding */ CURVE; },\n/* harmony export */   Point: function() { return /* binding */ Point; },\n/* harmony export */   Signature: function() { return /* binding */ Signature; },\n/* harmony export */   getPublicKey: function() { return /* binding */ getPublicKey; },\n/* harmony export */   getSharedSecret: function() { return /* binding */ getSharedSecret; },\n/* harmony export */   recoverPublicKey: function() { return /* binding */ recoverPublicKey; },\n/* harmony export */   schnorr: function() { return /* binding */ schnorr; },\n/* harmony export */   sign: function() { return /* binding */ sign; },\n/* harmony export */   signSync: function() { return /* binding */ signSync; },\n/* harmony export */   utils: function() { return /* binding */ utils; },\n/* harmony export */   verify: function() { return /* binding */ verify; }\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"?d36c\");\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\n\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\n\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nconst schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: /*#__PURE__*/ (crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(crypto__WEBPACK_IMPORTED_MODULE_0__, 2))),\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nconst utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/secp256k1/lib/esm/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fmarc13000%2FDocuments%2FGitHub%2FRebrew-Stacks%2Fmy-project%2Fmintrust%2Fapp%2Flayout.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);